{"ast":null,"code":"// src/internal/util.ts\nvar includes = (value, search) => !!~value.indexOf(search);\nvar join = (parts, separator = \"-\") => parts.join(separator);\nvar joinTruthy = (parts, separator) => join(parts.filter(Boolean), separator);\nvar tail = (array, startIndex = 1) => array.slice(startIndex);\nvar identity = value => value;\nvar noop = () => {};\nvar capitalize = value => value[0].toUpperCase() + tail(value);\nvar hyphenate = value => value.replace(/[A-Z]/g, \"-$&\").toLowerCase();\nvar evalThunk = (value, context) => {\n  while (typeof value == \"function\") {\n    value = value(context);\n  }\n  return value;\n};\nvar ensureMaxSize = (map, max) => {\n  if (map.size > max) {\n    map.delete(map.keys().next().value);\n  }\n};\nvar isCSSProperty = (key, value) => !includes(\"@:&\", key[0]) && (includes(\"rg\", (typeof value)[5]) || Array.isArray(value));\nvar merge = (target, source, context) => source ? Object.keys(source).reduce((target2, key) => {\n  const value = evalThunk(source[key], context);\n  if (isCSSProperty(key, value)) {\n    target2[hyphenate(key)] = value;\n  } else {\n    target2[key] = key[0] == \"@\" && includes(\"figa\", key[1]) ? (target2[key] || []).concat(value) : merge(target2[key] || {}, value, context);\n  }\n  return target2;\n}, target) : target;\nvar escape = typeof CSS !== \"undefined\" && CSS.escape || (className => className.replace(/[!\"'`*+.,;:\\\\/<=>?@#$%&^|~()[\\]{}]/g, \"\\\\$&\").replace(/^\\d/, \"\\\\3$& \"));\nvar buildMediaQuery = screen => {\n  if (!Array.isArray(screen)) {\n    screen = [screen];\n  }\n  return \"@media \" + join(screen.map(screen2 => {\n    if (typeof screen2 == \"string\") {\n      screen2 = {\n        min: screen2\n      };\n    }\n    return screen2.raw || join(Object.keys(screen2).map(feature => `(${feature}-width:${screen2[feature]})`), \" and \");\n  }), \",\");\n};\nvar cyrb32 = value => {\n  for (var h = 9, index = value.length; index--;) {\n    h = Math.imul(h ^ value.charCodeAt(index), 1597334677);\n  }\n  return \"tw-\" + ((h ^ h >>> 9) >>> 0).toString(36);\n};\nvar sortedInsertionIndex = (array, element) => {\n  for (var low = 0, high = array.length; low < high;) {\n    const pivot = high + low >> 1;\n    if (array[pivot] <= element) {\n      low = pivot + 1;\n    } else {\n      high = pivot;\n    }\n  }\n  return high;\n};\n\n// src/twind/parse.ts\nvar groupings;\nvar rules;\nvar startGrouping = (value = \"\") => {\n  groupings.push(value);\n  return \"\";\n};\nvar endGrouping = isWhitespace => {\n  groupings.length = Math.max(groupings.lastIndexOf(\"\") + ~~isWhitespace, 0);\n};\nvar onlyPrefixes = s => s && !includes(\"!:\", s[0]);\nvar onlyVariants = s => s[0] == \":\";\nvar addRule = (directive2, negate) => {\n  rules.push({\n    v: groupings.filter(onlyVariants),\n    d: directive2,\n    n: negate,\n    i: includes(groupings, \"!\"),\n    $: \"\"\n  });\n};\nvar saveRule = buffer => {\n  const negate = buffer[0] == \"-\";\n  if (negate) {\n    buffer = tail(buffer);\n  }\n  const prefix = join(groupings.filter(onlyPrefixes));\n  addRule(buffer == \"&\" ? prefix : (prefix && prefix + \"-\") + buffer, negate);\n  return \"\";\n};\nvar parseString = (token, isVariant) => {\n  let buffer = \"\";\n  for (let char, dynamic = false, position2 = 0; char = token[position2++];) {\n    if (dynamic || char == \"[\") {\n      buffer += char;\n      dynamic = char != \"]\";\n      continue;\n    }\n    switch (char) {\n      case \":\":\n        buffer = buffer && startGrouping(\":\" + (token[position2] == char ? token[position2++] : \"\") + buffer);\n        break;\n      case \"(\":\n        buffer = buffer && startGrouping(buffer);\n        startGrouping();\n        break;\n      case \"!\":\n        startGrouping(char);\n        break;\n      case \")\":\n      case \" \":\n      case \"\t\":\n      case \"\\n\":\n      case \"\\r\":\n        buffer = buffer && saveRule(buffer);\n        endGrouping(char !== \")\");\n        break;\n      default:\n        buffer += char;\n    }\n  }\n  if (buffer) {\n    if (isVariant) {\n      startGrouping(\":\" + buffer);\n    } else if (buffer.slice(-1) == \"-\") {\n      startGrouping(buffer.slice(0, -1));\n    } else {\n      saveRule(buffer);\n    }\n  }\n};\nvar parseGroupedToken = token => {\n  startGrouping();\n  parseToken(token);\n  endGrouping();\n};\nvar parseGroup = (key, token) => {\n  if (token) {\n    startGrouping();\n    const isVariant = includes(\"tbu\", (typeof token)[1]);\n    parseString(key, isVariant);\n    if (isVariant) {\n      parseGroupedToken(token);\n    }\n    endGrouping();\n  }\n};\nvar parseToken = token => {\n  switch (typeof token) {\n    case \"string\":\n      parseString(token);\n      break;\n    case \"function\":\n      addRule(token);\n      break;\n    case \"object\":\n      if (Array.isArray(token)) {\n        token.forEach(parseGroupedToken);\n      } else if (token) {\n        Object.keys(token).forEach(key => {\n          parseGroup(key, token[key]);\n        });\n      }\n  }\n};\nvar staticsCaches = new WeakMap();\nvar buildStatics = strings => {\n  let statics = staticsCaches.get(strings);\n  if (!statics) {\n    let slowModeIndex = NaN;\n    let buffer = \"\";\n    statics = strings.map((token, index) => {\n      if (slowModeIndex !== slowModeIndex && (token.slice(-1) == \"[\" || includes(\":-(\", (strings[index + 1] || \"\")[0]))) {\n        slowModeIndex = index;\n      }\n      if (index >= slowModeIndex) {\n        return interpolation => {\n          if (index == slowModeIndex) {\n            buffer = \"\";\n          }\n          buffer += token;\n          if (includes(\"rg\", (typeof interpolation)[5])) {\n            buffer += interpolation;\n          } else if (interpolation) {\n            parseString(buffer);\n            buffer = \"\";\n            parseToken(interpolation);\n          }\n          if (index == strings.length - 1) {\n            parseString(buffer);\n          }\n        };\n      }\n      const staticRules = rules = [];\n      parseString(token);\n      const activeGroupings = [...groupings];\n      rules = [];\n      return interpolation => {\n        rules.push(...staticRules);\n        groupings = [...activeGroupings];\n        if (interpolation) {\n          parseToken(interpolation);\n        }\n      };\n    });\n    staticsCaches.set(strings, statics);\n  }\n  return statics;\n};\nvar parse = tokens => {\n  groupings = [];\n  rules = [];\n  if (Array.isArray(tokens[0]) && Array.isArray(tokens[0].raw)) {\n    buildStatics(tokens[0]).forEach((apply2, index) => apply2(tokens[index + 1]));\n  } else {\n    parseToken(tokens);\n  }\n  return rules;\n};\n\n// src/twind/directive.ts\nvar isFunctionFree;\nvar detectFunction = (key, value) => {\n  if (typeof value == \"function\") {\n    isFunctionFree = false;\n  }\n  return value;\n};\nvar stringify = data => {\n  isFunctionFree = true;\n  const key = JSON.stringify(data, detectFunction);\n  return isFunctionFree && key;\n};\nvar cacheByFactory = new WeakMap();\nvar directive = (factory, data) => {\n  const key = stringify(data);\n  let directive2;\n  if (key) {\n    var cache = cacheByFactory.get(factory);\n    if (!cache) {\n      cacheByFactory.set(factory, cache = new Map());\n    }\n    directive2 = cache.get(key);\n  }\n  if (!directive2) {\n    directive2 = Object.defineProperty((params, context) => {\n      context = Array.isArray(params) ? context : params;\n      return evalThunk(factory(data, context), context);\n    }, \"toJSON\", {\n      value: () => key || data\n    });\n    if (cache) {\n      cache.set(key, directive2);\n      ensureMaxSize(cache, 1e4);\n    }\n  }\n  return directive2;\n};\n\n// src/twind/apply.ts\nvar applyFactory = (tokens, {\n  css\n}) => css(parse(tokens));\nvar apply = (...tokens) => directive(applyFactory, tokens);\n\n// src/twind/helpers.ts\nvar positions = resolve => (value, position2, prefix, suffix) => {\n  if (value) {\n    const properties = position2 && resolve(position2);\n    if (properties && properties.length > 0) {\n      return properties.reduce((declarations, property2) => {\n        declarations[joinTruthy([prefix, property2, suffix])] = value;\n        return declarations;\n      }, {});\n    }\n  }\n};\nvar corners = /* @__PURE__ */positions(key => ({\n  t: [\"top-left\", \"top-right\"],\n  r: [\"top-right\", \"bottom-right\"],\n  b: [\"bottom-left\", \"bottom-right\"],\n  l: [\"bottom-left\", \"top-left\"],\n  tl: [\"top-left\"],\n  tr: [\"top-right\"],\n  bl: [\"bottom-left\"],\n  br: [\"bottom-right\"]\n})[key]);\nvar expandEdges = key => {\n  const parts = ({\n    x: \"lr\",\n    y: \"tb\"\n  }[key] || key || \"\").split(\"\").sort();\n  for (let index = parts.length; index--;) {\n    if (!(parts[index] = {\n      t: \"top\",\n      r: \"right\",\n      b: \"bottom\",\n      l: \"left\"\n    }[parts[index]])) return;\n  }\n  if (parts.length) return parts;\n};\nvar edges = /* @__PURE__ */positions(expandEdges);\nvar stringifyVariant = (selector, variant) => selector + (variant[1] == \":\" ? tail(variant, 2) + \":\" : tail(variant)) + \":\";\nvar stringifyRule = (rule, directive2 = rule.d) => typeof directive2 == \"function\" ? \"\" : rule.v.reduce(stringifyVariant, \"\") + (rule.i ? \"!\" : \"\") + (rule.n ? \"-\" : \"\") + directive2;\n\n// src/twind/plugins.ts\nvar _;\nvar __;\nvar $;\nvar toColumnsOrRows = x => x == \"cols\" ? \"columns\" : \"rows\";\nvar property = property2 => (params, context, id) => ({\n  [property2]: id + ((_ = join(params)) && \"-\" + _)\n});\nvar propertyValue = (property2, separator) => (params, context, id) => (_ = join(params, separator)) && {\n  [property2 || id]: _\n};\nvar themeProperty = section => (params, {\n  theme: theme2\n}, id) => (_ = theme2(section || id, params)) && {\n  [section || id]: _\n};\nvar themePropertyFallback = (section, separator) => (params, {\n  theme: theme2\n}, id) => (_ = theme2(section || id, params, join(params, separator))) && {\n  [section || id]: _\n};\nvar alias = (handler, name) => (params, context) => handler(params, context, name);\nvar display = property(\"display\");\nvar position = property(\"position\");\nvar textTransform = property(\"textTransform\");\nvar textDecoration = property(\"textDecoration\");\nvar fontStyle = property(\"fontStyle\");\nvar fontVariantNumeric = key => (params, context, id) => ({\n  [\"--tw-\" + key]: id,\n  fontVariantNumeric: \"var(--tw-ordinal,/*!*/ /*!*/) var(--tw-slashed-zero,/*!*/ /*!*/) var(--tw-numeric-figure,/*!*/ /*!*/) var(--tw-numeric-spacing,/*!*/ /*!*/) var(--tw-numeric-fraction,/*!*/ /*!*/)\"\n});\nvar inset = (params, {\n  theme: theme2\n}, id) => (_ = theme2(\"inset\", params)) && {\n  [id]: _\n};\nvar opacityProperty = (params, theme2, id, section = id) => (_ = theme2(section + \"Opacity\", tail(params))) && {\n  [`--tw-${id}-opacity`]: _\n};\nvar parseColorComponent = (chars, factor) => Math.round(parseInt(chars, 16) * factor);\nvar asRGBA = (color, opacityProperty2, opacityDefault) => {\n  if (color && color[0] == \"#\" && (_ = (color.length - 1) / 3) && ($ = [17, 1, 0.062272][_ - 1])) {\n    return `rgba(${parseColorComponent(color.substr(1, _), $)},${parseColorComponent(color.substr(1 + _, _), $)},${parseColorComponent(color.substr(1 + 2 * _, _), $)},${opacityProperty2 ? `var(--tw-${opacityProperty2}${opacityDefault ? \",\" + opacityDefault : \"\"})` : opacityDefault || 1})`;\n  }\n  return color;\n};\nvar withOpacityFallback = (property2, kind, color) => color && typeof color == \"string\" ? (_ = asRGBA(color, kind + \"-opacity\")) && _ !== color ? {\n  [`--tw-${kind}-opacity`]: \"1\",\n  [property2]: [color, _]\n} : {\n  [property2]: color\n} : void 0;\nvar transparentTo = color => ($ = asRGBA(color, \"\", \"0\")) == _ ? \"transparent\" : $;\nvar reversableEdge = (params, {\n  theme: theme2\n}, id, section, prefix, suffix) => (_ = {\n  x: [\"right\", \"left\"],\n  y: [\"bottom\", \"top\"]\n}[params[0]]) && ($ = `--tw-${id}-${params[0]}-reverse`) ? params[1] == \"reverse\" ? {\n  [$]: \"1\"\n} : {\n  [$]: \"0\",\n  [joinTruthy([prefix, _[0], suffix])]: (__ = theme2(section, tail(params))) && `calc(${__} * var(${$}))`,\n  [joinTruthy([prefix, _[1], suffix])]: __ && [__, `calc(${__} * calc(1 - var(${$})))`]\n} : void 0;\nvar placeHelper = (property2, params) => params[0] && {\n  [property2]: (includes(\"wun\", (params[0] || \"\")[3]) ? \"space-\" : \"\") + params[0]\n};\nvar contentPluginFor = property2 => params => includes([\"start\", \"end\"], params[0]) ? {\n  [property2]: \"flex-\" + params[0]\n} : placeHelper(property2, params);\nvar gridPlugin = kind => (params, {\n  theme: theme2\n}) => {\n  if (_ = theme2(\"grid\" + capitalize(kind), params, \"\")) {\n    return {\n      [\"grid-\" + kind]: _\n    };\n  }\n  switch (params[0]) {\n    case \"span\":\n      return params[1] && {\n        [\"grid-\" + kind]: `span ${params[1]} / span ${params[1]}`\n      };\n    case \"start\":\n    case \"end\":\n      return (_ = theme2(\"grid\" + capitalize(kind) + capitalize(params[0]), tail(params), join(tail(params)))) && {\n        [`grid-${kind}-${params[0]}`]: _\n      };\n  }\n};\nvar border = (params, {\n  theme: theme2\n}, id) => {\n  switch (params[0]) {\n    case \"solid\":\n    case \"dashed\":\n    case \"dotted\":\n    case \"double\":\n    case \"none\":\n      return propertyValue(\"borderStyle\")(params);\n    case \"collapse\":\n    case \"separate\":\n      return propertyValue(\"borderCollapse\")(params);\n    case \"opacity\":\n      return opacityProperty(params, theme2, id);\n  }\n  return (_ = theme2(id + \"Width\", params, \"\")) ? {\n    borderWidth: _\n  } : withOpacityFallback(\"borderColor\", id, theme2(id + \"Color\", params));\n};\nvar borderEdges = (params, context, id) => {\n  var _a;\n  const edges2 = (_a = expandEdges(params[0])) == null ? void 0 : _a.map(capitalize);\n  if (edges2) {\n    params = tail(params);\n  }\n  let rules2 = border(params, context, id);\n  if (edges2 && rules2 && typeof rules2 === \"object\") {\n    rules2 = Object.entries(rules2).reduce((newRules, [key, value]) => {\n      if (key.startsWith(\"border\")) {\n        for (const edge of edges2) {\n          newRules[key.slice(0, 6) + edge + key.slice(6)] = value;\n        }\n      } else {\n        newRules[key] = value;\n      }\n      return newRules;\n    }, {});\n  }\n  return rules2;\n};\nvar transform = gpu => (gpu ? \"translate3d(var(--tw-translate-x,0),var(--tw-translate-y,0),0)\" : \"translateX(var(--tw-translate-x,0)) translateY(var(--tw-translate-y,0))\") + \" rotate(var(--tw-rotate,0)) skewX(var(--tw-skew-x,0)) skewY(var(--tw-skew-y,0)) scaleX(var(--tw-scale-x,1)) scaleY(var(--tw-scale-y,1))\";\nvar transformXYFunction = (params, context, id) => params[0] && (_ = context.theme(id, params[1] || params[0])) && {\n  [`--tw-${id}-x`]: params[0] !== \"y\" && _,\n  [`--tw-${id}-y`]: params[0] !== \"x\" && _,\n  transform: [`${id}${params[1] ? params[0].toUpperCase() : \"\"}(${_})`, transform()]\n};\nvar edgesPluginFor = key => (params, context, id) => id[1] ? edges(context.theme(key, params), id[1], key) : themeProperty(key)(params, context, id);\nvar padding = edgesPluginFor(\"padding\");\nvar margin = edgesPluginFor(\"margin\");\nvar minMax = (params, {\n  theme: theme2\n}, id) => (_ = {\n  w: \"width\",\n  h: \"height\"\n}[params[0]]) && {\n  [_ = `${id}${capitalize(_)}`]: theme2(_, tail(params))\n};\nvar filter = (params, {\n  theme: theme2\n}, id) => {\n  const parts = id.split(\"-\");\n  const prefix = parts[0] == \"backdrop\" ? parts[0] + \"-\" : \"\";\n  if (!prefix) {\n    params.unshift(...parts);\n  }\n  if (params[0] == \"filter\") {\n    const filters = [\"blur\", \"brightness\", \"contrast\", \"grayscale\", \"hue-rotate\", \"invert\", prefix && \"opacity\", \"saturate\", \"sepia\", !prefix && \"drop-shadow\"].filter(Boolean);\n    return params[1] == \"none\" ? {\n      [prefix + \"filter\"]: \"none\"\n    } : filters.reduce((css, key) => {\n      css[\"--tw-\" + prefix + key] = \"var(--tw-empty,/*!*/ /*!*/)\";\n      return css;\n    }, {\n      [prefix + \"filter\"]: filters.map(key => `var(--tw-${prefix}${key})`).join(\" \")\n    });\n  }\n  $ = params.shift();\n  if (includes([\"hue\", \"drop\"], $)) $ += capitalize(params.shift());\n  return (_ = theme2(prefix ? \"backdrop\" + capitalize($) : $, params)) && {\n    [\"--tw-\" + prefix + $]: (Array.isArray(_) ? _ : [_]).map(_4 => `${hyphenate($)}(${_4})`).join(\" \")\n  };\n};\nvar corePlugins = {\n  group: (params, {\n    tag\n  }, id) => tag(join([id, ...params])),\n  hidden: alias(display, \"none\"),\n  inline: display,\n  block: display,\n  contents: display,\n  flow: display,\n  table: (params, context, id) => includes([\"auto\", \"fixed\"], params[0]) ? {\n    tableLayout: params[0]\n  } : display(params, context, id),\n  flex(params, context, id) {\n    switch (params[0]) {\n      case \"row\":\n      case \"col\":\n        return {\n          flexDirection: join(params[0] == \"col\" ? [\"column\", ...tail(params)] : params)\n        };\n      case \"nowrap\":\n      case \"wrap\":\n        return {\n          flexWrap: join(params)\n        };\n      case \"grow\":\n      case \"shrink\":\n        _ = context.theme(\"flex\" + capitalize(params[0]), tail(params), params[1] || 1);\n        return _ != null && {\n          [\"flex-\" + params[0]]: \"\" + _\n        };\n    }\n    return (_ = context.theme(\"flex\", params, \"\")) ? {\n      flex: _\n    } : display(params, context, id);\n  },\n  grid(params, context, id) {\n    switch (params[0]) {\n      case \"cols\":\n      case \"rows\":\n        return (_ = context.theme(\"gridTemplate\" + capitalize(toColumnsOrRows(params[0])), tail(params), params.length == 2 && Number(params[1]) ? `repeat(${params[1]},minmax(0,1fr))` : join(tail(params)))) && {\n          [\"gridTemplate-\" + toColumnsOrRows(params[0])]: _\n        };\n      case \"flow\":\n        return params.length > 1 && {\n          gridAutoFlow: join(params[1] == \"col\" ? [\"column\", ...tail(params, 2)] : tail(params), \" \")\n        };\n    }\n    return display(params, context, id);\n  },\n  auto: (params, {\n    theme: theme2\n  }) => includes([\"cols\", \"rows\"], params[0]) && (_ = theme2(\"gridAuto\" + capitalize(toColumnsOrRows(params[0])), tail(params), join(tail(params)))) && {\n    [\"gridAuto-\" + toColumnsOrRows(params[0])]: _\n  },\n  static: position,\n  fixed: position,\n  absolute: position,\n  relative: position,\n  sticky: position,\n  visible: {\n    visibility: \"visible\"\n  },\n  invisible: {\n    visibility: \"hidden\"\n  },\n  antialiased: {\n    WebkitFontSmoothing: \"antialiased\",\n    MozOsxFontSmoothing: \"grayscale\"\n  },\n  \"subpixel-antialiased\": {\n    WebkitFontSmoothing: \"auto\",\n    MozOsxFontSmoothing: \"auto\"\n  },\n  truncate: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\"\n  },\n  \"sr-only\": {\n    position: \"absolute\",\n    width: \"1px\",\n    height: \"1px\",\n    padding: \"0\",\n    margin: \"-1px\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    clip: \"rect(0,0,0,0)\",\n    borderWidth: \"0\"\n  },\n  \"not-sr-only\": {\n    position: \"static\",\n    width: \"auto\",\n    height: \"auto\",\n    padding: \"0\",\n    margin: \"0\",\n    overflow: \"visible\",\n    whiteSpace: \"normal\",\n    clip: \"auto\"\n  },\n  resize: params => ({\n    resize: {\n      x: \"horizontal\",\n      y: \"vertical\"\n    }[params[0]] || params[0] || \"both\"\n  }),\n  box: params => params[0] && {\n    boxSizing: params[0] + \"-box\"\n  },\n  appearance: propertyValue(),\n  cursor: themePropertyFallback(),\n  float: propertyValue(),\n  clear: propertyValue(),\n  decoration: propertyValue(\"boxDecorationBreak\"),\n  isolate: {\n    isolation: \"isolate\"\n  },\n  isolation: propertyValue(),\n  \"mix-blend\": propertyValue(\"mixBlendMode\"),\n  top: inset,\n  right: inset,\n  bottom: inset,\n  left: inset,\n  inset: (params, {\n    theme: theme2\n  }) => (_ = expandEdges(params[0])) ? edges(theme2(\"inset\", tail(params)), params[0]) : (_ = theme2(\"inset\", params)) && {\n    top: _,\n    right: _,\n    bottom: _,\n    left: _\n  },\n  underline: textDecoration,\n  \"line-through\": textDecoration,\n  \"no-underline\": alias(textDecoration, \"none\"),\n  \"text-underline\": alias(textDecoration, \"underline\"),\n  \"text-no-underline\": alias(textDecoration, \"none\"),\n  \"text-line-through\": alias(textDecoration, \"line-through\"),\n  uppercase: textTransform,\n  lowercase: textTransform,\n  capitalize: textTransform,\n  \"normal-case\": alias(textTransform, \"none\"),\n  \"text-normal-case\": alias(textTransform, \"none\"),\n  italic: fontStyle,\n  \"not-italic\": alias(fontStyle, \"normal\"),\n  \"font-italic\": alias(fontStyle, \"italic\"),\n  \"font-not-italic\": alias(fontStyle, \"normal\"),\n  font: (params, context, id) => (_ = context.theme(\"fontFamily\", params, \"\")) ? {\n    fontFamily: _\n  } : themeProperty(\"fontWeight\")(params, context, id),\n  items: params => params[0] && {\n    alignItems: includes([\"start\", \"end\"], params[0]) ? \"flex-\" + params[0] : join(params)\n  },\n  \"justify-self\": propertyValue(),\n  \"justify-items\": propertyValue(),\n  justify: contentPluginFor(\"justifyContent\"),\n  content: contentPluginFor(\"alignContent\"),\n  self: contentPluginFor(\"alignSelf\"),\n  place: params => params[0] && placeHelper(\"place-\" + params[0], tail(params)),\n  overscroll: params => params[0] && {\n    [\"overscrollBehavior\" + (params[1] ? \"-\" + params[0] : \"\")]: params[1] || params[0]\n  },\n  col: gridPlugin(\"column\"),\n  row: gridPlugin(\"row\"),\n  duration: themeProperty(\"transitionDuration\"),\n  delay: themeProperty(\"transitionDelay\"),\n  tracking: themeProperty(\"letterSpacing\"),\n  leading: themeProperty(\"lineHeight\"),\n  z: themeProperty(\"zIndex\"),\n  opacity: themeProperty(),\n  ease: themeProperty(\"transitionTimingFunction\"),\n  p: padding,\n  py: padding,\n  px: padding,\n  pt: padding,\n  pr: padding,\n  pb: padding,\n  pl: padding,\n  m: margin,\n  my: margin,\n  mx: margin,\n  mt: margin,\n  mr: margin,\n  mb: margin,\n  ml: margin,\n  w: themeProperty(\"width\"),\n  h: themeProperty(\"height\"),\n  min: minMax,\n  max: minMax,\n  fill: themeProperty(),\n  order: themeProperty(),\n  origin: themePropertyFallback(\"transformOrigin\", \" \"),\n  select: propertyValue(\"userSelect\"),\n  \"pointer-events\": propertyValue(),\n  align: propertyValue(\"verticalAlign\"),\n  whitespace: propertyValue(\"whiteSpace\"),\n  \"normal-nums\": {\n    fontVariantNumeric: \"normal\"\n  },\n  ordinal: fontVariantNumeric(\"ordinal\"),\n  \"slashed-zero\": fontVariantNumeric(\"slashed-zero\"),\n  \"lining-nums\": fontVariantNumeric(\"numeric-figure\"),\n  \"oldstyle-nums\": fontVariantNumeric(\"numeric-figure\"),\n  \"proportional-nums\": fontVariantNumeric(\"numeric-spacing\"),\n  \"tabular-nums\": fontVariantNumeric(\"numeric-spacing\"),\n  \"diagonal-fractions\": fontVariantNumeric(\"numeric-fraction\"),\n  \"stacked-fractions\": fontVariantNumeric(\"numeric-fraction\"),\n  overflow: (params, context, id) => includes([\"ellipsis\", \"clip\"], params[0]) ? propertyValue(\"textOverflow\")(params) : params[1] ? {\n    [\"overflow-\" + params[0]]: params[1]\n  } : propertyValue()(params, context, id),\n  transform: params => params[0] == \"none\" ? {\n    transform: \"none\"\n  } : {\n    \"--tw-translate-x\": \"0\",\n    \"--tw-translate-y\": \"0\",\n    \"--tw-rotate\": \"0\",\n    \"--tw-skew-x\": \"0\",\n    \"--tw-skew-y\": \"0\",\n    \"--tw-scale-x\": \"1\",\n    \"--tw-scale-y\": \"1\",\n    transform: transform(params[0] == \"gpu\")\n  },\n  rotate: (params, {\n    theme: theme2\n  }) => (_ = theme2(\"rotate\", params)) && {\n    \"--tw-rotate\": _,\n    transform: [`rotate(${_})`, transform()]\n  },\n  scale: transformXYFunction,\n  translate: transformXYFunction,\n  skew: transformXYFunction,\n  gap: (params, context, id) => (_ = {\n    x: \"column\",\n    y: \"row\"\n  }[params[0]]) ? {\n    [_ + \"Gap\"]: context.theme(\"gap\", tail(params))\n  } : themeProperty(\"gap\")(params, context, id),\n  stroke: (params, context, id) => (_ = context.theme(\"stroke\", params, \"\")) ? {\n    stroke: _\n  } : themeProperty(\"strokeWidth\")(params, context, id),\n  outline: (params, {\n    theme: theme2\n  }) => (_ = theme2(\"outline\", params)) && {\n    outline: _[0],\n    outlineOffset: _[1]\n  },\n  \"break-normal\": {\n    wordBreak: \"normal\",\n    overflowWrap: \"normal\"\n  },\n  \"break-words\": {\n    overflowWrap: \"break-word\"\n  },\n  \"break-all\": {\n    wordBreak: \"break-all\"\n  },\n  text(params, {\n    theme: theme2\n  }, id) {\n    switch (params[0]) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n      case \"justify\":\n        return {\n          textAlign: params[0]\n        };\n      case \"uppercase\":\n      case \"lowercase\":\n      case \"capitalize\":\n        return textTransform([], _, params[0]);\n      case \"opacity\":\n        return opacityProperty(params, theme2, id);\n    }\n    const fontSize = theme2(\"fontSize\", params, \"\");\n    if (fontSize) {\n      return typeof fontSize == \"string\" ? {\n        fontSize\n      } : {\n        fontSize: fontSize[0],\n        ...(typeof fontSize[1] == \"string\" ? {\n          lineHeight: fontSize[1]\n        } : fontSize[1])\n      };\n    }\n    return withOpacityFallback(\"color\", \"text\", theme2(\"textColor\", params));\n  },\n  bg(params, {\n    theme: theme2\n  }, id) {\n    switch (params[0]) {\n      case \"fixed\":\n      case \"local\":\n      case \"scroll\":\n        return propertyValue(\"backgroundAttachment\", \",\")(params);\n      case \"bottom\":\n      case \"center\":\n      case \"left\":\n      case \"right\":\n      case \"top\":\n        return propertyValue(\"backgroundPosition\", \" \")(params);\n      case \"no\":\n        return params[1] == \"repeat\" && propertyValue(\"backgroundRepeat\")(params);\n      case \"repeat\":\n        return includes(\"xy\", params[1]) ? propertyValue(\"backgroundRepeat\")(params) : {\n          backgroundRepeat: params[1] || params[0]\n        };\n      case \"opacity\":\n        return opacityProperty(params, theme2, id, \"background\");\n      case \"clip\":\n      case \"origin\":\n        return params[1] && {\n          [\"background-\" + params[0]]: params[1] + (params[1] == \"text\" ? \"\" : \"-box\")\n        };\n      case \"blend\":\n        return propertyValue(\"background-blend-mode\")(tail(params));\n      case \"gradient\":\n        if (params[1] == \"to\" && (_ = expandEdges(params[2]))) {\n          return {\n            backgroundImage: `linear-gradient(to ${join(_, \" \")},var(--tw-gradient-stops))`\n          };\n        }\n    }\n    return (_ = theme2(\"backgroundPosition\", params, \"\")) ? {\n      backgroundPosition: _\n    } : (_ = theme2(\"backgroundSize\", params, \"\")) ? {\n      backgroundSize: _\n    } : (_ = theme2(\"backgroundImage\", params, \"\")) ? {\n      backgroundImage: _\n    } : withOpacityFallback(\"backgroundColor\", \"bg\", theme2(\"backgroundColor\", params));\n  },\n  from: (params, {\n    theme: theme2\n  }) => (_ = theme2(\"gradientColorStops\", params)) && {\n    \"--tw-gradient-from\": _,\n    \"--tw-gradient-stops\": `var(--tw-gradient-from),var(--tw-gradient-to,${transparentTo(_)})`\n  },\n  via: (params, {\n    theme: theme2\n  }) => (_ = theme2(\"gradientColorStops\", params)) && {\n    \"--tw-gradient-stops\": `var(--tw-gradient-from),${_},var(--tw-gradient-to,${transparentTo(_)})`\n  },\n  to: (params, {\n    theme: theme2\n  }) => (_ = theme2(\"gradientColorStops\", params)) && {\n    \"--tw-gradient-to\": _\n  },\n  border: borderEdges,\n  divide: (params, context, id) => (_ = reversableEdge(params, context, id, \"divideWidth\", \"border\", \"width\") || border(params, context, id)) && {\n    \"&>:not([hidden])~:not([hidden])\": _\n  },\n  space: (params, context, id) => (_ = reversableEdge(params, context, id, \"space\", \"margin\")) && {\n    \"&>:not([hidden])~:not([hidden])\": _\n  },\n  placeholder: (params, {\n    theme: theme2\n  }, id) => (_ = params[0] == \"opacity\" ? opacityProperty(params, theme2, id) : withOpacityFallback(\"color\", \"placeholder\", theme2(\"placeholderColor\", params))) && {\n    \"&::placeholder\": _\n  },\n  shadow: (params, {\n    theme: theme2\n  }) => (_ = theme2(\"boxShadow\", params)) && {\n    \":global\": {\n      \"*\": {\n        \"--tw-shadow\": \"0 0 transparent\"\n      }\n    },\n    \"--tw-shadow\": _ == \"none\" ? \"0 0 transparent\" : _,\n    boxShadow: [_, `var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)`]\n  },\n  animate: (params, {\n    theme: theme2,\n    tag\n  }) => {\n    if ($ = theme2(\"animation\", params)) {\n      const parts = $.split(\" \");\n      if ((_ = theme2(\"keyframes\", parts[0], __ = {})) !== __) {\n        return ($ = tag(parts[0])) && {\n          animation: $ + \" \" + join(tail(parts), \" \"),\n          [\"@keyframes \" + $]: _\n        };\n      }\n      return {\n        animation: $\n      };\n    }\n  },\n  ring(params, {\n    theme: theme2\n  }, id) {\n    switch (params[0]) {\n      case \"inset\":\n        return {\n          \"--tw-ring-inset\": \"inset\"\n        };\n      case \"opacity\":\n        return opacityProperty(params, theme2, id);\n      case \"offset\":\n        return (_ = theme2(\"ringOffsetWidth\", tail(params), \"\")) ? {\n          \"--tw-ring-offset-width\": _\n        } : {\n          \"--tw-ring-offset-color\": theme2(\"ringOffsetColor\", tail(params))\n        };\n    }\n    return (_ = theme2(\"ringWidth\", params, \"\")) ? {\n      \"--tw-ring-offset-shadow\": `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n      \"--tw-ring-shadow\": `var(--tw-ring-inset) 0 0 0 calc(${_} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n      boxShadow: `var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)`,\n      \":global\": {\n        \"*\": {\n          \"--tw-ring-inset\": \"var(--tw-empty,/*!*/ /*!*/)\",\n          \"--tw-ring-offset-width\": theme2(\"ringOffsetWidth\", \"\", \"0px\"),\n          \"--tw-ring-offset-color\": theme2(\"ringOffsetColor\", \"\", \"#fff\"),\n          \"--tw-ring-color\": asRGBA(theme2(\"ringColor\", \"\", \"#93c5fd\"), \"ring-opacity\", theme2(\"ringOpacity\", \"\", \"0.5\")),\n          \"--tw-ring-offset-shadow\": \"0 0 transparent\",\n          \"--tw-ring-shadow\": \"0 0 transparent\"\n        }\n      }\n    } : {\n      \"--tw-ring-opacity\": \"1\",\n      \"--tw-ring-color\": asRGBA(theme2(\"ringColor\", params), \"ring-opacity\")\n    };\n  },\n  object: (params, context, id) => includes([\"contain\", \"cover\", \"fill\", \"none\", \"scale-down\"], join(params)) ? {\n    objectFit: join(params)\n  } : themePropertyFallback(\"objectPosition\", \" \")(params, context, id),\n  list: (params, context, id) => join(params) == \"item\" ? display(params, context, id) : includes([\"inside\", \"outside\"], join(params)) ? {\n    listStylePosition: params[0]\n  } : themePropertyFallback(\"listStyleType\")(params, context, id),\n  rounded: (params, context, id) => corners(context.theme(\"borderRadius\", tail(params), \"\"), params[0], \"border\", \"radius\") || themeProperty(\"borderRadius\")(params, context, id),\n  \"transition-none\": {\n    transitionProperty: \"none\"\n  },\n  transition: (params, {\n    theme: theme2\n  }) => ({\n    transitionProperty: theme2(\"transitionProperty\", params),\n    transitionTimingFunction: theme2(\"transitionTimingFunction\", \"\"),\n    transitionDuration: theme2(\"transitionDuration\", \"\")\n  }),\n  container: (params, {\n    theme: theme2\n  }) => {\n    const {\n      screens = theme2(\"screens\"),\n      center,\n      padding: padding2\n    } = theme2(\"container\");\n    const paddingFor = screen => (_ = padding2 && (typeof padding2 == \"string\" ? padding2 : padding2[screen] || padding2.DEFAULT)) ? {\n      paddingRight: _,\n      paddingLeft: _\n    } : {};\n    return Object.keys(screens).reduce((rules2, screen) => {\n      if (($ = screens[screen]) && typeof $ == \"string\") {\n        rules2[buildMediaQuery($)] = {\n          \"&\": {\n            \"max-width\": $,\n            ...paddingFor(screen)\n          }\n        };\n      }\n      return rules2;\n    }, {\n      width: \"100%\",\n      ...(center ? {\n        marginRight: \"auto\",\n        marginLeft: \"auto\"\n      } : {}),\n      ...paddingFor(\"xs\")\n    });\n  },\n  filter,\n  blur: filter,\n  brightness: filter,\n  contrast: filter,\n  grayscale: filter,\n  \"hue-rotate\": filter,\n  invert: filter,\n  saturate: filter,\n  sepia: filter,\n  \"drop-shadow\": filter,\n  backdrop: filter\n};\n\n// src/twind/preflight.ts\nvar createPreflight = theme2 => ({\n  \":root\": {\n    tabSize: 4\n  },\n  \"body,blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre,fieldset,ol,ul\": {\n    margin: \"0\"\n  },\n  button: {\n    backgroundColor: \"transparent\",\n    backgroundImage: \"none\"\n  },\n  'button,[type=\"button\"],[type=\"reset\"],[type=\"submit\"]': {\n    WebkitAppearance: \"button\"\n  },\n  \"button:focus\": {\n    outline: [\"1px dotted\", \"5px auto -webkit-focus-ring-color\"]\n  },\n  \"fieldset,ol,ul,legend\": {\n    padding: \"0\"\n  },\n  \"ol,ul\": {\n    listStyle: \"none\"\n  },\n  html: {\n    lineHeight: \"1.5\",\n    WebkitTextSizeAdjust: \"100%\",\n    fontFamily: theme2(\"fontFamily.sans\", \"ui-sans-serif,system-ui,sans-serif\")\n  },\n  body: {\n    fontFamily: \"inherit\",\n    lineHeight: \"inherit\"\n  },\n  \"*,::before,::after\": {\n    boxSizing: \"border-box\",\n    border: `0 solid ${theme2(\"borderColor.DEFAULT\", \"currentColor\")}`\n  },\n  hr: {\n    height: \"0\",\n    color: \"inherit\",\n    borderTopWidth: \"1px\"\n  },\n  img: {\n    borderStyle: \"solid\"\n  },\n  textarea: {\n    resize: \"vertical\"\n  },\n  \"input::placeholder,textarea::placeholder\": {\n    opacity: \"1\",\n    color: theme2(\"placeholderColor.DEFAULT\", theme2(\"colors.gray.400\", \"#a1a1aa\"))\n  },\n  'button,[role=\"button\"]': {\n    cursor: \"pointer\"\n  },\n  table: {\n    textIndent: \"0\",\n    borderColor: \"inherit\",\n    borderCollapse: \"collapse\"\n  },\n  \"h1,h2,h3,h4,h5,h6\": {\n    fontSize: \"inherit\",\n    fontWeight: \"inherit\"\n  },\n  a: {\n    color: \"inherit\",\n    textDecoration: \"inherit\"\n  },\n  \"button,input,optgroup,select,textarea\": {\n    fontFamily: \"inherit\",\n    fontSize: \"100%\",\n    margin: \"0\",\n    padding: \"0\",\n    lineHeight: \"inherit\",\n    color: \"inherit\"\n  },\n  \"button,select\": {\n    textTransform: \"none\"\n  },\n  \"::-moz-focus-inner\": {\n    borderStyle: \"none\",\n    padding: \"0\"\n  },\n  \":-moz-focusring\": {\n    outline: \"1px dotted ButtonText\"\n  },\n  \":-moz-ui-invalid\": {\n    boxShadow: \"none\"\n  },\n  progress: {\n    verticalAlign: \"baseline\"\n  },\n  \"::-webkit-inner-spin-button,::-webkit-outer-spin-button\": {\n    height: \"auto\"\n  },\n  '[type=\"search\"]': {\n    WebkitAppearance: \"textfield\",\n    outlineOffset: \"-2px\"\n  },\n  \"::-webkit-search-decoration\": {\n    WebkitAppearance: \"none\"\n  },\n  \"::-webkit-file-upload-button\": {\n    WebkitAppearance: \"button\",\n    font: \"inherit\"\n  },\n  summary: {\n    display: \"list-item\"\n  },\n  \"abbr[title]\": {\n    textDecoration: \"underline dotted\"\n  },\n  \"b,strong\": {\n    fontWeight: \"bolder\"\n  },\n  \"pre,code,kbd,samp\": {\n    fontFamily: theme2(\"fontFamily\", \"mono\", \"ui-monospace,monospace\"),\n    fontSize: \"1em\"\n  },\n  \"sub,sup\": {\n    fontSize: \"75%\",\n    lineHeight: \"0\",\n    position: \"relative\",\n    verticalAlign: \"baseline\"\n  },\n  sub: {\n    bottom: \"-0.25em\"\n  },\n  sup: {\n    top: \"-0.5em\"\n  },\n  \"img,svg,video,canvas,audio,iframe,embed,object\": {\n    display: \"block\",\n    verticalAlign: \"middle\"\n  },\n  \"img,video\": {\n    maxWidth: \"100%\",\n    height: \"auto\"\n  }\n});\n\n// src/twind/variants.ts\nvar coreVariants = {\n  dark: \"@media (prefers-color-scheme:dark)\",\n  sticky: \"@supports ((position: -webkit-sticky) or (position:sticky))\",\n  \"motion-reduce\": \"@media (prefers-reduced-motion:reduce)\",\n  \"motion-safe\": \"@media (prefers-reduced-motion:no-preference)\",\n  first: \"&:first-child\",\n  last: \"&:last-child\",\n  even: \"&:nth-child(2n)\",\n  odd: \"&:nth-child(odd)\",\n  children: \"&>*\",\n  siblings: \"&~*\",\n  sibling: \"&+*\",\n  override: \"&&\"\n};\n\n// src/internal/dom.ts\nvar STYLE_ELEMENT_ID = \"__twind\";\nvar getStyleElement = nonce => {\n  let element = self[STYLE_ELEMENT_ID];\n  if (!element) {\n    element = document.head.appendChild(document.createElement(\"style\"));\n    element.id = STYLE_ELEMENT_ID;\n    nonce && (element.nonce = nonce);\n    element.appendChild(document.createTextNode(\"\"));\n  }\n  return element;\n};\n\n// src/twind/sheets.ts\nvar cssomSheet = ({\n  nonce,\n  target = getStyleElement(nonce).sheet\n} = {}) => {\n  const offset = target.cssRules.length;\n  return {\n    target,\n    insert: (rule, index) => target.insertRule(rule, offset + index)\n  };\n};\nvar voidSheet = () => ({\n  target: null,\n  insert: noop\n});\n\n// src/twind/modes.ts\nvar mode = report => ({\n  unknown(section, key = [], optional, context) {\n    if (!optional) {\n      this.report({\n        id: \"UNKNOWN_THEME_VALUE\",\n        key: section + \".\" + join(key)\n      }, context);\n    }\n  },\n  report({\n    id,\n    ...info\n  }) {\n    return report(`[${id}] ${JSON.stringify(info)}`);\n  }\n});\nvar warn = /* @__PURE__ */mode(message => console.warn(message));\nvar strict = /* @__PURE__ */mode(message => {\n  throw new Error(message);\n});\nvar silent = /* @__PURE__ */mode(noop);\n\n// src/twind/prefix.ts\nimport { cssPropertyAlias, cssPropertyPrefixFlags, cssValuePrefixFlags } from \"style-vendorizer\";\nvar noprefix = (property2, value, important) => `${property2}:${value}${important ? \" !important\" : \"\"}`;\nvar autoprefix = (property2, value, important) => {\n  let cssText = \"\";\n  const propertyAlias = cssPropertyAlias(property2);\n  if (propertyAlias) cssText += `${noprefix(propertyAlias, value, important)};`;\n  let flags = cssPropertyPrefixFlags(property2);\n  if (flags & 1) cssText += `-webkit-${noprefix(property2, value, important)};`;\n  if (flags & 2) cssText += `-moz-${noprefix(property2, value, important)};`;\n  if (flags & 4) cssText += `-ms-${noprefix(property2, value, important)};`;\n  flags = cssValuePrefixFlags(property2, value);\n  if (flags & 1) cssText += `${noprefix(property2, `-webkit-${value}`, important)};`;\n  if (flags & 2) cssText += `${noprefix(property2, `-moz-${value}`, important)};`;\n  if (flags & 4) cssText += `${noprefix(property2, `-ms-${value}`, important)};`;\n  cssText += noprefix(property2, value, important);\n  return cssText;\n};\n\n// src/twind/theme.ts\nvar ratios = (start, end) => {\n  const result = {};\n  do {\n    for (let dividend = 1; dividend < start; dividend++) {\n      result[`${dividend}/${start}`] = Number((dividend / start * 100).toFixed(6)) + \"%\";\n    }\n  } while (++start <= end);\n  return result;\n};\nvar exponential = (stop, unit, start = 0) => {\n  const result = {};\n  for (; start <= stop; start = start * 2 || 1) {\n    result[start] = start + unit;\n  }\n  return result;\n};\nvar linear = (stop, unit = \"\", divideBy = 1, start = 0, step = 1, result = {}) => {\n  for (; start <= stop; start += step) {\n    result[start] = start / divideBy + unit;\n  }\n  return result;\n};\nvar alias2 = section => theme2 => theme2(section);\nvar themeFactory = (args, {\n  theme: theme2\n}) => theme2(...args);\nvar theme = (...args) => directive(themeFactory, args);\nvar defaultTheme = {\n  screens: {\n    sm: \"640px\",\n    md: \"768px\",\n    lg: \"1024px\",\n    xl: \"1280px\",\n    \"2xl\": \"1536px\"\n  },\n  colors: {\n    transparent: \"transparent\",\n    current: \"currentColor\",\n    black: \"#000\",\n    white: \"#fff\",\n    gray: {\n      50: \"#f9fafb\",\n      100: \"#f3f4f6\",\n      200: \"#e5e7eb\",\n      300: \"#d1d5db\",\n      400: \"#9ca3af\",\n      500: \"#6b7280\",\n      600: \"#4b5563\",\n      700: \"#374151\",\n      800: \"#1f2937\",\n      900: \"#111827\"\n    },\n    red: {\n      50: \"#fef2f2\",\n      100: \"#fee2e2\",\n      200: \"#fecaca\",\n      300: \"#fca5a5\",\n      400: \"#f87171\",\n      500: \"#ef4444\",\n      600: \"#dc2626\",\n      700: \"#b91c1c\",\n      800: \"#991b1b\",\n      900: \"#7f1d1d\"\n    },\n    yellow: {\n      50: \"#fffbeb\",\n      100: \"#fef3c7\",\n      200: \"#fde68a\",\n      300: \"#fcd34d\",\n      400: \"#fbbf24\",\n      500: \"#f59e0b\",\n      600: \"#d97706\",\n      700: \"#b45309\",\n      800: \"#92400e\",\n      900: \"#78350f\"\n    },\n    green: {\n      50: \"#ecfdf5\",\n      100: \"#d1fae5\",\n      200: \"#a7f3d0\",\n      300: \"#6ee7b7\",\n      400: \"#34d399\",\n      500: \"#10b981\",\n      600: \"#059669\",\n      700: \"#047857\",\n      800: \"#065f46\",\n      900: \"#064e3b\"\n    },\n    blue: {\n      50: \"#eff6ff\",\n      100: \"#dbeafe\",\n      200: \"#bfdbfe\",\n      300: \"#93c5fd\",\n      400: \"#60a5fa\",\n      500: \"#3b82f6\",\n      600: \"#2563eb\",\n      700: \"#1d4ed8\",\n      800: \"#1e40af\",\n      900: \"#1e3a8a\"\n    },\n    indigo: {\n      50: \"#eef2ff\",\n      100: \"#e0e7ff\",\n      200: \"#c7d2fe\",\n      300: \"#a5b4fc\",\n      400: \"#818cf8\",\n      500: \"#6366f1\",\n      600: \"#4f46e5\",\n      700: \"#4338ca\",\n      800: \"#3730a3\",\n      900: \"#312e81\"\n    },\n    purple: {\n      50: \"#f5f3ff\",\n      100: \"#ede9fe\",\n      200: \"#ddd6fe\",\n      300: \"#c4b5fd\",\n      400: \"#a78bfa\",\n      500: \"#8b5cf6\",\n      600: \"#7c3aed\",\n      700: \"#6d28d9\",\n      800: \"#5b21b6\",\n      900: \"#4c1d95\"\n    },\n    pink: {\n      50: \"#fdf2f8\",\n      100: \"#fce7f3\",\n      200: \"#fbcfe8\",\n      300: \"#f9a8d4\",\n      400: \"#f472b6\",\n      500: \"#ec4899\",\n      600: \"#db2777\",\n      700: \"#be185d\",\n      800: \"#9d174d\",\n      900: \"#831843\"\n    }\n  },\n  spacing: {\n    px: \"1px\",\n    0: \"0px\",\n    ... /* @__PURE__ */linear(4, \"rem\", 4, 0.5, 0.5),\n    ... /* @__PURE__ */linear(12, \"rem\", 4, 5),\n    14: \"3.5rem\",\n    ... /* @__PURE__ */linear(64, \"rem\", 4, 16, 4),\n    72: \"18rem\",\n    80: \"20rem\",\n    96: \"24rem\"\n  },\n  durations: {\n    75: \"75ms\",\n    100: \"100ms\",\n    150: \"150ms\",\n    200: \"200ms\",\n    300: \"300ms\",\n    500: \"500ms\",\n    700: \"700ms\",\n    1e3: \"1000ms\"\n  },\n  animation: {\n    none: \"none\",\n    spin: \"spin 1s linear infinite\",\n    ping: \"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite\",\n    pulse: \"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n    bounce: \"bounce 1s infinite\"\n  },\n  backdropBlur: /* @__PURE__ */alias2(\"blur\"),\n  backdropBrightness: /* @__PURE__ */alias2(\"brightness\"),\n  backdropContrast: /* @__PURE__ */alias2(\"contrast\"),\n  backdropGrayscale: /* @__PURE__ */alias2(\"grayscale\"),\n  backdropHueRotate: /* @__PURE__ */alias2(\"hueRotate\"),\n  backdropInvert: /* @__PURE__ */alias2(\"invert\"),\n  backdropOpacity: /* @__PURE__ */alias2(\"opacity\"),\n  backdropSaturate: /* @__PURE__ */alias2(\"saturate\"),\n  backdropSepia: /* @__PURE__ */alias2(\"sepia\"),\n  backgroundColor: /* @__PURE__ */alias2(\"colors\"),\n  backgroundImage: {\n    none: \"none\"\n  },\n  backgroundOpacity: /* @__PURE__ */alias2(\"opacity\"),\n  backgroundSize: {\n    auto: \"auto\",\n    cover: \"cover\",\n    contain: \"contain\"\n  },\n  blur: {\n    0: \"0\",\n    sm: \"4px\",\n    DEFAULT: \"8px\",\n    md: \"12px\",\n    lg: \"16px\",\n    xl: \"24px\",\n    \"2xl\": \"40px\",\n    \"3xl\": \"64px\"\n  },\n  brightness: {\n    ... /* @__PURE__ */linear(200, \"\", 100, 0, 50),\n    ... /* @__PURE__ */linear(110, \"\", 100, 90, 5),\n    75: \"0.75\",\n    125: \"1.25\"\n  },\n  borderColor: theme2 => ({\n    ...theme2(\"colors\"),\n    DEFAULT: theme2(\"colors.gray.200\", \"currentColor\")\n  }),\n  borderOpacity: /* @__PURE__ */alias2(\"opacity\"),\n  borderRadius: {\n    none: \"0px\",\n    sm: \"0.125rem\",\n    DEFAULT: \"0.25rem\",\n    md: \"0.375rem\",\n    lg: \"0.5rem\",\n    xl: \"0.75rem\",\n    \"2xl\": \"1rem\",\n    \"3xl\": \"1.5rem\",\n    \"1/2\": \"50%\",\n    full: \"9999px\"\n  },\n  borderWidth: {\n    DEFAULT: \"1px\",\n    ... /* @__PURE__ */exponential(8, \"px\")\n  },\n  boxShadow: {\n    sm: \"0 1px 2px 0 rgba(0,0,0,0.05)\",\n    DEFAULT: \"0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06)\",\n    md: \"0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06)\",\n    lg: \"0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05)\",\n    xl: \"0 20px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04)\",\n    \"2xl\": \"0 25px 50px -12px rgba(0,0,0,0.25)\",\n    inner: \"inset 0 2px 4px 0 rgba(0,0,0,0.06)\",\n    none: \"none\"\n  },\n  contrast: {\n    ... /* @__PURE__ */linear(200, \"\", 100, 0, 50),\n    75: \"0.75\",\n    125: \"1.25\"\n  },\n  divideColor: /* @__PURE__ */alias2(\"borderColor\"),\n  divideOpacity: /* @__PURE__ */alias2(\"borderOpacity\"),\n  divideWidth: /* @__PURE__ */alias2(\"borderWidth\"),\n  dropShadow: {\n    sm: \"0 1px 1px rgba(0,0,0,0.05)\",\n    DEFAULT: [\"0 1px 2px rgba(0,0,0,0.1)\", \"0 1px 1px rgba(0,0,0,0.06)\"],\n    md: [\"0 4px 3px rgba(0,0,0,0.07)\", \"0 2px 2px rgba(0,0,0,0.06)\"],\n    lg: [\"0 10px 8px rgba(0,0,0,0.04)\", \"0 4px 3px rgba(0,0,0,0.1)\"],\n    xl: [\"0 20px 13px rgba(0,0,0,0.03)\", \"0 8px 5px rgba(0,0,0,0.08)\"],\n    \"2xl\": \"0 25px 25px rgba(0,0,0,0.15)\",\n    none: \"0 0 #0000\"\n  },\n  fill: {\n    current: \"currentColor\"\n  },\n  grayscale: {\n    0: \"0\",\n    DEFAULT: \"100%\"\n  },\n  hueRotate: {\n    0: \"0deg\",\n    15: \"15deg\",\n    30: \"30deg\",\n    60: \"60deg\",\n    90: \"90deg\",\n    180: \"180deg\"\n  },\n  invert: {\n    0: \"0\",\n    DEFAULT: \"100%\"\n  },\n  flex: {\n    1: \"1 1 0%\",\n    auto: \"1 1 auto\",\n    initial: \"0 1 auto\",\n    none: \"none\"\n  },\n  fontFamily: {\n    sans: 'ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"'.split(\",\"),\n    serif: 'ui-serif,Georgia,Cambria,\"Times New Roman\",Times,serif'.split(\",\"),\n    mono: 'ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace'.split(\",\")\n  },\n  fontSize: {\n    xs: [\"0.75rem\", \"1rem\"],\n    sm: [\"0.875rem\", \"1.25rem\"],\n    base: [\"1rem\", \"1.5rem\"],\n    lg: [\"1.125rem\", \"1.75rem\"],\n    xl: [\"1.25rem\", \"1.75rem\"],\n    \"2xl\": [\"1.5rem\", \"2rem\"],\n    \"3xl\": [\"1.875rem\", \"2.25rem\"],\n    \"4xl\": [\"2.25rem\", \"2.5rem\"],\n    \"5xl\": [\"3rem\", \"1\"],\n    \"6xl\": [\"3.75rem\", \"1\"],\n    \"7xl\": [\"4.5rem\", \"1\"],\n    \"8xl\": [\"6rem\", \"1\"],\n    \"9xl\": [\"8rem\", \"1\"]\n  },\n  fontWeight: {\n    thin: \"100\",\n    extralight: \"200\",\n    light: \"300\",\n    normal: \"400\",\n    medium: \"500\",\n    semibold: \"600\",\n    bold: \"700\",\n    extrabold: \"800\",\n    black: \"900\"\n  },\n  gridTemplateColumns: {},\n  gridTemplateRows: {},\n  gridAutoColumns: {\n    min: \"min-content\",\n    max: \"max-content\",\n    fr: \"minmax(0,1fr)\"\n  },\n  gridAutoRows: {\n    min: \"min-content\",\n    max: \"max-content\",\n    fr: \"minmax(0,1fr)\"\n  },\n  gridColumn: {\n    auto: \"auto\",\n    \"span-full\": \"1 / -1\"\n  },\n  gridRow: {\n    auto: \"auto\",\n    \"span-full\": \"1 / -1\"\n  },\n  gap: /* @__PURE__ */alias2(\"spacing\"),\n  gradientColorStops: /* @__PURE__ */alias2(\"colors\"),\n  height: theme2 => ({\n    auto: \"auto\",\n    ...theme2(\"spacing\"),\n    ...ratios(2, 6),\n    full: \"100%\",\n    screen: \"100vh\"\n  }),\n  inset: theme2 => ({\n    auto: \"auto\",\n    ...theme2(\"spacing\"),\n    ...ratios(2, 4),\n    full: \"100%\"\n  }),\n  keyframes: {\n    spin: {\n      from: {\n        transform: \"rotate(0deg)\"\n      },\n      to: {\n        transform: \"rotate(360deg)\"\n      }\n    },\n    ping: {\n      \"0%\": {\n        transform: \"scale(1)\",\n        opacity: \"1\"\n      },\n      \"75%,100%\": {\n        transform: \"scale(2)\",\n        opacity: \"0\"\n      }\n    },\n    pulse: {\n      \"0%,100%\": {\n        opacity: \"1\"\n      },\n      \"50%\": {\n        opacity: \".5\"\n      }\n    },\n    bounce: {\n      \"0%, 100%\": {\n        transform: \"translateY(-25%)\",\n        animationTimingFunction: \"cubic-bezier(0.8,0,1,1)\"\n      },\n      \"50%\": {\n        transform: \"none\",\n        animationTimingFunction: \"cubic-bezier(0,0,0.2,1)\"\n      }\n    }\n  },\n  letterSpacing: {\n    tighter: \"-0.05em\",\n    tight: \"-0.025em\",\n    normal: \"0em\",\n    wide: \"0.025em\",\n    wider: \"0.05em\",\n    widest: \"0.1em\"\n  },\n  lineHeight: {\n    none: \"1\",\n    tight: \"1.25\",\n    snug: \"1.375\",\n    normal: \"1.5\",\n    relaxed: \"1.625\",\n    loose: \"2\",\n    ... /* @__PURE__ */linear(10, \"rem\", 4, 3)\n  },\n  margin: theme2 => ({\n    auto: \"auto\",\n    ...theme2(\"spacing\")\n  }),\n  maxHeight: theme2 => ({\n    ...theme2(\"spacing\"),\n    full: \"100%\",\n    screen: \"100vh\"\n  }),\n  maxWidth: (theme2, {\n    breakpoints\n  }) => ({\n    none: \"none\",\n    0: \"0rem\",\n    xs: \"20rem\",\n    sm: \"24rem\",\n    md: \"28rem\",\n    lg: \"32rem\",\n    xl: \"36rem\",\n    \"2xl\": \"42rem\",\n    \"3xl\": \"48rem\",\n    \"4xl\": \"56rem\",\n    \"5xl\": \"64rem\",\n    \"6xl\": \"72rem\",\n    \"7xl\": \"80rem\",\n    full: \"100%\",\n    min: \"min-content\",\n    max: \"max-content\",\n    prose: \"65ch\",\n    ...breakpoints(theme2(\"screens\"))\n  }),\n  minHeight: {\n    0: \"0px\",\n    full: \"100%\",\n    screen: \"100vh\"\n  },\n  minWidth: {\n    0: \"0px\",\n    full: \"100%\",\n    min: \"min-content\",\n    max: \"max-content\"\n  },\n  opacity: {\n    ... /* @__PURE__ */linear(100, \"\", 100, 0, 10),\n    5: \"0.05\",\n    25: \"0.25\",\n    75: \"0.75\",\n    95: \"0.95\"\n  },\n  order: {\n    first: \"-9999\",\n    last: \"9999\",\n    none: \"0\",\n    ... /* @__PURE__ */linear(12, \"\", 1, 1)\n  },\n  outline: {\n    none: [\"2px solid transparent\", \"2px\"],\n    white: [\"2px dotted white\", \"2px\"],\n    black: [\"2px dotted black\", \"2px\"]\n  },\n  padding: /* @__PURE__ */alias2(\"spacing\"),\n  placeholderColor: /* @__PURE__ */alias2(\"colors\"),\n  placeholderOpacity: /* @__PURE__ */alias2(\"opacity\"),\n  ringColor: theme2 => ({\n    DEFAULT: theme2(\"colors.blue.500\", \"#3b82f6\"),\n    ...theme2(\"colors\")\n  }),\n  ringOffsetColor: /* @__PURE__ */alias2(\"colors\"),\n  ringOffsetWidth: /* @__PURE__ */exponential(8, \"px\"),\n  ringOpacity: theme2 => ({\n    DEFAULT: \"0.5\",\n    ...theme2(\"opacity\")\n  }),\n  ringWidth: {\n    DEFAULT: \"3px\",\n    ... /* @__PURE__ */exponential(8, \"px\")\n  },\n  rotate: {\n    ... /* @__PURE__ */exponential(2, \"deg\"),\n    ... /* @__PURE__ */exponential(12, \"deg\", 3),\n    ... /* @__PURE__ */exponential(180, \"deg\", 45)\n  },\n  saturate: /* @__PURE__ */linear(200, \"\", 100, 0, 50),\n  scale: {\n    ... /* @__PURE__ */linear(150, \"\", 100, 0, 50),\n    ... /* @__PURE__ */linear(110, \"\", 100, 90, 5),\n    75: \"0.75\",\n    125: \"1.25\"\n  },\n  sepia: {\n    0: \"0\",\n    DEFAULT: \"100%\"\n  },\n  skew: {\n    ... /* @__PURE__ */exponential(2, \"deg\"),\n    ... /* @__PURE__ */exponential(12, \"deg\", 3)\n  },\n  space: /* @__PURE__ */alias2(\"spacing\"),\n  stroke: {\n    current: \"currentColor\"\n  },\n  strokeWidth: /* @__PURE__ */linear(2),\n  textColor: /* @__PURE__ */alias2(\"colors\"),\n  textOpacity: /* @__PURE__ */alias2(\"opacity\"),\n  transitionDuration: theme2 => ({\n    DEFAULT: \"150ms\",\n    ...theme2(\"durations\")\n  }),\n  transitionDelay: /* @__PURE__ */alias2(\"durations\"),\n  transitionProperty: {\n    none: \"none\",\n    all: \"all\",\n    DEFAULT: \"background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter\",\n    colors: \"background-color,border-color,color,fill,stroke\",\n    opacity: \"opacity\",\n    shadow: \"box-shadow\",\n    transform: \"transform\"\n  },\n  transitionTimingFunction: {\n    DEFAULT: \"cubic-bezier(0.4,0,0.2,1)\",\n    linear: \"linear\",\n    in: \"cubic-bezier(0.4,0,1,1)\",\n    out: \"cubic-bezier(0,0,0.2,1)\",\n    \"in-out\": \"cubic-bezier(0.4,0,0.2,1)\"\n  },\n  translate: theme2 => ({\n    ...theme2(\"spacing\"),\n    ...ratios(2, 4),\n    full: \"100%\"\n  }),\n  width: theme2 => ({\n    auto: \"auto\",\n    ...theme2(\"spacing\"),\n    ...ratios(2, 6),\n    ...ratios(12, 12),\n    screen: \"100vw\",\n    full: \"100%\",\n    min: \"min-content\",\n    max: \"max-content\"\n  }),\n  zIndex: {\n    auto: \"auto\",\n    ... /* @__PURE__ */linear(50, \"\", 1, 0, 10)\n  }\n};\nvar flattenColorPalette = (colors, target = {}, prefix = []) => {\n  Object.keys(colors).forEach(property2 => {\n    const value = colors[property2];\n    if (property2 == \"DEFAULT\") {\n      target[join(prefix)] = value;\n      target[join(prefix, \".\")] = value;\n    }\n    const key = [...prefix, property2];\n    target[join(key)] = value;\n    target[join(key, \".\")] = value;\n    if (value && typeof value == \"object\") {\n      flattenColorPalette(value, target, key);\n    }\n  }, target);\n  return target;\n};\nvar resolveContext = {\n  negative: () => ({}),\n  breakpoints: screens => Object.keys(screens).filter(key => typeof screens[key] == \"string\").reduce((target, key) => {\n    target[\"screen-\" + key] = screens[key];\n    return target;\n  }, {})\n};\nvar handleArbitraryValues = (section, key) => (key = key[0] == \"[\" && key.slice(-1) == \"]\" && key.slice(1, -1)) && includes(section, \"olor\") == /^(#|(hsl|rgb)a?\\(|[a-z]+$)/.test(key) && (includes(key, \"calc(\") ? key.replace(/(-?\\d*\\.?\\d(?!\\b-.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, \"$1 $2 \") : key);\nvar makeThemeResolver = config => {\n  const cache = new Map();\n  const theme2 = {\n    ...defaultTheme,\n    ...config\n  };\n  const deref = (theme3, section) => {\n    const base = theme3 && theme3[section];\n    const value = typeof base == \"function\" ? base(resolve, resolveContext) : base;\n    return value && section == \"colors\" ? flattenColorPalette(value) : value;\n  };\n  const resolve = (section, key, defaultValue) => {\n    const keypath = section.split(\".\");\n    section = keypath[0];\n    if (keypath.length > 1) {\n      defaultValue = key;\n      key = join(tail(keypath), \".\");\n    }\n    let base = cache.get(section);\n    if (!base) {\n      cache.set(section, base = {\n        ...deref(theme2, section)\n      });\n      Object.assign(base, deref(theme2.extend, section));\n    }\n    if (key != null) {\n      key = (Array.isArray(key) ? join(key) : key) || \"DEFAULT\";\n      const value = handleArbitraryValues(section, key) || base[key];\n      return value == null ? defaultValue : Array.isArray(value) && !includes([\"fontSize\", \"outline\", \"dropShadow\"], section) ? join(value, \",\") : value;\n    }\n    return base;\n  };\n  return resolve;\n};\n\n// src/twind/translate.ts\nvar translate = (plugins, context) => (rule, isTranslating) => {\n  if (typeof rule.d == \"function\") {\n    return rule.d(context);\n  }\n  const parameters = rule.d.split(/-(?![^[]*])/g);\n  if (!isTranslating && parameters[0] == \"tw\" && rule.$ == rule.d) {\n    return rule.$;\n  }\n  for (let index = parameters.length; index; index--) {\n    const id = join(parameters.slice(0, index));\n    if (Object.prototype.hasOwnProperty.call(plugins, id)) {\n      const plugin = plugins[id];\n      return typeof plugin == \"function\" ? plugin(tail(parameters, index), context, id) : typeof plugin == \"string\" ? context[isTranslating ? \"css\" : \"tw\"](plugin) : plugin;\n    }\n  }\n};\n\n// src/twind/decorate.ts\nvar _2;\nvar GROUP_RE = /^:(group(?:(?!-focus).+?)*)-(.+)$/;\nvar NOT_PREFIX_RE = /^(:not)-(.+)/;\nvar prepareVariantSelector = variant => variant[1] == \"[\" ? tail(variant) : variant;\nvar decorate = (darkMode, variants, {\n  theme: theme2,\n  tag\n}) => {\n  const applyVariant = (translation, variant) => {\n    if (_2 = theme2(\"screens\", tail(variant), \"\")) {\n      return {\n        [buildMediaQuery(_2)]: translation\n      };\n    }\n    if (variant == \":dark\" && darkMode == \"class\") {\n      return {\n        \".dark &\": translation\n      };\n    }\n    if (_2 = GROUP_RE.exec(variant)) {\n      return {\n        [`.${escape(tag(_2[1]))}:${_2[2]} &`]: translation\n      };\n    }\n    return {\n      [variants[tail(variant)] || \"&\" + variant.replace(NOT_PREFIX_RE, (_4, not, variant2) => not + \"(\" + prepareVariantSelector(\":\" + variant2) + \")\")]: translation\n    };\n  };\n  return (translation, rule) => rule.v.reduceRight(applyVariant, translation);\n};\n\n// src/twind/presedence.ts\nvar _3;\nvar responsivePrecedence = css => (((_3 = /(?:^|min-width: *)(\\d+(?:.\\d+)?)(p)?/.exec(css)) ? +_3[1] / (_3[2] ? 15 : 1) / 10 : 0) & 31) << 22;\nvar seperatorPrecedence = string => {\n  _3 = 0;\n  for (let index = string.length; index--;) {\n    _3 += includes(\"-:,\", string[index]);\n  }\n  return _3;\n};\nvar atRulePresedence = css => (seperatorPrecedence(css) & 15) << 18;\nvar PRECEDENCES_BY_PSEUDO_CLASS = [\"rst\", \"st\", \"en\", \"d\", \"nk\", \"sited\", \"pty\", \"ecked\", \"cus-w\", \"ver\", \"cus\", \"cus-v\", \"tive\", \"sable\", \"ad-on\", \"tiona\", \"quire\"];\nvar pseudoPrecedence = pseudoClass => 1 << (~(_3 = PRECEDENCES_BY_PSEUDO_CLASS.indexOf(pseudoClass.replace(GROUP_RE, \":$2\").slice(3, 8))) ? _3 : 17);\nvar makeVariantPresedenceCalculator = (theme2, variants) => (presedence, variant) => presedence | ((_3 = theme2(\"screens\", tail(variant), \"\")) ? 1 << 27 | responsivePrecedence(buildMediaQuery(_3)) : variant == \":dark\" ? 1 << 30 : (_3 = variants[variant] || variant.replace(NOT_PREFIX_RE, \":$2\"))[0] == \"@\" ? atRulePresedence(_3) : pseudoPrecedence(variant));\nvar declarationPropertyPrecedence = property2 => property2[0] == \"-\" ? 0 : seperatorPrecedence(property2) + ((_3 = /^(?:(border-(?!w|c|sty)|[tlbr].{2,4}m?$|c.{7}$)|([fl].{5}l|g.{8}$|pl))/.exec(property2)) ? +!!_3[1] || -!!_3[2] : 0) + 1;\n\n// src/twind/serialize.ts\nvar stringifyBlock = (body, selector) => selector + \"{\" + body + \"}\";\nvar serialize = (prefix, variants, context) => {\n  const {\n    theme: theme2,\n    tag\n  } = context;\n  const tagVar = (_4, property2) => \"--\" + tag(property2);\n  const tagVars = value => `${value}`.replace(/--(tw-[\\w-]+)\\b/g, tagVar);\n  const stringifyDeclaration = (property2, value, important) => {\n    property2 = tagVars(property2);\n    return Array.isArray(value) ? join(value.filter(Boolean).map(value2 => prefix(property2, tagVars(value2), important)), \";\") : prefix(property2, tagVars(value), important);\n  };\n  let rules2;\n  const stringify2 = (atRules, selector, presedence, css, important) => {\n    if (Array.isArray(css)) {\n      css.forEach(css2 => css2 && stringify2(atRules, selector, presedence, css2, important));\n      return;\n    }\n    let declarations = \"\";\n    let maxPropertyPresedence = 0;\n    let numberOfDeclarations = 0;\n    if (css[\"@apply\"]) {\n      css = merge(evalThunk(apply(css[\"@apply\"]), context), {\n        ...css,\n        \"@apply\": void 0\n      }, context);\n    }\n    Object.keys(css).forEach(key => {\n      const value = evalThunk(css[key], context);\n      if (isCSSProperty(key, value)) {\n        if (value !== \"\" && key.length > 1) {\n          const property2 = hyphenate(key);\n          numberOfDeclarations += 1;\n          maxPropertyPresedence = Math.max(maxPropertyPresedence, declarationPropertyPrecedence(property2));\n          declarations = (declarations && declarations + \";\") + stringifyDeclaration(property2, value, important);\n        }\n      } else if (value) {\n        if (key == \":global\") {\n          key = \"@global\";\n        }\n        if (key[0] == \"@\") {\n          if (key[1] == \"g\") {\n            stringify2([], \"\", 0, value, important);\n          } else if (key[1] == \"f\") {\n            stringify2([], key, 0, value, important);\n          } else if (key[1] == \"k\") {\n            const currentSize = rules2.length;\n            stringify2([], \"\", 0, value, important);\n            const waypoints = rules2.splice(currentSize, rules2.length - currentSize);\n            rules2.push({\n              r: stringifyBlock(join(waypoints.map(p => p.r), \"\"), key),\n              p: waypoints.reduce((sum, p) => sum + p.p, 0)\n            });\n          } else if (key[1] == \"i\") {\n            ;\n            (Array.isArray(value) ? value : [value]).forEach(value2 => value2 && rules2.push({\n              p: 0,\n              r: `${key} ${value2};`\n            }));\n          } else {\n            if (key[2] == \"c\") {\n              key = buildMediaQuery(context.theme(\"screens\", tail(key, 8).trim()));\n            }\n            stringify2([...atRules, key], selector, presedence | responsivePrecedence(key) | atRulePresedence(key), value, important);\n          }\n        } else {\n          stringify2(atRules, selector ? selector.replace(/ *((?:\\(.+?\\)|\\[.+?\\]|[^,])+) *(,|$)/g, (_4, selectorPart, comma) => key.replace(/ *((?:\\(.+?\\)|\\[.+?\\]|[^,])+) *(,|$)/g, (_5, keyPart, comma2) => (includes(keyPart, \"&\") ? keyPart.replace(/&/g, selectorPart) : (selectorPart && selectorPart + \" \") + keyPart) + comma2) + comma) : key, presedence, value, important);\n        }\n      }\n    });\n    if (numberOfDeclarations) {\n      rules2.push({\n        r: atRules.reduceRight(stringifyBlock, stringifyBlock(declarations, selector)),\n        p: presedence * (1 << 8) + ((Math.max(0, 15 - numberOfDeclarations) & 15) << 4 | (maxPropertyPresedence || 15) & 15)\n      });\n    }\n  };\n  const variantPresedence = makeVariantPresedenceCalculator(theme2, variants);\n  return (css, className, rule, layer = 0) => {\n    layer <<= 28;\n    rules2 = [];\n    stringify2([], className ? \".\" + escape(className) : \"\", rule ? rule.v.reduceRight(variantPresedence, layer) : layer, css, rule && rule.i);\n    return rules2;\n  };\n};\n\n// src/twind/inject.ts\nvar inject = (sheet, mode2, init, context) => {\n  let sortedPrecedences;\n  init((value = []) => sortedPrecedences = value);\n  let insertedRules;\n  init((value = new Set()) => insertedRules = value);\n  return ({\n    r: css,\n    p: presedence\n  }) => {\n    if (!insertedRules.has(css)) {\n      insertedRules.add(css);\n      const index = sortedInsertionIndex(sortedPrecedences, presedence);\n      try {\n        sheet.insert(css, index);\n        sortedPrecedences.splice(index, 0, presedence);\n      } catch (error) {\n        if (!/:-[mwo]/.test(css)) {\n          mode2.report({\n            id: \"INJECT_CSS_ERROR\",\n            css,\n            error\n          }, context);\n        }\n      }\n    }\n  };\n};\n\n// src/twind/configure.ts\nvar sanitize = (value, defaultValue, disabled, enabled = defaultValue) => value === false ? disabled : value === true ? enabled : value || defaultValue;\nvar loadMode = mode2 => (typeof mode2 == \"string\" ? {\n  t: strict,\n  a: warn,\n  i: silent\n}[mode2[1]] : mode2) || warn;\nvar COMPONENT_PROPS = {\n  _: {\n    value: \"\",\n    writable: true\n  }\n};\nvar configure = (config = {}) => {\n  const theme2 = makeThemeResolver(config.theme);\n  const mode2 = loadMode(config.mode);\n  const hash = sanitize(config.hash, false, false, cyrb32);\n  const important = config.important;\n  let activeRule = {\n    v: []\n  };\n  let translateDepth = 0;\n  const lastTranslations = [];\n  const context = {\n    tw: (...tokens) => process(tokens),\n    theme: (section, key, defaultValue) => {\n      var _a;\n      const value = (_a = theme2(section, key, defaultValue)) != null ? _a : mode2.unknown(section, key == null || Array.isArray(key) ? key : key.split(\".\"), defaultValue != null, context);\n      return activeRule.n && value && includes(\"rg\", (typeof value)[5]) ? `calc(${value} * -1)` : value;\n    },\n    tag: value => hash ? hash(value) : value,\n    css: rules2 => {\n      translateDepth++;\n      const lastTranslationsIndex = lastTranslations.length;\n      try {\n        ;\n        (typeof rules2 == \"string\" ? parse([rules2]) : rules2).forEach(convert);\n        const css = Object.create(null, COMPONENT_PROPS);\n        for (let index = lastTranslationsIndex; index < lastTranslations.length; index++) {\n          const translation = lastTranslations[index];\n          if (translation) {\n            switch (typeof translation) {\n              case \"object\":\n                merge(css, translation, context);\n                break;\n              case \"string\":\n                css._ += (css._ && \" \") + translation;\n            }\n          }\n        }\n        return css;\n      } finally {\n        lastTranslations.length = lastTranslationsIndex;\n        translateDepth--;\n      }\n    }\n  };\n  const translate2 = translate({\n    ...corePlugins,\n    ...config.plugins\n  }, context);\n  const doTranslate = rule => {\n    const parentRule = activeRule;\n    activeRule = rule;\n    try {\n      return evalThunk(translate2(rule), context);\n    } finally {\n      activeRule = parentRule;\n    }\n  };\n  const variants = {\n    ...coreVariants,\n    ...config.variants\n  };\n  const decorate2 = decorate(config.darkMode || \"media\", variants, context);\n  const serialize2 = serialize(sanitize(config.prefix, autoprefix, noprefix), variants, context);\n  const sheet = config.sheet || (typeof window == \"undefined\" ? voidSheet() : cssomSheet(config));\n  const {\n    init = callback => callback()\n  } = sheet;\n  const inject2 = inject(sheet, mode2, init, context);\n  let idToClassName;\n  init((value = new Map()) => idToClassName = value);\n  const inlineDirectiveName = new WeakMap();\n  const evaluateFunctions = (key, value) => key == \"_\" ? void 0 : typeof value == \"function\" ? JSON.stringify(evalThunk(value, context), evaluateFunctions) : value;\n  const convert = rule => {\n    if (!translateDepth && activeRule.v.length) {\n      rule = {\n        ...rule,\n        v: [...activeRule.v, ...rule.v],\n        $: \"\"\n      };\n    }\n    if (!rule.$) {\n      rule.$ = stringifyRule(rule, inlineDirectiveName.get(rule.d));\n    }\n    let className = translateDepth ? null : idToClassName.get(rule.$);\n    if (className == null) {\n      let translation = doTranslate(rule);\n      if (!rule.$) {\n        rule.$ = cyrb32(JSON.stringify(translation, evaluateFunctions));\n        inlineDirectiveName.set(rule.d, rule.$);\n        rule.$ = stringifyRule(rule, rule.$);\n      }\n      if (translation && typeof translation == \"object\") {\n        rule.v = rule.v.map(prepareVariantSelector);\n        if (important) rule.i = important;\n        translation = decorate2(translation, rule);\n        if (translateDepth) {\n          lastTranslations.push(translation);\n        } else {\n          const layer = typeof rule.d == \"function\" ? typeof translation._ == \"string\" ? 1 : 3 : 2;\n          className = hash || typeof rule.d == \"function\" ? (hash || cyrb32)(layer + rule.$) : rule.$;\n          serialize2(translation, className, rule, layer).forEach(inject2);\n          if (translation._) {\n            className += \" \" + translation._;\n          }\n        }\n      } else {\n        if (typeof translation == \"string\") {\n          className = translation;\n        } else {\n          className = rule.$;\n          mode2.report({\n            id: \"UNKNOWN_DIRECTIVE\",\n            rule: className\n          }, context);\n        }\n        if (translateDepth && typeof rule.d !== \"function\") {\n          lastTranslations.push(className);\n        }\n      }\n      if (!translateDepth) {\n        idToClassName.set(rule.$, className);\n        ensureMaxSize(idToClassName, 3e4);\n      }\n    }\n    return className;\n  };\n  const process = tokens => join(parse(tokens).map(convert).filter(Boolean), \" \");\n  const preflight = sanitize(config.preflight, identity, false);\n  if (preflight) {\n    const css = createPreflight(theme2);\n    const styles = serialize2(typeof preflight == \"function\" ? evalThunk(preflight(css, context), context) || css : {\n      ...css,\n      ...preflight\n    });\n    init((injected = (styles.forEach(inject2), true)) => injected);\n  }\n  return {\n    init: () => mode2.report({\n      id: \"LATE_SETUP_CALL\"\n    }, context),\n    process\n  };\n};\n\n// src/twind/instance.ts\nvar create = config => {\n  let process = tokens => {\n    init();\n    return process(tokens);\n  };\n  let init = config2 => {\n    ;\n    ({\n      process,\n      init\n    } = configure(config2));\n  };\n  if (config) init(config);\n  let context;\n  const fromContext = key => () => {\n    if (!context) {\n      process([_4 => {\n        context = _4;\n        return \"\";\n      }]);\n    }\n    return context[key];\n  };\n  return {\n    tw: Object.defineProperties((...tokens) => process(tokens), {\n      theme: {\n        get: fromContext(\"theme\")\n      }\n    }),\n    setup: config2 => init(config2)\n  };\n};\n\n// src/twind/default.ts\nvar {\n  tw,\n  setup\n} = /* @__PURE__ */create();\n\n// src/twind/expand.ts\nvar expandGroups = classNames => parse(classNames).map(rule => stringifyRule(rule)).join(\" \");\nexport { apply, autoprefix, create, cssomSheet, directive, expandGroups, cyrb32 as hash, mode, noprefix, setup, silent, strict, theme, tw, voidSheet, warn };","map":{"version":3,"names":["includes","value","search","indexOf","join","parts","separator","joinTruthy","filter","Boolean","tail","array","startIndex","slice","identity","noop","capitalize","toUpperCase","hyphenate","replace","toLowerCase","evalThunk","context","ensureMaxSize","map","max","size","delete","keys","next","isCSSProperty","key","Array","isArray","merge","target","source","Object","reduce","target2","concat","escape","CSS","className","buildMediaQuery","screen","screen2","min","raw","feature","cyrb32","h","index","length","Math","imul","charCodeAt","toString","sortedInsertionIndex","element","low","high","pivot","groupings","rules","startGrouping","push","endGrouping","isWhitespace","lastIndexOf","onlyPrefixes","s","onlyVariants","addRule","directive2","negate","v","d","n","i","$","saveRule","buffer","prefix","parseString","token","isVariant","char","dynamic","position2","parseGroupedToken","parseToken","parseGroup","forEach","staticsCaches","WeakMap","buildStatics","strings","statics","get","slowModeIndex","NaN","interpolation","staticRules","activeGroupings","set","parse","tokens","apply2","isFunctionFree","detectFunction","stringify","data","JSON","cacheByFactory","directive","factory","cache","Map","defineProperty","params","applyFactory","css","apply","positions","resolve","suffix","properties","declarations","property2","corners","t","r","b","l","tl","tr","bl","br","expandEdges","x","y","split","sort","edges","stringifyVariant","selector","variant","stringifyRule","rule","_","__","toColumnsOrRows","property","id","propertyValue","themeProperty","section","theme","theme2","themePropertyFallback","alias","handler","name","display","position","textTransform","textDecoration","fontStyle","fontVariantNumeric","inset","opacityProperty","parseColorComponent","chars","factor","round","parseInt","asRGBA","color","opacityProperty2","opacityDefault","substr","withOpacityFallback","kind","transparentTo","reversableEdge","placeHelper","contentPluginFor","gridPlugin","border","borderWidth","borderEdges","_a","edges2","rules2","entries","newRules","startsWith","edge","transform","gpu","transformXYFunction","edgesPluginFor","padding","margin","minMax","w","unshift","filters","shift","_4","corePlugins","group","tag","hidden","inline","block","contents","flow","table","tableLayout","flex","flexDirection","flexWrap","grid","Number","gridAutoFlow","auto","static","fixed","absolute","relative","sticky","visible","visibility","invisible","antialiased","WebkitFontSmoothing","MozOsxFontSmoothing","truncate","overflow","whiteSpace","textOverflow","width","height","clip","resize","box","boxSizing","appearance","cursor","float","clear","decoration","isolate","isolation","top","right","bottom","left","underline","uppercase","lowercase","italic","font","fontFamily","items","alignItems","justify","content","self","place","overscroll","col","row","duration","delay","tracking","leading","z","opacity","ease","p","py","px","pt","pr","pb","pl","m","my","mx","mt","mr","mb","ml","fill","order","origin","select","align","whitespace","ordinal","rotate","scale","translate","skew","gap","stroke","outline","outlineOffset","wordBreak","overflowWrap","text","textAlign","fontSize","lineHeight","bg","backgroundRepeat","backgroundImage","backgroundPosition","backgroundSize","from","via","to","divide","space","placeholder","shadow","boxShadow","animate","animation","ring","object","objectFit","list","listStylePosition","rounded","transitionProperty","transition","transitionTimingFunction","transitionDuration","container","screens","center","padding2","paddingFor","DEFAULT","paddingRight","paddingLeft","marginRight","marginLeft","blur","brightness","contrast","grayscale","invert","saturate","sepia","backdrop","createPreflight","tabSize","button","backgroundColor","WebkitAppearance","listStyle","html","WebkitTextSizeAdjust","body","hr","borderTopWidth","img","borderStyle","textarea","textIndent","borderColor","borderCollapse","fontWeight","a","progress","verticalAlign","summary","sub","sup","maxWidth","coreVariants","dark","first","last","even","odd","children","siblings","sibling","override","STYLE_ELEMENT_ID","getStyleElement","nonce","document","head","appendChild","createElement","createTextNode","cssomSheet","sheet","offset","cssRules","insert","insertRule","voidSheet","mode","report","unknown","optional","info","warn","message","console","strict","Error","silent","cssPropertyAlias","cssPropertyPrefixFlags","cssValuePrefixFlags","noprefix","important","autoprefix","cssText","propertyAlias","flags","ratios","start","end","result","dividend","toFixed","exponential","stop","unit","linear","divideBy","step","alias2","themeFactory","args","defaultTheme","sm","md","lg","xl","colors","transparent","current","black","white","gray","red","yellow","green","blue","indigo","purple","pink","spacing","durations","none","spin","ping","pulse","bounce","backdropBlur","backdropBrightness","backdropContrast","backdropGrayscale","backdropHueRotate","backdropInvert","backdropOpacity","backdropSaturate","backdropSepia","backgroundOpacity","cover","contain","borderOpacity","borderRadius","full","inner","divideColor","divideOpacity","divideWidth","dropShadow","hueRotate","initial","sans","serif","mono","xs","base","thin","extralight","light","normal","medium","semibold","bold","extrabold","gridTemplateColumns","gridTemplateRows","gridAutoColumns","fr","gridAutoRows","gridColumn","gridRow","gradientColorStops","keyframes","animationTimingFunction","letterSpacing","tighter","tight","wide","wider","widest","snug","relaxed","loose","maxHeight","breakpoints","prose","minHeight","minWidth","placeholderColor","placeholderOpacity","ringColor","ringOffsetColor","ringOffsetWidth","ringOpacity","ringWidth","strokeWidth","textColor","textOpacity","transitionDelay","all","in","out","zIndex","flattenColorPalette","resolveContext","negative","handleArbitraryValues","test","makeThemeResolver","config","deref","theme3","defaultValue","keypath","assign","extend","plugins","isTranslating","parameters","prototype","hasOwnProperty","call","plugin","_2","GROUP_RE","NOT_PREFIX_RE","prepareVariantSelector","decorate","darkMode","variants","applyVariant","translation","exec","not","variant2","reduceRight","_3","responsivePrecedence","seperatorPrecedence","string","atRulePresedence","PRECEDENCES_BY_PSEUDO_CLASS","pseudoPrecedence","pseudoClass","makeVariantPresedenceCalculator","presedence","declarationPropertyPrecedence","stringifyBlock","serialize","tagVar","tagVars","stringifyDeclaration","value2","stringify2","atRules","css2","maxPropertyPresedence","numberOfDeclarations","currentSize","waypoints","splice","sum","trim","selectorPart","comma","_5","keyPart","comma2","variantPresedence","layer","inject","mode2","init","sortedPrecedences","insertedRules","Set","has","add","error","sanitize","disabled","enabled","loadMode","COMPONENT_PROPS","writable","configure","hash","activeRule","translateDepth","lastTranslations","tw","process","lastTranslationsIndex","convert","create","translate2","doTranslate","parentRule","decorate2","serialize2","window","callback","inject2","idToClassName","inlineDirectiveName","evaluateFunctions","preflight","styles","injected","config2","fromContext","defineProperties","setup","expandGroups","classNames"],"sources":["/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/internal/util.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/parse.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/directive.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/apply.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/helpers.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/plugins.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/preflight.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/variants.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/internal/dom.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/sheets.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/modes.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/prefix.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/theme.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/translate.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/decorate.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/presedence.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/serialize.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/inject.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/configure.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/instance.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/default.ts","/Users/marshennikova/Desktop/portfolio projects/personal/node_modules/src/twind/expand.ts"],"sourcesContent":["import type {\n  Context,\n  Hasher,\n  Falsy,\n  MaybeThunk,\n  CSSRules,\n  ThemeScreen,\n  ThemeScreenValue,\n  CSSRuleValue,\n} from '../types'\n\ninterface Includes {\n  (value: string, search: string): boolean\n  <T>(value: readonly T[], search: T): boolean\n}\n\nexport const includes: Includes = (value: string | readonly unknown[], search: unknown) =>\n  // eslint-disable-next-line no-implicit-coercion\n  !!~(value as string).indexOf(search as string)\n\nexport const join = (parts: readonly string[], separator = '-'): string => parts.join(separator)\n\nexport const joinTruthy = (parts: readonly (string | Falsy)[], separator?: string): string =>\n  join(parts.filter(Boolean) as string[], separator)\n\nexport const tail = <T extends string | readonly unknown[]>(array: T, startIndex = 1): T =>\n  array.slice(startIndex) as T\n\nexport const identity = <T>(value: T): T => value\n\nexport const noop = (): void => {\n  /* no-op */\n}\n\nexport const capitalize = <T extends string>(value: T): Capitalize<T> =>\n  (value[0].toUpperCase() + tail(value)) as Capitalize<T>\n\nexport const hyphenate = (value: string): string => value.replace(/[A-Z]/g, '-$&').toLowerCase()\n\nexport const evalThunk = <T>(value: MaybeThunk<T>, context: Context): T => {\n  while (typeof value == 'function') {\n    value = (value as (context: Context) => T)(context)\n  }\n\n  return value\n}\n\nexport const ensureMaxSize = <K, V>(map: Map<K, V>, max: number): void => {\n  // Ensure the cache does not grow unlimited\n  if (map.size > max) {\n    map.delete(map.keys().next().value)\n  }\n}\n\n// string, number or Array => a property with a value\nexport const isCSSProperty = (key: string, value: CSSRuleValue): boolean =>\n  !includes('@:&', key[0]) && (includes('rg', (typeof value)[5]) || Array.isArray(value))\n\nexport const merge = (target: CSSRules, source: CSSRules, context: Context): CSSRules =>\n  source\n    ? Object.keys(source).reduce((target, key) => {\n        const value = evalThunk(source[key], context)\n\n        if (isCSSProperty(key, value)) {\n          // hyphenate target key only if key is property like (\\w-)\n          target[hyphenate(key)] = value\n        } else {\n          // Keep all @font-face, @import, @global, @apply as is\n          target[key] =\n            key[0] == '@' && includes('figa', key[1])\n              ? ((target[key] || []) as CSSRules[]).concat(value as CSSRules)\n              : merge((target[key] || {}) as CSSRules, value as CSSRules, context)\n        }\n\n        return target\n      }, target)\n    : target\n\nexport const escape =\n  (typeof CSS !== 'undefined' && CSS.escape) ||\n  // Simplified: escaping only special characters\n  // Needed for NodeJS and Edge <79 (https://caniuse.com/mdn-api_css_escape)\n  ((className: string): string =>\n    className\n      // Simplifed escape testing only for chars that we know happen to be in tailwind directives\n      .replace(/[!\"'`*+.,;:\\\\/<=>?@#$%&^|~()[\\]{}]/g, '\\\\$&')\n      // If the character is the first character and is in the range [0-9] (2xl, ...)\n      // https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n      .replace(/^\\d/, '\\\\3$& '))\n\nexport const buildMediaQuery = (screen: ThemeScreen): string => {\n  if (!Array.isArray(screen)) {\n    screen = [screen as ThemeScreenValue]\n  }\n\n  return (\n    '@media ' +\n    join(\n      (screen as ThemeScreenValue[]).map((screen) => {\n        if (typeof screen == 'string') {\n          screen = { min: screen }\n        }\n\n        return (\n          (screen as { raw?: string }).raw ||\n          join(\n            Object.keys(screen).map(\n              (feature) => `(${feature}-width:${(screen as Record<string, string>)[feature]})`,\n            ),\n            ' and ',\n          )\n        )\n      }),\n      ',',\n    )\n  )\n}\n\n// Based on https://stackoverflow.com/a/52171480\nexport const cyrb32: Hasher = (value: string): string => {\n  // eslint-disable-next-line no-var\n  for (var h = 9, index = value.length; index--; ) {\n    h = Math.imul(h ^ value.charCodeAt(index), 0x5f356495)\n  }\n\n  return 'tw-' + ((h ^ (h >>> 9)) >>> 0).toString(36)\n}\n\n/**\n * Find the array index of where to add an element to keep it sorted.\n *\n * @returns The insertion index\n */\nexport const sortedInsertionIndex = (array: readonly number[], element: number): number => {\n  // Find position by binary search\n  // eslint-disable-next-line no-var\n  for (var low = 0, high = array.length; low < high; ) {\n    const pivot = (high + low) >> 1\n\n    // Less-Then-Equal to add new equal element after all existing equal elements (stable sort)\n    if (array[pivot] <= element) {\n      low = pivot + 1\n    } else {\n      high = pivot\n    }\n  }\n\n  return high\n}\n","import type { Rule, Token, TokenGrouping, MaybeTokenInterpolation } from '../types'\n\nimport { join, tail, includes } from '../internal/util'\n\n// The parsing is stacked based\n// when ever we find a group start\n// - in strings ':' or '(',\n// - array values\n// - object keys and their value\n// we add an empty marker string `\"\"` into `groupings` to mark the group start\n// if we find a variant or prefix we push it onto `groupings`\n// once the group ends (whitespace or ')') we drop all entries until the last marker\n// This way we can filter `groupings` for truthy values which are either\n// a variant (starting with ':') or a prefix\n\n// Shared variables used during parsing\n\n// List of active groupings: either variant (':xxx') or prefix\n// sm:text => ':sm'\n// sm:(text) => ':sm', ''\n// text(center sm:hover:underline focus:black) sm:rounded\n// => 'text'\n// => 'text', ''\n// => 'text', '', ':sm'\n// => 'text', '', ':sm', ':hover'\n// => 'text', ''\n// => 'text', '', ':focus'\n// => 'text'\n// =>\n// => ':sm'\nlet groupings: string[]\n\n// List of parsed rules\nlet rules: Rule[]\n\n// A new group has been found\n// this maybe a value (':variant' or 'prefix') or an empty marker string\nconst startGrouping = (value = ''): '' => {\n  groupings.push(value)\n  return ''\n}\n\n// Close a group\n// Within strings we need to distinguish between a whitespace and a closing bracket\n// a) if we have a whitespace\n// we want to keep everything up to including the last group start\n//\n// b) if we have a non-whitespace\n// we want to keep everything before the last group start\nconst endGrouping = (isWhitespace?: boolean): void => {\n  // true => +1\n  // false => +0\n  groupings.length = Math.max(groupings.lastIndexOf('') + ~~(isWhitespace as boolean), 0)\n}\n\nconst onlyPrefixes = (s: string): '' | boolean => s && !includes('!:', s[0])\nconst onlyVariants = (s: string): '' | boolean => s[0] == ':'\n\nconst addRule = (directive: Rule['d'], negate?: boolean): void => {\n  rules.push({\n    v: groupings.filter(onlyVariants),\n    d: directive,\n    n: negate,\n    i: includes(groupings, '!'),\n    $: '',\n  })\n}\n\nconst saveRule = (buffer: string): '' => {\n  const negate = buffer[0] == '-'\n\n  if (negate) {\n    buffer = tail(buffer)\n  }\n\n  const prefix = join(groupings.filter(onlyPrefixes))\n\n  addRule(buffer == '&' ? prefix : (prefix && prefix + '-') + buffer, negate)\n\n  return ''\n}\n\nconst parseString = (token: string, isVariant?: boolean): void => {\n  let buffer = ''\n\n  for (let char: string, dynamic = false, position = 0; (char = token[position++]); ) {\n    if (dynamic || char == '[') {\n      buffer += char\n      dynamic = char != ']'\n      continue\n    }\n\n    switch (char) {\n      case ':':\n        // Check if this is an pseudo element \"after::\"\n        buffer =\n          buffer && startGrouping(':' + (token[position] == char ? token[position++] : '') + buffer)\n\n        break\n\n      case '(':\n        // If there is a buffer this is the prefix for all grouped tokens\n        buffer = buffer && startGrouping(buffer)\n\n        startGrouping()\n\n        break\n\n      case '!':\n        startGrouping(char)\n\n        break\n\n      case ')':\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case '\\r':\n        buffer = buffer && saveRule(buffer)\n        endGrouping(char !== ')')\n\n        break\n\n      default:\n        buffer += char\n    }\n  }\n\n  if (buffer) {\n    if (isVariant) {\n      startGrouping(':' + buffer)\n    } else if (buffer.slice(-1) == '-') {\n      startGrouping(buffer.slice(0, -1))\n    } else {\n      saveRule(buffer)\n    }\n  }\n}\n\nconst parseGroupedToken = (token: Token): void => {\n  startGrouping()\n\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  parseToken(token)\n\n  endGrouping()\n}\n\nconst parseGroup = (key: string, token: Token): void => {\n  if (token) {\n    startGrouping()\n\n    // we care about: string, object and function\n    // \"undefined\"\n    // \"object\" - this includes arrays\n    // \"boolean\"\n    // \"number\"\n    // \"bigint\"\n    // \"string\"\n    // \"symbol\"\n    // \"function\"\n    // 2nd char is uniq\n    const isVariant = includes('tbu', (typeof token)[1])\n\n    parseString(key, isVariant)\n\n    if (isVariant) {\n      parseGroupedToken(token)\n    }\n\n    endGrouping()\n  }\n}\n\nconst parseToken = (token: Token): void => {\n  switch (typeof token) {\n    case 'string':\n      // string (inferred)\n      parseString(token)\n      break\n    case 'function':\n      // InlineDirective (inferred)\n      addRule(token)\n      break\n    case 'object':\n      if (Array.isArray(token)) {\n        // Token[] (inferred)\n        token.forEach(parseGroupedToken)\n      } else if (token) {\n        // TokenGrouping (coerced, see parseGroup() call below)\n        Object.keys(token).forEach((key) => {\n          parseGroup(key, (token as TokenGrouping)[key])\n        })\n      }\n  }\n}\n\n// A function to be called with an interpolation\n// to add dynamic rules\ntype Static = (interpolation: Token) => void\n\n// Template literal strings do not change\n// we can pre-calculate all groupings and static rules\n// which are later combined with the dynamic rules from interpolations\n//\n// For this to work we assume that interpolations do not\n// affect the current groupings:\n// Fast mode: tw`text(${'center'})`, tw`text-${'center'}`\n// Slow mode: tw`text-${'red'}-600`, tw`bg(${'red'}(600 700(hover:&))`, tw`${\"hover\"}:text-blue-600`,\nconst staticsCaches = new WeakMap<TemplateStringsArray, Static[]>()\n\nconst buildStatics = (strings: TemplateStringsArray): Static[] => {\n  let statics = staticsCaches.get(strings)\n\n  if (!statics) {\n    // Index within strings from which on we use slow mode for parsing\n    // these means collecting all strings and string interpolations\n    // into `buffer` and parse it dynamicly\n    let slowModeIndex = NaN\n\n    // Used during slow mode to join consecutive strings\n    let buffer = ''\n\n    statics = strings.map((token, index) => {\n      if (\n        slowModeIndex !== slowModeIndex &&\n        (token.slice(-1) == '[' || includes(':-(', (strings[index + 1] || '')[0]))\n      ) {\n        // If the the string after the upcoming interpolation\n        // would start a grouping we switch to slow mode now\n        slowModeIndex = index\n      }\n\n      // Slow mode\n      if (index >= slowModeIndex) {\n        return (interpolation) => {\n          // If first => reset bufferd tokens\n          if (index == slowModeIndex) {\n            buffer = ''\n          }\n\n          buffer += token\n\n          // Join consecutive strings and numbers\n          if (includes('rg', (typeof interpolation)[5])) {\n            buffer += interpolation\n          } else if (interpolation) {\n            parseString(buffer)\n            buffer = ''\n            parseToken(interpolation)\n          }\n\n          // If last => parse remaining buffered tokens\n          if (index == strings.length - 1) {\n            parseString(buffer)\n          }\n        }\n      }\n\n      // Fast mode\n      // Reset rules to extract all static generated rules\n      const staticRules = (rules = [])\n\n      parseString(token)\n\n      // Copy the active groupings to set them\n      // before interpolation processing\n      const activeGroupings = [...groupings]\n\n      // Reset the rules\n      rules = []\n\n      return (interpolation) => {\n        rules.push(...staticRules)\n        groupings = [...activeGroupings]\n        if (interpolation) {\n          parseToken(interpolation)\n        }\n      }\n    })\n\n    staticsCaches.set(strings, statics)\n  }\n\n  return statics\n}\n\nexport const parse = (tokens: string | MaybeTokenInterpolation): Rule[] => {\n  groupings = []\n  rules = []\n\n  // Handles template literal strings\n  if (\n    Array.isArray(tokens[0] as TemplateStringsArray) &&\n    Array.isArray((tokens[0] as TemplateStringsArray).raw)\n  ) {\n    buildStatics(tokens[0] as TemplateStringsArray).forEach((apply, index) =>\n      apply(tokens[index + 1] as Token),\n    )\n  } else {\n    // Token includes string type\n    parseToken(tokens as Token)\n  }\n\n  return rules\n}\n","import type { Context, Directive, MaybeThunk } from '../types'\n\nimport { ensureMaxSize, evalThunk } from '../internal/util'\n\nlet isFunctionFree: boolean\nconst detectFunction = (key: string, value: unknown): unknown => {\n  if (typeof value == 'function') {\n    isFunctionFree = false\n  }\n\n  return value\n}\n\nconst stringify = (data: unknown): string | false => {\n  isFunctionFree = true\n\n  const key = JSON.stringify(data, detectFunction)\n\n  return isFunctionFree && key\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst cacheByFactory = new WeakMap<\n  (data: any, context: Context) => any,\n  Map<string, Directive<any>>\n>()\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\n * Returns an optimized and cached function for use with `tw`.\n *\n * `tw` caches rules based on the function identity. This helper caches\n * the function based on the data.\n *\n * @param factory to use when the directive is invoked\n * @param data to use\n */\nexport const directive = <Data, T>(\n  factory: (data: Data, context: Context) => MaybeThunk<T>,\n  data: Data,\n): Directive<T> => {\n  const key = stringify(data)\n\n  let directive: Directive<T> | undefined\n\n  if (key) {\n    // eslint-disable-next-line no-var\n    var cache = cacheByFactory.get(factory)\n\n    if (!cache) {\n      cacheByFactory.set(factory, (cache = new Map()))\n    }\n\n    directive = cache.get(key)\n  }\n\n  if (!directive) {\n    directive = Object.defineProperty(\n      (params: string[] | Context, context: Context): T => {\n        context = Array.isArray(params) ? context : params\n        return evalThunk(factory(data, context), context)\n      },\n      'toJSON',\n      {\n        // Allow twind to generate a unique id for this directive\n        // twind uses JSON.stringify which returns undefined for functions like this directive\n        // providing a toJSON function allows to include this directive in the id generation\n        value: () => key || data,\n      },\n    )\n\n    if (cache) {\n      cache.set(key as string, directive as Directive<T>)\n\n      // Ensure the cache does not grow unlimited\n      ensureMaxSize(cache, 10000)\n    }\n  }\n\n  return directive as Directive<T>\n}\n","import type { Token, Directive, CSSRules, Context, MaybeTokenInterpolation } from '../types'\n\nimport { parse } from './parse'\nimport { directive } from './directive'\n\n// see MaybeTokenInterpolation type union of possible args array spread\nexport interface Apply {\n  (strings: TemplateStringsArray, ...interpolations: Token[]): Directive<CSSRules>\n\n  (...tokens: Token[]): Directive<CSSRules>\n}\n\nconst applyFactory = (tokens: MaybeTokenInterpolation, { css }: Context) => css(parse(tokens))\n\nexport const apply: Apply = (...tokens: MaybeTokenInterpolation): Directive<CSSRules> =>\n  directive(applyFactory, tokens)\n","/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport type { CSSRules, Rule } from '../types'\n\nimport { joinTruthy, tail } from '../internal/util'\n\nconst positions = (resolve: (position: string) => undefined | string[] | void) => (\n  value: string | string[] | undefined,\n  position: string,\n  prefix?: string,\n  suffix?: string,\n): CSSRules | undefined => {\n  if (value) {\n    const properties = position && resolve(position)\n\n    if (properties && properties.length > 0) {\n      return properties.reduce((declarations, property) => {\n        declarations[joinTruthy([prefix, property, suffix])] = value\n        return declarations\n      }, {} as CSSRules)\n    }\n  }\n}\n\nexport const corners = /*#__PURE__*/ positions(\n  (key) =>\n    (({\n      t: ['top-left', 'top-right'],\n      r: ['top-right', 'bottom-right'],\n      b: ['bottom-left', 'bottom-right'],\n      l: ['bottom-left', 'top-left'],\n      tl: ['top-left'],\n      tr: ['top-right'],\n      bl: ['bottom-left'],\n      br: ['bottom-right'],\n    } as Record<string, undefined | string[]>)[key]),\n)\n\nexport const expandEdges = (key: string): string[] | undefined => {\n  const parts = (({ x: 'lr', y: 'tb' } as Record<string, undefined | string>)[key] || key || '')\n    .split('')\n    .sort()\n\n  for (let index = parts.length; index--; ) {\n    if (\n      !(parts[index] = ({\n        t: 'top',\n        r: 'right',\n        b: 'bottom',\n        l: 'left',\n      } as Record<string, string>)[parts[index]])\n    )\n      return\n  }\n\n  if (parts.length) return parts\n}\n\n// Support several edges like 'tr'\n// 'x' and 'y' can not be combined with others because size 'xl'\n// Every char must be a edge position\n// Sort to have consistent declaration ordering\nexport const edges = /*#__PURE__*/ positions(expandEdges)\n\nconst stringifyVariant = (selector: string, variant: string): string =>\n  selector + (variant[1] == ':' ? tail(variant, 2) + ':' : tail(variant)) + ':'\n\n// Creates rule id including variants, negate and directive\n// which is exactly like a tailwind rule\nexport const stringifyRule = (rule: Rule, directive = rule.d): string =>\n  typeof directive == 'function'\n    ? ''\n    : rule.v.reduce(stringifyVariant, '') + (rule.i ? '!' : '') + (rule.n ? '-' : '') + directive\n/* eslint-enable @typescript-eslint/consistent-type-assertions */\n","/* eslint-disable no-return-assign, no-cond-assign, @typescript-eslint/consistent-type-assertions */\nimport type {\n  Theme,\n  CSSRules,\n  CSSProperties,\n  Plugin,\n  ThemeResolver,\n  Context,\n  Falsy,\n  ThemeContainer,\n  ThemeScreen,\n} from '../types'\n\nimport {\n  includes,\n  join,\n  joinTruthy,\n  tail,\n  capitalize,\n  hyphenate,\n  buildMediaQuery,\n} from '../internal/util'\nimport { corners, expandEdges, edges } from './helpers'\n\ntype PluginHandler = (\n  parameters: string[],\n  context: Context,\n  id: string,\n) => CSSRules | string | Falsy\n\n// Shared variables\nlet _: undefined | string | CSSRules | CSSProperties | string[] | boolean | Falsy | number\nlet __: undefined | string | CSSProperties\nlet $: undefined | string | number | ThemeScreen\n\nconst toColumnsOrRows = (x: string): 'columns' | 'rows' => (x == 'cols' ? 'columns' : 'rows')\n\nconst property = (property: string) => (\n  params: string[],\n  context: unknown,\n  id: string,\n): CSSRules => ({\n  [property]: id + ((_ = join(params)) && '-' + _),\n})\n\nconst propertyValue = (property?: string, separator?: string) => (\n  params: string[],\n  context?: Context,\n  id?: string,\n): CSSRules | string =>\n  (_ = join(params, separator)) && {\n    [property || (id as string)]: _,\n  }\n\nconst themeProperty = (section?: keyof Theme): PluginHandler => (params: string[], { theme }, id) =>\n  (_ = theme(section || (id as keyof Theme), params) as string) && {\n    [section || id]: _,\n  }\n\nconst themePropertyFallback = (section?: keyof Theme, separator?: string): PluginHandler => (\n  params: string[],\n  { theme },\n  id,\n) =>\n  (_ = theme(section || (id as keyof Theme), params, join(params, separator)) as string) && {\n    [section || id]: _,\n  }\n\nconst alias = (handler: PluginHandler, name: string): PluginHandler => (params, context) =>\n  handler(params, context, name)\n\nconst display = property('display')\nconst position = property('position')\nconst textTransform = property('textTransform')\nconst textDecoration = property('textDecoration')\nconst fontStyle = property('fontStyle')\nconst fontVariantNumeric = (key: string): PluginHandler => (params, context, id) => ({\n  ['--tw-' + key]: id,\n  fontVariantNumeric:\n    'var(--tw-ordinal,/*!*/ /*!*/) var(--tw-slashed-zero,/*!*/ /*!*/) var(--tw-numeric-figure,/*!*/ /*!*/) var(--tw-numeric-spacing,/*!*/ /*!*/) var(--tw-numeric-fraction,/*!*/ /*!*/)',\n})\n\nconst inset: PluginHandler = (params, { theme }, id) => (_ = theme('inset', params)) && { [id]: _ }\n\nconst opacityProperty = (\n  params: string[],\n  theme: ThemeResolver,\n  id: string,\n  section = id,\n): CSSRules | undefined =>\n  (_ = theme((section + 'Opacity') as 'textOpacity', tail(params)) as undefined) && {\n    [`--tw-${id}-opacity`]: _,\n  }\n\nconst parseColorComponent = (chars: string, factor: number): number =>\n  Math.round(parseInt(chars, 16) * factor)\n\nconst asRGBA = <T extends string | undefined>(\n  color: T,\n  opacityProperty: string,\n  opacityDefault?: string,\n): T | string => {\n  if (color && color[0] == '#' && (_ = (color.length - 1) / 3) && ($ = [17, 1, 0.062272][_ - 1])) {\n    return `rgba(${parseColorComponent(color.substr(1, _), $)},${parseColorComponent(\n      color.substr(1 + _, _),\n      $,\n    )},${parseColorComponent(color.substr(1 + 2 * _, _), $)},${\n      opacityProperty\n        ? `var(--tw-${opacityProperty}${opacityDefault ? ',' + opacityDefault : ''})`\n        : opacityDefault || 1\n    })`\n  }\n\n  return color\n}\n\nconst withOpacityFallback = (\n  property: string,\n  kind: string,\n  color: string | undefined,\n): CSSRules | undefined =>\n  color && typeof color == 'string'\n    ? (_ = asRGBA(color, kind + '-opacity')) && _ !== color\n      ? {\n          [`--tw-${kind}-opacity`]: '1',\n          [property]: [color, _],\n        }\n      : { [property]: color }\n    : undefined\n\nconst transparentTo = (color: string) => (($ = asRGBA(color, '', '0')) == _ ? 'transparent' : $)\n\nconst reversableEdge = (\n  params: string[],\n  { theme }: Context,\n  id: string,\n  section: 'divideWidth' | 'space',\n  prefix: string,\n  suffix?: string,\n  // eslint-disable-next-line max-params\n): CSSRules | undefined =>\n  (_ = ({ x: ['right', 'left'], y: ['bottom', 'top'] } as Record<string, undefined | string[]>)[\n    params[0]\n  ]) && ($ = `--tw-${id}-${params[0]}-reverse`)\n    ? params[1] == 'reverse'\n      ? {\n          [$]: '1',\n        }\n      : {\n          [$]: '0',\n          [joinTruthy([prefix, _[0], suffix])]:\n            (__ = theme(section, tail(params))) && `calc(${__} * var(${$}))`,\n          // With fallback\n          [joinTruthy([prefix, _[1], suffix])]: __ && [__, `calc(${__} * calc(1 - var(${$})))`],\n        }\n    : undefined\n\nconst placeHelper = (property: string, params: string[]): CSSRules | string =>\n  params[0] && {\n    // 'auto'\n    // 'start'\n    // 'end'\n    // 'center'\n    // 'stretch'\n    // 'between'\n    // 'around'\n    // 'evenly'\n    // 'between', 'around', 'evenly' => space-$0\n    // 4th char is unique\n    [property]: (includes('wun', (params[0] || '')[3]) ? 'space-' : '') + params[0],\n  }\n\nconst contentPluginFor = (property: string) => (params: string[]): CSSRules | string =>\n  includes(['start', 'end'], params[0])\n    ? { [property]: 'flex-' + params[0] }\n    : placeHelper(property, params)\n\nconst gridPlugin = (kind: 'column' | 'row'): PluginHandler => (params, { theme }) => {\n  if ((_ = theme(('grid' + capitalize(kind)) as 'gridRow', params, ''))) {\n    return { ['grid-' + kind]: _ }\n  }\n\n  switch (params[0]) {\n    case 'span':\n      return (\n        params[1] && {\n          ['grid-' + kind]: `span ${params[1]} / span ${params[1]}`,\n        }\n      )\n    case 'start':\n    case 'end':\n      return (\n        (_ = theme(\n          ('grid' + capitalize(kind) + capitalize(params[0])) as 'gridRowStart',\n          tail(params),\n          join(tail(params)),\n        )) && {\n          [`grid-${kind}-${params[0]}`]: _,\n        }\n      )\n  }\n}\n\nconst border: PluginHandler = (params, { theme }, id) => {\n  switch (params[0]) {\n    case 'solid':\n    case 'dashed':\n    case 'dotted':\n    case 'double':\n    case 'none':\n      return propertyValue('borderStyle')(params)\n    case 'collapse':\n    case 'separate':\n      return propertyValue('borderCollapse')(params)\n    case 'opacity':\n      return opacityProperty(params, theme, id)\n  }\n\n  return (_ = theme((id + 'Width') as 'borderWidth' | 'divideWidth', params, '' /* Optional */))\n    ? { borderWidth: _ }\n    : withOpacityFallback(\n        'borderColor',\n        id,\n        theme((id + 'Color') as 'borderColor' | 'divideColor', params) as string,\n      )\n}\n\nconst borderEdges: PluginHandler = (params, context, id) => {\n  const edges = expandEdges(params[0])?.map(capitalize)\n  if (edges) {\n    params = tail(params)\n  }\n\n  let rules = border(params, context, id)\n  if (edges && rules && typeof rules === 'object') {\n    rules = Object.entries(rules).reduce((newRules, [key, value]) => {\n      if (key.startsWith('border')) {\n        for (const edge of edges) {\n          newRules[key.slice(0, 6) + edge + key.slice(6)] = value\n        }\n      } else {\n        newRules[key] = value\n      }\n\n      return newRules\n    }, {} as CSSRules)\n  }\n\n  return rules\n}\n\nconst transform = (gpu?: boolean): string =>\n  (gpu\n    ? 'translate3d(var(--tw-translate-x,0),var(--tw-translate-y,0),0)'\n    : 'translateX(var(--tw-translate-x,0)) translateY(var(--tw-translate-y,0))') +\n  ' rotate(var(--tw-rotate,0)) skewX(var(--tw-skew-x,0)) skewY(var(--tw-skew-y,0)) scaleX(var(--tw-scale-x,1)) scaleY(var(--tw-scale-y,1))'\n\n// .scale-0\t--scale-x: 0;\n// .scale-x-150\n// .scale-y-0\n// .translate-x-0\t--translate-x: 0;\n// .translate-x-1\t--translate-x: 0.25rem;\n// .translate-y-px\t--translate-y: 1px;\n// .translate-y-full\t--translate-y: 100%;\n// .translate-y-1/2\t--translate-y: 50%;\n// .skew-y-0\t--skew-y: 0;\n// .skew-y-1\t--skew-y: 1deg;\nconst transformXYFunction: PluginHandler = (params, context, id) =>\n  params[0] &&\n  (_ = context.theme(id as 'scale' | 'skew' | 'translate', params[1] || params[0])) && {\n    [`--tw-${id}-x`]: params[0] !== 'y' && _,\n    [`--tw-${id}-y`]: params[0] !== 'x' && _,\n    transform: [`${id}${params[1] ? params[0].toUpperCase() : ''}(${_})`, transform()],\n  }\n\nconst edgesPluginFor = (key: 'margin' | 'padding'): PluginHandler => (params, context, id) =>\n  id[1] ? edges(context.theme(key, params), id[1], key) : themeProperty(key)(params, context, id)\n\n// For p-*, px-*, pt-*\nconst padding = edgesPluginFor('padding')\n\n// For m-*, mx-*, mt-*\nconst margin = edgesPluginFor('margin')\n\n// 'min-w-full' -> minWidth\n// 'max-h-0.5' -> maxHeight\nconst minMax: PluginHandler = (params, { theme }, id) =>\n  (_ = ({ w: 'width', h: 'height' } as Record<string, undefined | string>)[params[0]]) && {\n    [(_ = `${id}${capitalize(_)}`)]: theme(\n      _ as 'minWidth' | 'minHeight' | 'maxWidth' | 'maxHeight',\n      tail(params),\n    ),\n  }\n\nconst filter: Plugin = (params, { theme }, id) => {\n  const parts = id.split('-')\n  const prefix = parts[0] == 'backdrop' ? parts[0] + '-' : ''\n  if (!prefix) {\n    params.unshift(...parts)\n  }\n\n  if (params[0] == 'filter') {\n    const filters = [\n      'blur',\n      'brightness',\n      'contrast',\n      'grayscale',\n      'hue-rotate',\n      'invert',\n      prefix && 'opacity',\n      'saturate',\n      'sepia',\n      !prefix && 'drop-shadow',\n    ].filter(Boolean)\n\n    return params[1] == 'none'\n      ? { [prefix + 'filter']: 'none' }\n      : filters.reduce(\n          (css, key) => {\n            css['--tw-' + prefix + key] = 'var(--tw-empty,/*!*/ /*!*/)'\n            return css\n          },\n          {\n            [prefix + 'filter']: filters.map((key) => `var(--tw-${prefix}${key})`).join(' '),\n          } as CSSRules,\n        )\n  }\n\n  $ = params.shift()\n  // hue-rotate, drop-shadow\n  if (includes(['hue', 'drop'], $)) $ += capitalize(params.shift() as string)\n\n  return (\n    (_ = theme((prefix ? 'backdrop' + capitalize($ as string) : $) as 'blur', params)) && {\n      ['--tw-' + prefix + $]: (Array.isArray(_) ? (_ as string[]) : [_])\n        .map((_) => `${hyphenate($ as string)}(${_})`)\n        .join(' '),\n    }\n  )\n}\n\nexport const corePlugins: Record<string, Plugin | undefined> = {\n  group: (params, { tag }, id) => tag(join([id, ...params])),\n\n  hidden: alias(display, 'none'),\n  inline: display,\n  block: display,\n  contents: display,\n  flow: display,\n\n  table: (params, context, id) =>\n    includes(['auto', 'fixed'], params[0])\n      ? { tableLayout: params[0] }\n      : display(params, context, id),\n\n  flex(params, context, id) {\n    switch (params[0]) {\n      case 'row':\n      case 'col':\n        return {\n          flexDirection: join(params[0] == 'col' ? ['column', ...tail(params)] : params),\n        }\n      case 'nowrap':\n      case 'wrap':\n        return { flexWrap: join(params) }\n      case 'grow':\n      case 'shrink':\n        _ = context.theme(\n          ('flex' + capitalize(params[0])) as 'flexGrow',\n          tail(params),\n          (params[1] || 1) as number,\n        )\n\n        return (\n          _ != null && {\n            ['flex-' + params[0]]: '' + _,\n          }\n        )\n    }\n\n    return (_ = context.theme('flex', params, '' /* Optional */))\n      ? { flex: _ }\n      : display(params, context, id)\n  },\n\n  grid(params, context, id) {\n    switch (params[0]) {\n      case 'cols':\n      case 'rows':\n        return (\n          (_ = context.theme(\n            ('gridTemplate' + capitalize(toColumnsOrRows(params[0]))) as 'gridTemplateRows',\n            tail(params),\n            params.length == 2 && Number(params[1])\n              ? `repeat(${params[1]},minmax(0,1fr))`\n              : join(tail(params)),\n          )) && {\n            ['gridTemplate-' + toColumnsOrRows(params[0])]: _,\n          }\n        )\n\n      case 'flow':\n        return (\n          params.length > 1 && {\n            gridAutoFlow: join(\n              params[1] == 'col' ? ['column', ...tail(params, 2)] : tail(params),\n              ' ',\n            ),\n          }\n        )\n    }\n\n    return display(params, context, id)\n  },\n\n  auto: (params, { theme }) =>\n    includes(['cols', 'rows'], params[0]) &&\n    (_ = theme(\n      ('gridAuto' + capitalize(toColumnsOrRows(params[0]))) as 'gridAutoRows' | 'gridAutoColumns',\n      tail(params),\n      join(tail(params)),\n    )) && {\n      ['gridAuto-' + toColumnsOrRows(params[0])]: _,\n    },\n\n  static: position,\n  fixed: position,\n  absolute: position,\n  relative: position,\n  sticky: position,\n\n  visible: { visibility: 'visible' },\n  invisible: { visibility: 'hidden' },\n\n  antialiased: {\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n  },\n\n  'subpixel-antialiased': {\n    WebkitFontSmoothing: 'auto',\n    MozOsxFontSmoothing: 'auto',\n  },\n\n  truncate: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n\n  'sr-only': {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    padding: '0',\n    margin: '-1px',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    clip: 'rect(0,0,0,0)',\n    borderWidth: '0',\n  },\n\n  'not-sr-only': {\n    position: 'static',\n    width: 'auto',\n    height: 'auto',\n    padding: '0',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: 'normal',\n    clip: 'auto',\n  },\n\n  resize: (params) => ({\n    resize:\n      ({ x: 'horizontal', y: 'vertical' } as Record<string, string | undefined>)[params[0]] ||\n      params[0] ||\n      'both',\n  }),\n\n  box: (params) => params[0] && { boxSizing: params[0] + '-box' },\n\n  // .appearance-none -> appearance: none;\n  // .appearance-auto -> appearance: auto;\n  // .appearance-menulist-button; -> appearance: menulist-button;\n  // .appearance-textfield -> appearance: textfield;\n  appearance: propertyValue(),\n  cursor: themePropertyFallback(),\n\n  float: propertyValue(),\n  clear: propertyValue(),\n  decoration: propertyValue('boxDecorationBreak'),\n\n  isolate: { isolation: 'isolate' },\n  isolation: propertyValue(),\n\n  'mix-blend': propertyValue('mixBlendMode'),\n\n  top: inset,\n  right: inset,\n  bottom: inset,\n  left: inset,\n\n  // 'inset-0'\n  // 'inset-1.5'\n  // 'inset-x-1.5'\n  inset: (params, { theme }) =>\n    (_ = expandEdges(params[0]))\n      ? edges(theme('inset', tail(params)), params[0])\n      : (_ = theme('inset', params)) && {\n          top: _,\n          right: _,\n          bottom: _,\n          left: _,\n        },\n\n  underline: textDecoration,\n  'line-through': textDecoration,\n  'no-underline': alias(textDecoration, 'none'),\n\n  'text-underline': alias(textDecoration, 'underline'),\n  'text-no-underline': alias(textDecoration, 'none'),\n  'text-line-through': alias(textDecoration, 'line-through'),\n\n  uppercase: textTransform,\n  lowercase: textTransform,\n  capitalize: textTransform,\n\n  'normal-case': alias(textTransform, 'none'),\n  'text-normal-case': alias(textTransform, 'none'),\n\n  italic: fontStyle,\n  'not-italic': alias(fontStyle, 'normal'),\n\n  'font-italic': alias(fontStyle, 'italic'),\n  'font-not-italic': alias(fontStyle, 'normal'),\n\n  font: (params, context, id) =>\n    (_ = context.theme('fontFamily', params, '' /* Optional */))\n      ? { fontFamily: _ }\n      : themeProperty('fontWeight')(params, context, id),\n\n  items: (params) =>\n    params[0] && {\n      alignItems: includes(['start', 'end'], params[0]) ? 'flex-' + params[0] : join(params),\n    },\n\n  'justify-self': propertyValue(),\n  'justify-items': propertyValue(),\n  justify: contentPluginFor('justifyContent'),\n  content: contentPluginFor('alignContent'),\n  self: contentPluginFor('alignSelf'),\n\n  place: (params) => params[0] && placeHelper('place-' + params[0], tail(params)),\n\n  overscroll: (params) =>\n    params[0] && {\n      ['overscrollBehavior' + (params[1] ? '-' + params[0] : '')]: params[1] || params[0],\n    },\n\n  col: gridPlugin('column'),\n  row: gridPlugin('row'),\n\n  // .duration-75\ttransition-duration: 75ms;\n  // .duration-75\ttransition-duration: 75ms;\n  duration: themeProperty('transitionDuration'),\n\n  // .delay-75\ttransition-delay: 75ms;\n  // .delay-100\ttransition-delay: 100ms;\n  delay: themeProperty('transitionDelay'),\n\n  tracking: themeProperty('letterSpacing'),\n\n  // .leading-10\tline-height: 2.5rem;\n  // .leading-none\tline-height: 1;\n  // .leading-tight\tline-height: 1.25;\n  leading: themeProperty('lineHeight'),\n\n  // .z-50\tz-index: 50;\n  // .z-auto\tz-index: auto;\n  z: themeProperty('zIndex'),\n\n  opacity: themeProperty(),\n\n  ease: themeProperty('transitionTimingFunction'),\n\n  p: padding,\n  py: padding,\n  px: padding,\n  pt: padding,\n  pr: padding,\n  pb: padding,\n  pl: padding,\n\n  m: margin,\n  my: margin,\n  mx: margin,\n  mt: margin,\n  mr: margin,\n  mb: margin,\n  ml: margin,\n\n  // .w-64\twidth: 16rem;\n  // .w-auto\twidth: auto;\n  // .w-px\twidth: 1px;\n  // .w-1/2\twidth: 50%;\n  // .w-full\twidth: 100%;\n  // .w-screen\twidth: 100vw;\n  w: themeProperty('width'),\n  h: themeProperty('height'),\n\n  min: minMax,\n  max: minMax,\n\n  fill: themeProperty(),\n\n  order: themeProperty(),\n\n  origin: themePropertyFallback('transformOrigin', ' '),\n\n  select: propertyValue('userSelect'),\n\n  'pointer-events': propertyValue(),\n\n  align: propertyValue('verticalAlign'),\n\n  whitespace: propertyValue('whiteSpace'),\n\n  'normal-nums': { fontVariantNumeric: 'normal' },\n  ordinal: fontVariantNumeric('ordinal'),\n  'slashed-zero': fontVariantNumeric('slashed-zero'),\n  'lining-nums': fontVariantNumeric('numeric-figure'),\n  'oldstyle-nums': fontVariantNumeric('numeric-figure'),\n  'proportional-nums': fontVariantNumeric('numeric-spacing'),\n  'tabular-nums': fontVariantNumeric('numeric-spacing'),\n  'diagonal-fractions': fontVariantNumeric('numeric-fraction'),\n  'stacked-fractions': fontVariantNumeric('numeric-fraction'),\n\n  // 'overflow-visible'\n  // 'overflow-x-hidden'\n  overflow: (params, context, id) =>\n    includes(['ellipsis', 'clip'], params[0])\n      ? propertyValue('textOverflow')(params)\n      : params[1]\n      ? { ['overflow-' + params[0]]: params[1] }\n      : propertyValue()(params, context, id),\n\n  transform: (params) =>\n    params[0] == 'none'\n      ? { transform: 'none' }\n      : {\n          '--tw-translate-x': '0',\n          '--tw-translate-y': '0',\n          '--tw-rotate': '0',\n          '--tw-skew-x': '0',\n          '--tw-skew-y': '0',\n          '--tw-scale-x': '1',\n          '--tw-scale-y': '1',\n          transform: transform(params[0] == 'gpu'),\n        },\n\n  // .rotate-0\t--transform-rotate: 0;\n  // .rotate-1\t--transform-rotate: 1deg;\n  rotate: (params, { theme }) =>\n    (_ = theme('rotate', params)) && {\n      '--tw-rotate': _,\n      transform: [`rotate(${_})`, transform()],\n    },\n\n  scale: transformXYFunction,\n  translate: transformXYFunction,\n  skew: transformXYFunction,\n\n  // .gap-0\tgap: 0;\n  // .gap-1\tgap: 0.25rem;\n  // .gap-px\tgap: 1px;\n  // .gap-x-0\tcolumn-gap: 0;\n  // .gap-x-1\tcolumn-gap: 0.25rem;\n  gap: (params, context, id) =>\n    (_ = ({ x: 'column', y: 'row' } as Record<string, string | undefined>)[params[0]])\n      ? { [_ + 'Gap']: context.theme('gap', tail(params)) }\n      : themeProperty('gap')(params, context, id),\n\n  // .stroke-current\tstroke: currentColor;\n  // stroke-0\tstroke-width: 0;\n  // .stroke-1\tstroke-width: 1;\n  stroke: (params, context, id) =>\n    (_ = context.theme('stroke', params, '' /* Optional */))\n      ? { stroke: _ }\n      : themeProperty('strokeWidth')(params, context, id),\n\n  // .outline-none\toutline: 2px solid transparent; outline-offset: 2px;\n  // .outline-white\toutline: 2px dotted white; outline-offset: 2px;\n  outline: (params, { theme }) =>\n    (_ = theme('outline', params)) && {\n      outline: _[0],\n      outlineOffset: _[1],\n    },\n\n  'break-normal': {\n    wordBreak: 'normal',\n    overflowWrap: 'normal',\n  },\n  'break-words': { overflowWrap: 'break-word' },\n  'break-all': { wordBreak: 'break-all' },\n\n  text(params, { theme }, id) {\n    switch (params[0]) {\n      case 'left':\n      case 'center':\n      case 'right':\n      case 'justify':\n        return { textAlign: params[0] }\n      case 'uppercase':\n      case 'lowercase':\n      case 'capitalize':\n        return textTransform([], _, params[0])\n      case 'opacity':\n        return opacityProperty(params, theme, id)\n    }\n\n    const fontSize = theme('fontSize', params, '' /* Optional */)\n\n    if (fontSize) {\n      return typeof fontSize == 'string'\n        ? { fontSize }\n        : {\n            fontSize: fontSize[0],\n            ...(typeof fontSize[1] == 'string' ? { lineHeight: fontSize[1] } : fontSize[1]),\n          }\n    }\n\n    return withOpacityFallback('color', 'text', theme('textColor', params) as string)\n  },\n\n  // eslint-disable-next-line complexity\n  bg(params, { theme }, id) {\n    switch (params[0]) {\n      case 'fixed':\n      case 'local':\n      case 'scroll':\n        return propertyValue('backgroundAttachment', ',')(params)\n\n      case 'bottom':\n      case 'center':\n      case 'left':\n      case 'right':\n      case 'top':\n        return propertyValue('backgroundPosition', ' ')(params)\n\n      case 'no':\n        return params[1] == 'repeat' && propertyValue('backgroundRepeat')(params)\n\n      case 'repeat':\n        return includes('xy', params[1])\n          ? propertyValue('backgroundRepeat')(params)\n          : { backgroundRepeat: params[1] || params[0] }\n\n      case 'opacity':\n        return opacityProperty(params, theme, id, 'background')\n\n      case 'clip':\n      case 'origin':\n        return (\n          params[1] && {\n            ['background-' + params[0]]: params[1] + (params[1] == 'text' ? '' : '-box'),\n          }\n        )\n\n      case 'blend':\n        return propertyValue('background-blend-mode')(tail(params))\n\n      // .bg-gradient-to-r => linear-gradient(to right, ...)\n      // .bg-gradient-to-r => linear-gradient(to right, ...)\n      case 'gradient':\n        if (params[1] == 'to' && (_ = expandEdges(params[2]))) {\n          return {\n            backgroundImage: `linear-gradient(to ${join(_, ' ')},var(--tw-gradient-stops))`,\n          }\n        }\n    }\n\n    return (_ = theme('backgroundPosition', params, '' /* Optional */))\n      ? { backgroundPosition: _ }\n      : (_ = theme('backgroundSize', params, '' /* Optional */))\n      ? { backgroundSize: _ }\n      : (_ = theme('backgroundImage', params, '' /* Optional */))\n      ? { backgroundImage: _ }\n      : withOpacityFallback('backgroundColor', 'bg', theme('backgroundColor', params) as string)\n  },\n\n  // .from-purple-400\n  from: (params, { theme }) =>\n    (_ = theme('gradientColorStops', params)) && {\n      '--tw-gradient-from': _,\n      '--tw-gradient-stops': `var(--tw-gradient-from),var(--tw-gradient-to,${transparentTo(\n        _ as string,\n      )})`,\n    },\n\n  // .via-pink-500\n  via: (params, { theme }) =>\n    (_ = theme('gradientColorStops', params)) && {\n      '--tw-gradient-stops': `var(--tw-gradient-from),${_},var(--tw-gradient-to,${transparentTo(\n        _ as string,\n      )})`,\n    },\n\n  // .to-red-500\n  to: (params, { theme }) =>\n    (_ = theme('gradientColorStops', params)) && {\n      '--tw-gradient-to': _ as string,\n    },\n\n  // .border\tborder-width: 1px;\n  // .border-0\tborder-width: 0;\n  // .border-2\tborder-width: 2px;\n  // .border\tborder-width: 1px;\n  // .border-t\tborder-top-width: 1px;\n  // .border-t-0\tborder-top-width: 0px;\n  // .border-t-xs\n  border: borderEdges,\n\n  // .divide-x\n  // .divide-x-8\n  divide: (params, context, id) =>\n    (_ =\n      reversableEdge(params, context, id, 'divideWidth', 'border', 'width') ||\n      border(params, context, id)) && {\n      '&>:not([hidden])~:not([hidden])': _ as CSSRules,\n    },\n\n  space: (params, context, id) =>\n    (_ = reversableEdge(params, context, id, 'space', 'margin')) && {\n      '&>:not([hidden])~:not([hidden])': _,\n    },\n\n  placeholder: (params, { theme }, id) =>\n    (_ =\n      params[0] == 'opacity'\n        ? opacityProperty(params, theme, id)\n        : withOpacityFallback(\n            'color',\n            'placeholder',\n            theme('placeholderColor', params) as string,\n          )) && {\n      '&::placeholder': _,\n    },\n\n  // .shadow\tbox-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  // .shadow-md\tbox-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  // .shadow-none\tbox-shadow: none;\n  shadow: (params, { theme }) =>\n    (_ = theme('boxShadow', params)) && {\n      ':global': {\n        '*': {\n          '--tw-shadow': '0 0 transparent',\n        },\n      },\n      '--tw-shadow': _ == 'none' ? '0 0 transparent' : _,\n      // Fallback first, then modern with ring-* support\n      boxShadow: [\n        _,\n        `var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)`,\n      ],\n    },\n\n  animate: (params, { theme, tag }) => {\n    if (($ = theme('animation', params))) {\n      // Try to auto inject keyframes\n      const parts = $.split(' ')\n\n      // Try to find a keyframe defintion in the theme using the first part\n      // Provide a default (__ = {}) and check if that is returned\n      if ((_ = theme('keyframes', parts[0], (__ = {}))) !== __) {\n        // Use a hashed named for the keyframes\n        return (\n          ($ = tag(parts[0])) && {\n            animation: $ + ' ' + join(tail(parts), ' '),\n            ['@keyframes ' + $]: _,\n          }\n        )\n      }\n\n      return { animation: $ }\n    }\n  },\n\n  // From theme.ringWidth\n  // .ring\n  // .ring-0\n  // .ring-inset\n  //\n  // From theme.colors\n  // .ring-current\n  // .ring-transparent\n  // .ring-gray-100\n  //\n  // From theme.opacity\n  // .ring-opacity-50\n  //\n  // From theme.ringOffsetWidth\n  // .ring-offset -> 2px\n  // .ring-offset-8 -> 8px\n  ring(params, { theme }, id) {\n    switch (params[0]) {\n      case 'inset':\n        return { '--tw-ring-inset': 'inset' }\n\n      case 'opacity':\n        return opacityProperty(params, theme, id)\n\n      case 'offset':\n        // Either width or color\n        return (_ = theme('ringOffsetWidth', tail(params), '' /* Optional */))\n          ? {\n              '--tw-ring-offset-width': _,\n            }\n          : {\n              '--tw-ring-offset-color': theme('ringOffsetColor', tail(params)),\n            }\n    }\n\n    // Either width or color\n    return (_ = theme('ringWidth', params, '' /* Optional */))\n      ? {\n          // A width\n          '--tw-ring-offset-shadow': `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n          '--tw-ring-shadow': `var(--tw-ring-inset) 0 0 0 calc(${_} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n          boxShadow: `var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)`,\n\n          ':global': {\n            '*': {\n              '--tw-ring-inset': 'var(--tw-empty,/*!*/ /*!*/)',\n              '--tw-ring-offset-width': theme('ringOffsetWidth', '', '0px'),\n              '--tw-ring-offset-color': theme('ringOffsetColor', '', '#fff'),\n              '--tw-ring-color': asRGBA(\n                theme('ringColor', '', '#93c5fd') as string,\n                'ring-opacity',\n                theme('ringOpacity', '', '0.5'),\n              ),\n              '--tw-ring-offset-shadow': '0 0 transparent',\n              '--tw-ring-shadow': '0 0 transparent',\n            },\n          },\n        }\n      : {\n          // A color\n          '--tw-ring-opacity': '1',\n          '--tw-ring-color': asRGBA(theme('ringColor', params) as string, 'ring-opacity'),\n        }\n  },\n\n  object: (params, context, id) =>\n    includes(['contain', 'cover', 'fill', 'none', 'scale-down'], join(params))\n      ? { objectFit: join(params) }\n      : themePropertyFallback('objectPosition', ' ')(params, context, id),\n\n  list: (params, context, id) =>\n    join(params) == 'item'\n      ? display(params, context, id)\n      : includes(['inside', 'outside'], join(params))\n      ? { listStylePosition: params[0] }\n      : themePropertyFallback('listStyleType')(params, context, id),\n\n  // .rounded\tborder-radius: 0.25rem;\n  // .rounded-5\tborder-radius: 5px;\n  // .rounded-md\tborder-radius: 0.375rem;\n  // .rounded-lg\tborder-radius: 0.5rem;\n  // .rounded-xl\tborder-radius: 0.75rem;\n  // .rounded-2xl\tborder-radius: 1rem;\n  // .rounded-3xl\tborder-radius: 1.5rem;\n  // .rounded-full\tborder-radius: 9999px;\n  // .rounded-t-none\tborder-top-left-radius: 0px; border-top-right-radius: 0px;\n  // .rounded-t-4\tborder-radius: 4px;\n  rounded: (params, context, id) =>\n    corners(\n      context.theme('borderRadius', tail(params), '' /* Optional */),\n      params[0],\n      'border',\n      'radius',\n    ) || themeProperty('borderRadius')(params, context, id),\n\n  'transition-none': { transitionProperty: 'none' },\n\n  transition: (params, { theme }) => ({\n    transitionProperty: theme('transitionProperty', params),\n    transitionTimingFunction: theme('transitionTimingFunction', ''),\n    transitionDuration: theme('transitionDuration', ''),\n  }),\n\n  container: (params, { theme }) => {\n    const { screens = theme('screens'), center, padding } = theme('container') as ThemeContainer\n\n    const paddingFor = (screen: string): CSSRules =>\n      (_ = padding && (typeof padding == 'string' ? padding : padding[screen] || padding.DEFAULT))\n        ? {\n            paddingRight: _,\n            paddingLeft: _,\n          }\n        : {}\n\n    return Object.keys(screens).reduce(\n      (rules, screen) => {\n        if (($ = screens[screen]) && typeof $ == 'string') {\n          rules[buildMediaQuery($)] = {\n            '&': {\n              'max-width': $,\n              ...paddingFor(screen),\n            },\n          }\n        }\n\n        return rules\n      },\n      {\n        width: '100%',\n        ...(center ? { marginRight: 'auto', marginLeft: 'auto' } : {}),\n        ...paddingFor('xs'),\n      } as CSSRules,\n    )\n  },\n\n  filter,\n  blur: filter,\n  brightness: filter,\n  contrast: filter,\n  grayscale: filter,\n  'hue-rotate': filter,\n  invert: filter,\n  saturate: filter,\n  sepia: filter,\n  'drop-shadow': filter,\n  backdrop: filter,\n}\n\n/* eslint-enable no-return-assign, no-cond-assign, @typescript-eslint/consistent-type-assertions */\n","// Source: https://github.com/sindresorhus/modern-normalize/blob/master/modern-normalize.css\n// License: MIT\n\n// Source: https://github.com/tailwindlabs/tailwindcss/blob/master/src/plugins/css/preflight.css\n// License: MIT\n\nimport type { CSSRules, ThemeResolver } from '../types'\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\nexport const createPreflight = (theme: ThemeResolver): CSSRules => ({\n  /**\n   * Use a more readable tab size (opinionated).\n   */\n  ':root': { tabSize: 4 },\n\n  /**\n   * Removes the default spacing and border for appropriate elements.\n   */\n  'body,blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre,fieldset,ol,ul': { margin: '0' },\n\n  button: { backgroundColor: 'transparent', backgroundImage: 'none' },\n\n  /**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n  'button,[type=\"button\"],[type=\"reset\"],[type=\"submit\"]': { WebkitAppearance: 'button' },\n\n  /**\n   * Work around a Firefox/IE bug where the transparent `button` background\n   * results in a loss of the default `button` focus styles.\n   */\n  'button:focus': { outline: ['1px dotted', '5px auto -webkit-focus-ring-color'] },\n\n  /**\n   * Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n   */\n  'fieldset,ol,ul,legend': { padding: '0' },\n\n  'ol,ul': { listStyle: 'none' },\n\n  /**\n   * 1. Use Tailwind's default \"normal\" line-height so the user isn't forced\n   *    to override it to ensure consistency even when using the default theme.\n   * 2. Prevent adjustments of font size after orientation changes in iOS.\n   * 3. Use the user's configured `sans` font-family (with Tailwind's default\n   *    sans-serif font stack as a fallback) as a sane default.\n   */\n  html: {\n    lineHeight: '1.5',\n    WebkitTextSizeAdjust: '100%',\n    fontFamily: theme('fontFamily.sans', 'ui-sans-serif,system-ui,sans-serif'),\n  },\n\n  /**\n   * 1. Remove the margin in all browsers.\n   * 2. Inherit font-family and line-height from `html` so users can set them as\n   * a class directly on the `html` element.\n   */\n  body: { fontFamily: 'inherit', lineHeight: 'inherit' },\n\n  /**\n   * 1. Prevent padding and border from affecting element width.\n   *\n   *    We used to set this in the html element and inherit from\n   *    the parent element for everything else. This caused issues\n   *    in shadow-dom-enhanced elements like <details> where the content\n   *    is wrapped by a div with box-sizing set to `content-box`.\n   *\n   *    https://github.com/mozdevs/cssremedy/issues/4\n   *\n   *\n   * 2. Allow adding a border to an element by just adding a border-width.\n   *\n   *    By default, the way the browser specifies that an element should have no\n   *    border is by setting it's border-style to `none` in the user-agent\n   *    stylesheet.\n   *\n   *    In order to easily add borders to elements by just setting the `border-width`\n   *    property, we change the default border-style for all elements to `solid`, and\n   *    use border-width to hide them instead. This way our `border` utilities only\n   *    need to set the `border-width` property instead of the entire `border`\n   *    shorthand, making our border utilities much more straightforward to compose.\n   *\n   *    https://github.com/tailwindcss/tailwindcss/pull/116\n   */\n  '*,::before,::after': {\n    boxSizing: 'border-box',\n    border: `0 solid ${theme('borderColor.DEFAULT', 'currentColor')}`,\n  },\n\n  /*\n   * 1. Add the correct height in Firefox.\n   * 2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n   * 3. Ensure horizontal rules are visible by default\n   */\n  hr: { height: '0', color: 'inherit', borderTopWidth: '1px' },\n\n  /**\n   * Undo the `border-style: none` reset that Normalize applies to images so that\n   * our `border-<width>` utilities have the expected effect.\n   *\n   * The Normalize reset is unnecessary for us since we default the border-width\n   * to 0 on all elements.\n   *\n   * https://github.com/tailwindcss/tailwindcss/issues/362\n   */\n  img: { borderStyle: 'solid' },\n\n  textarea: { resize: 'vertical' },\n\n  'input::placeholder,textarea::placeholder': {\n    opacity: '1',\n    color: theme('placeholderColor.DEFAULT', theme('colors.gray.400', '#a1a1aa')),\n  },\n\n  'button,[role=\"button\"]': { cursor: 'pointer' },\n\n  /**\n   * 1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n   * 2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n   */\n  table: { textIndent: '0', borderColor: 'inherit', borderCollapse: 'collapse' },\n\n  'h1,h2,h3,h4,h5,h6': { fontSize: 'inherit', fontWeight: 'inherit' },\n\n  /**\n   * Reset links to optimize for opt-in styling instead of\n   * opt-out.\n   */\n  a: { color: 'inherit', textDecoration: 'inherit' },\n\n  /**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   * Reset form element properties that are easy to forget to\n   * style explicitly so you don't inadvertently introduce\n   * styles that deviate from your design system. These styles\n   * supplement a partial reset that is already applied by\n   * normalize.css.\n   */\n  'button,input,optgroup,select,textarea': {\n    fontFamily: 'inherit',\n    fontSize: '100%',\n    margin: '0',\n    padding: '0',\n    lineHeight: 'inherit',\n    color: 'inherit',\n  },\n\n  /**\n   * Remove the inheritance of text transform in Edge and Firefox.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n  'button,select': { textTransform: 'none' },\n\n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n  '::-moz-focus-inner': { borderStyle: 'none', padding: '0' },\n\n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n  ':-moz-focusring': { outline: '1px dotted ButtonText' },\n\n  /**\n   * Remove the additional ':invalid' styles in Firefox.\n   * See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n   */\n  ':-moz-ui-invalid': { boxShadow: 'none' },\n\n  /**\n   * Add the correct vertical alignment in Chrome and Firefox.\n   */\n  progress: { verticalAlign: 'baseline' },\n\n  /**\n   * Correct the cursor style of increment and decrement buttons in Safari.\n   */\n  '::-webkit-inner-spin-button,::-webkit-outer-spin-button': { height: 'auto' },\n\n  /**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n  '[type=\"search\"]': { WebkitAppearance: 'textfield', outlineOffset: '-2px' },\n\n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n  '::-webkit-search-decoration': { WebkitAppearance: 'none' },\n\n  /**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to 'inherit' in Safari.\n   */\n  '::-webkit-file-upload-button': { WebkitAppearance: 'button', font: 'inherit' },\n\n  /*\n   * Add the correct display in Chrome and Safari.\n   */\n  summary: { display: 'list-item' },\n\n  /**\n   * Add the correct text decoration in Chrome, Edge, and Safari.\n   */\n  'abbr[title]': { textDecoration: 'underline dotted' },\n\n  /**\n   * Add the correct font weight in Edge and Safari.\n   */\n  'b,strong': { fontWeight: 'bolder' },\n\n  /**\n   * 1. Use the configured 'mono' font family for elements that\n   * are expected to be rendered with a monospace font, falling\n   * back to the system monospace stack if there is no configured\n   * 'mono' font family.\n   * 2. Correct the odd 'em' font sizing in all browsers.\n   */\n  'pre,code,kbd,samp': {\n    fontFamily: theme('fontFamily', 'mono', 'ui-monospace,monospace'),\n    fontSize: '1em',\n  },\n\n  /**\n   * Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n   */\n  'sub,sup': { fontSize: '75%', lineHeight: '0', position: 'relative', verticalAlign: 'baseline' },\n\n  sub: { bottom: '-0.25em' },\n\n  sup: { top: '-0.5em' },\n\n  /**\n   * Make replaced elements `display: block` by default as that's\n   * the behavior you want almost all of the time. Inspired by\n   * CSS Remedy, with `svg` added as well.\n   *\n   * https://github.com/mozdevs/cssremedy/issues/14\n   */\n  'img,svg,video,canvas,audio,iframe,embed,object': { display: 'block', verticalAlign: 'middle' },\n\n  /**\n   * Constrain images and videos to the parent width and preserve\n   * their instrinsic aspect ratio.\n   *\n   * https://github.com/mozdevs/cssremedy/issues/14\n   */\n  'img,video': { maxWidth: '100%', height: 'auto' },\n})\n","export const coreVariants: Record<string, string> = {\n  dark: '@media (prefers-color-scheme:dark)',\n  sticky: '@supports ((position: -webkit-sticky) or (position:sticky))',\n  'motion-reduce': '@media (prefers-reduced-motion:reduce)',\n  'motion-safe': '@media (prefers-reduced-motion:no-preference)',\n  first: '&:first-child',\n  last: '&:last-child',\n  even: '&:nth-child(2n)',\n  odd: '&:nth-child(odd)',\n  children: '&>*',\n  siblings: '&~*',\n  sibling: '&+*',\n  override: '&&',\n}\n","export const STYLE_ELEMENT_ID = '__twind' as const\n\ndeclare global {\n  interface Window {\n    [STYLE_ELEMENT_ID]?: HTMLStyleElement\n  }\n}\n\nexport const getStyleElement = (nonce?: string): HTMLStyleElement => {\n  // Hydrate existing style element if available\n  // self[id] - every element with an id is available through the global object\n  // eslint-disable-next-line no-restricted-globals\n  let element = self[STYLE_ELEMENT_ID]\n\n  if (!element) {\n    // Create a new one otherwise\n    element = document.head.appendChild(document.createElement('style'))\n\n    element.id = STYLE_ELEMENT_ID\n    nonce && (element.nonce = nonce)\n\n    // Avoid Edge bug where empty style elements doesn't create sheets\n    element.appendChild(document.createTextNode(''))\n  }\n\n  return element\n}\n","// Based on https://github.com/kripod/otion/blob/main/packages/otion/src/injectors.ts\n// License MIT\nimport type { SheetConfig, Sheet } from '../types'\nimport { noop } from '../internal/util'\nimport { getStyleElement } from '../internal/dom'\n\n/**\n * Creates an sheet which inserts style rules through the CSS Object Model.\n */\nexport const cssomSheet = ({\n  nonce,\n  target = getStyleElement(nonce).sheet as CSSStyleSheet,\n}: SheetConfig<CSSStyleSheet> = {}): Sheet<CSSStyleSheet> => {\n  const offset = target.cssRules.length\n\n  return {\n    target,\n    insert: (rule, index) => target.insertRule(rule, offset + index),\n  }\n}\n\n/**\n * An sheet placeholder which performs no operations. Useful for avoiding errors in a non-browser environment.\n */\nexport const voidSheet = (): Sheet<null> => ({\n  target: null,\n  insert: noop,\n})\n","import type { Mode } from '../types'\n\nimport { join, noop } from '../internal/util'\n\nexport const mode = (report: (message: string) => void): Mode => ({\n  unknown(section, key = [], optional, context) {\n    if (!optional) {\n      // TODO hint about possible values, did you mean ...\n      this.report({ id: 'UNKNOWN_THEME_VALUE', key: section + '.' + join(key) }, context)\n    }\n  },\n\n  report({ id, ...info }) {\n    return report(`[${id}] ${JSON.stringify(info)}`)\n  },\n})\n\nexport const warn = /*#__PURE__*/ mode((message) => console.warn(message))\n\nexport const strict = /*#__PURE__*/ mode((message) => {\n  throw new Error(message)\n})\n\nexport const silent = /*#__PURE__*/ mode(noop)\n","import type { Prefixer } from '../types'\n\nimport { cssPropertyAlias, cssPropertyPrefixFlags, cssValuePrefixFlags } from 'style-vendorizer'\n\nexport const noprefix: Prefixer = (property: string, value: string, important?: boolean): string =>\n  `${property}:${value}${important ? ' !important' : ''}`\n\nexport const autoprefix: Prefixer = (\n  property: string,\n  value: string,\n  important?: boolean,\n): string => {\n  let cssText = ''\n\n  // Resolve aliases, e.g. `gap` -> `grid-gap`\n  const propertyAlias = cssPropertyAlias(property)\n  if (propertyAlias) cssText += `${noprefix(propertyAlias, value, important)};`\n\n  // Prefix properties, e.g. `backdrop-filter` -> `-webkit-backdrop-filter`\n  let flags = cssPropertyPrefixFlags(property)\n  if (flags & 0b001) cssText += `-webkit-${noprefix(property, value, important)};`\n  if (flags & 0b010) cssText += `-moz-${noprefix(property, value, important)};`\n  if (flags & 0b100) cssText += `-ms-${noprefix(property, value, important)};`\n\n  // Prefix values, e.g. `position: \"sticky\"` -> `position: \"-webkit-sticky\"`\n  // Notice that flags don't overlap and property prefixing isn't needed here\n  flags = cssValuePrefixFlags(property, value)\n  if (flags & 0b001) cssText += `${noprefix(property, `-webkit-${value}`, important)};`\n  if (flags & 0b010) cssText += `${noprefix(property, `-moz-${value}`, important)};`\n  if (flags & 0b100) cssText += `${noprefix(property, `-ms-${value}`, important)};`\n\n  /* Include the standardized declaration last */\n  /* https://css-tricks.com/ordering-css3-properties/ */\n  cssText += noprefix(property, value, important)\n\n  return cssText\n}\n","import type {\n  Theme,\n  ThemeColor,\n  ThemeConfiguration,\n  ThemeResolver,\n  ThemeSectionType,\n  ThemeSectionResolver,\n  ThemeSectionResolverContext,\n  ThemeHelper,\n  Context,\n} from '../types'\n\nimport { join, tail, includes } from '../internal/util'\nimport { directive } from './directive'\n\n// '1/2': '50%',\n// '1/3': '33.333333%',\n// '2/3': '66.666667%',\n// '1/4': '25%',\n// '2/4': '50%',\n// '3/4': '75%',\n// '1/5': '20%',\n// '2/5': '40%',\n// '3/5': '60%',\n// '4/5': '80%',\n// '1/6': '16.666667%',\n// '2/6': '33.333333%',\n// '3/6': '50%',\n// '4/6': '66.666667%',\n// '5/6': '83.333333%',\nconst ratios = (start: number, end: number): Record<string, string> => {\n  const result: Record<string, string> = {}\n\n  do {\n    for (let dividend = 1; dividend < start; dividend++) {\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      result[`${dividend}/${start}`] = Number(((dividend / start) * 100).toFixed(6)) + '%'\n    }\n  } while (++start <= end)\n\n  return result\n}\n\n// 0: '0px',\n// 2: '2px',\n// 4: '4px',\n// 8: '8px',\nconst exponential = (stop: number, unit: string, start = 0): Record<string, string> => {\n  const result: Record<string, string> = {}\n\n  for (; start <= stop; start = start * 2 || 1) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    result[start] = start + unit\n  }\n\n  return result\n}\n\n// 3: '.75rem',\n// 4: '1rem',\n// 5: '1.25rem',\n// 6: '1.5rem',\n// 7: '1.75rem',\n// 8: '2rem',\n// 9: '2.25rem',\n// 10: '2.5rem',\nconst linear = (\n  stop: number,\n  unit = '',\n  divideBy = 1,\n  start = 0,\n  step = 1,\n  result: Record<string, string> = {},\n  // eslint-disable-next-line max-params\n): Record<string, string> => {\n  for (; start <= stop; start += step) {\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    result[start] = start / divideBy + unit\n  }\n\n  return result\n}\n\nconst alias = <Section extends keyof Theme>(\n  section: Section,\n): ThemeSectionResolver<ThemeSectionType<Theme[Section]>> => (theme) => theme(section)\n\nconst themeFactory = (args: Parameters<ThemeResolver>, { theme }: Context) => theme(...args)\n\nexport const theme = ((...args: Parameters<ThemeResolver>): ReturnType<ThemeHelper> =>\n  directive(themeFactory, args)) as ThemeHelper\n\nconst defaultTheme: Partial<Theme> = /*#__PURE__*/ {\n  screens: {\n    sm: '640px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n    '2xl': '1536px',\n  },\n  colors: {\n    transparent: 'transparent',\n    current: 'currentColor',\n\n    // black: colors.black,\n    black: '#000',\n\n    // white: colors.white,\n    white: '#fff',\n\n    // gray: colors.coolGray,\n    gray: {\n      50: '#f9fafb',\n      100: '#f3f4f6',\n      200: '#e5e7eb',\n      300: '#d1d5db',\n      400: '#9ca3af',\n      500: '#6b7280',\n      600: '#4b5563',\n      700: '#374151',\n      800: '#1f2937',\n      900: '#111827',\n    },\n\n    // red: colors.red,\n    red: {\n      50: '#fef2f2',\n      100: '#fee2e2',\n      200: '#fecaca',\n      300: '#fca5a5',\n      400: '#f87171',\n      500: '#ef4444',\n      600: '#dc2626',\n      700: '#b91c1c',\n      800: '#991b1b',\n      900: '#7f1d1d',\n    },\n\n    // yellow: colors.amber,\n    yellow: {\n      50: '#fffbeb',\n      100: '#fef3c7',\n      200: '#fde68a',\n      300: '#fcd34d',\n      400: '#fbbf24',\n      500: '#f59e0b',\n      600: '#d97706',\n      700: '#b45309',\n      800: '#92400e',\n      900: '#78350f',\n    },\n\n    // green: colors.emerald,\n    green: {\n      50: '#ecfdf5',\n      100: '#d1fae5',\n      200: '#a7f3d0',\n      300: '#6ee7b7',\n      400: '#34d399',\n      500: '#10b981',\n      600: '#059669',\n      700: '#047857',\n      800: '#065f46',\n      900: '#064e3b',\n    },\n\n    // blue: colors.blue,\n    blue: {\n      50: '#eff6ff',\n      100: '#dbeafe',\n      200: '#bfdbfe',\n      300: '#93c5fd',\n      400: '#60a5fa',\n      500: '#3b82f6',\n      600: '#2563eb',\n      700: '#1d4ed8',\n      800: '#1e40af',\n      900: '#1e3a8a',\n    },\n\n    // indigo: colors.indigo,\n    indigo: {\n      50: '#eef2ff',\n      100: '#e0e7ff',\n      200: '#c7d2fe',\n      300: '#a5b4fc',\n      400: '#818cf8',\n      500: '#6366f1',\n      600: '#4f46e5',\n      700: '#4338ca',\n      800: '#3730a3',\n      900: '#312e81',\n    },\n\n    // purple: colors.violet,\n    purple: {\n      50: '#f5f3ff',\n      100: '#ede9fe',\n      200: '#ddd6fe',\n      300: '#c4b5fd',\n      400: '#a78bfa',\n      500: '#8b5cf6',\n      600: '#7c3aed',\n      700: '#6d28d9',\n      800: '#5b21b6',\n      900: '#4c1d95',\n    },\n\n    // pink: colors.pink,\n    pink: {\n      50: '#fdf2f8',\n      100: '#fce7f3',\n      200: '#fbcfe8',\n      300: '#f9a8d4',\n      400: '#f472b6',\n      500: '#ec4899',\n      600: '#db2777',\n      700: '#be185d',\n      800: '#9d174d',\n      900: '#831843',\n    },\n  },\n\n  spacing: {\n    px: '1px',\n    0: '0px',\n    .../*#__PURE__*/ linear(4, 'rem', 4, 0.5, 0.5),\n    // 0.5: '0.125rem',\n    // 1: '0.25rem',\n    // 1.5: '0.375rem',\n    // 2: '0.5rem',\n    // 2.5: '0.625rem',\n    // 3: '0.75rem',\n    // 3.5: '0.875rem',\n    // 4: '1rem',\n    .../*#__PURE__*/ linear(12, 'rem', 4, 5),\n    // 5: '1.25rem',\n    // 6: '1.5rem',\n    // 7: '1.75rem',\n    // 8: '2rem',\n    // 9: '2.25rem',\n    // 10: '2.5rem',\n    // 11: '2.75rem',\n    // 12: '3rem',\n    14: '3.5rem',\n    .../*#__PURE__*/ linear(64, 'rem', 4, 16, 4),\n    // 16: '4rem',\n    // 20: '5rem',\n    // 24: '6rem',\n    // 28: '7rem',\n    // 32: '8rem',\n    // 36: '9rem',\n    // 40: '10rem',\n    // 44: '11rem',\n    // 48: '12rem',\n    // 52: '13rem',\n    // 56: '14rem',\n    // 60: '15rem',\n    // 64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n  },\n\n  durations: {\n    75: '75ms',\n    100: '100ms',\n    150: '150ms',\n    200: '200ms',\n    300: '300ms',\n    500: '500ms',\n    700: '700ms',\n    1000: '1000ms',\n  },\n\n  animation: {\n    none: 'none',\n    spin: 'spin 1s linear infinite',\n    ping: 'ping 1s cubic-bezier(0, 0, 0.2, 1) infinite',\n    pulse: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n    bounce: 'bounce 1s infinite',\n  },\n\n  backdropBlur: /*#__PURE__*/ alias('blur'),\n  backdropBrightness: /*#__PURE__*/ alias('brightness'),\n  backdropContrast: /*#__PURE__*/ alias('contrast'),\n  backdropGrayscale: /*#__PURE__*/ alias('grayscale'),\n  backdropHueRotate: /*#__PURE__*/ alias('hueRotate'),\n  backdropInvert: /*#__PURE__*/ alias('invert'),\n  backdropOpacity: /*#__PURE__*/ alias('opacity'),\n  backdropSaturate: /*#__PURE__*/ alias('saturate'),\n  backdropSepia: /*#__PURE__*/ alias('sepia'),\n\n  backgroundColor: /*#__PURE__*/ alias('colors'),\n  backgroundImage: {\n    none: 'none',\n    // These are built-in\n    // 'gradient-to-t': 'linear-gradient(to top, var(--tw-gradient-stops))',\n    // 'gradient-to-tr': 'linear-gradient(to top right, var(--tw-gradient-stops))',\n    // 'gradient-to-r': 'linear-gradient(to right, var(--tw-gradient-stops))',\n    // 'gradient-to-br': 'linear-gradient(to bottom right, var(--tw-gradient-stops))',\n    // 'gradient-to-b': 'linear-gradient(to bottom, var(--tw-gradient-stops))',\n    // 'gradient-to-bl': 'linear-gradient(to bottom left, var(--tw-gradient-stops))',\n    // 'gradient-to-l': 'linear-gradient(to left, var(--tw-gradient-stops))',\n    // 'gradient-to-tl': 'linear-gradient(to top left, var(--tw-gradient-stops))',\n  },\n  backgroundOpacity: /*#__PURE__*/ alias('opacity'),\n  // backgroundPosition: {\n  //   // The following are already handled by the plugin:\n  //   // center, right, left, bottom, top\n  //   // 'bottom-10px-right-20px' -> bottom 10px right 20px\n  // },\n  backgroundSize: {\n    auto: 'auto',\n    cover: 'cover',\n    contain: 'contain',\n  },\n  blur: {\n    0: '0',\n    sm: '4px',\n    DEFAULT: '8px',\n    md: '12px',\n    lg: '16px',\n    xl: '24px',\n    '2xl': '40px',\n    '3xl': '64px',\n  },\n  brightness: {\n    .../*#__PURE__*/ linear(200, '', 100, 0, 50),\n    // 0: '0',\n    // 50: '.5',\n    // 150: '1.5',\n    // 200: '2',\n\n    .../*#__PURE__*/ linear(110, '', 100, 90, 5),\n    // 90: '.9',\n    // 95: '.95',\n    // 100: '1',\n    // 105: '1.05',\n    // 110: '1.1',\n    75: '0.75',\n    125: '1.25',\n  },\n  borderColor: (theme) => ({\n    ...theme('colors'),\n    DEFAULT: theme('colors.gray.200', 'currentColor'),\n  }),\n  borderOpacity: /*#__PURE__*/ alias('opacity'),\n  borderRadius: {\n    none: '0px',\n    sm: '0.125rem',\n    DEFAULT: '0.25rem',\n    md: '0.375rem',\n    lg: '0.5rem',\n    xl: '0.75rem',\n    '2xl': '1rem',\n    '3xl': '1.5rem',\n    '1/2': '50%',\n    full: '9999px',\n  },\n  borderWidth: {\n    DEFAULT: '1px',\n    .../*#__PURE__*/ exponential(8, 'px'),\n    // 0: '0px',\n    // 2: '2px',\n    // 4: '4px',\n    // 8: '8px',\n  },\n  boxShadow: {\n    sm: '0 1px 2px 0 rgba(0,0,0,0.05)',\n    DEFAULT: '0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06)',\n    md: '0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06)',\n    lg: '0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05)',\n    xl: '0 20px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04)',\n    '2xl': '0 25px 50px -12px rgba(0,0,0,0.25)',\n    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',\n    none: 'none',\n  },\n  // container: {},\n  // cursor: {\n  //   // Default values are handled by plugin\n  // },\n  contrast: {\n    .../*#__PURE__*/ linear(200, '', 100, 0, 50),\n    // 0: '0',\n    // 50: '.5',\n    // 150: '1.5',\n    // 200: '2',\n    75: '0.75',\n    125: '1.25',\n  },\n  divideColor: /*#__PURE__*/ alias('borderColor'),\n  divideOpacity: /*#__PURE__*/ alias('borderOpacity'),\n  divideWidth: /*#__PURE__*/ alias('borderWidth'),\n  dropShadow: {\n    sm: '0 1px 1px rgba(0,0,0,0.05)',\n    DEFAULT: ['0 1px 2px rgba(0,0,0,0.1)', '0 1px 1px rgba(0,0,0,0.06)'],\n    md: ['0 4px 3px rgba(0,0,0,0.07)', '0 2px 2px rgba(0,0,0,0.06)'],\n    lg: ['0 10px 8px rgba(0,0,0,0.04)', '0 4px 3px rgba(0,0,0,0.1)'],\n    xl: ['0 20px 13px rgba(0,0,0,0.03)', '0 8px 5px rgba(0,0,0,0.08)'],\n    '2xl': '0 25px 25px rgba(0,0,0,0.15)',\n    none: '0 0 #0000',\n  },\n  fill: { current: 'currentColor' },\n  grayscale: {\n    0: '0',\n    DEFAULT: '100%',\n  },\n  hueRotate: {\n    0: '0deg',\n    15: '15deg',\n    30: '30deg',\n    60: '60deg',\n    90: '90deg',\n    180: '180deg',\n  },\n  invert: {\n    0: '0',\n    DEFAULT: '100%',\n  },\n  flex: {\n    1: '1 1 0%',\n    auto: '1 1 auto',\n    initial: '0 1 auto',\n    none: 'none',\n  },\n  // flexGrow: {\n  //   // Handled by plugin\n  // },\n  // flexShrink: {\n  //   // Handled by plugin\n  // },\n  fontFamily: {\n    sans: 'ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"'.split(\n      ',',\n    ),\n    serif: 'ui-serif,Georgia,Cambria,\"Times New Roman\",Times,serif'.split(','),\n    mono: 'ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace'.split(\n      ',',\n    ),\n  },\n  fontSize: {\n    xs: ['0.75rem', '1rem'],\n    sm: ['0.875rem', '1.25rem'],\n    base: ['1rem', '1.5rem'],\n    lg: ['1.125rem', '1.75rem'],\n    xl: ['1.25rem', '1.75rem'],\n    '2xl': ['1.5rem', '2rem'],\n    '3xl': ['1.875rem', '2.25rem'],\n    '4xl': ['2.25rem', '2.5rem'],\n    '5xl': ['3rem', '1'],\n    '6xl': ['3.75rem', '1'],\n    '7xl': ['4.5rem', '1'],\n    '8xl': ['6rem', '1'],\n    '9xl': ['8rem', '1'],\n  },\n  fontWeight: {\n    thin: '100',\n    extralight: '200',\n    light: '300',\n    normal: '400',\n    medium: '500',\n    semibold: '600',\n    bold: '700',\n    extrabold: '800',\n    black: '900',\n  },\n  gridTemplateColumns: {\n    // numbers are handled by the plugin: 1 -> repeat(1, minmax(0, 1fr))\n    // none: 'none', // handled by plugin\n  },\n  gridTemplateRows: {\n    // numbers are handled by the plugin: 1 -> repeat(1, minmax(0, 1fr))\n    // none: 'none', // handled by plugin\n  },\n  gridAutoColumns: {\n    // auto: 'auto', // handled by plugin\n    min: 'min-content',\n    max: 'max-content',\n    fr: 'minmax(0,1fr)',\n  },\n  gridAutoRows: {\n    // auto: 'auto', handled by plugin\n    min: 'min-content',\n    max: 'max-content',\n    fr: 'minmax(0,1fr)',\n  },\n  // gridColumnStart: {\n  //   // Defaults handled by plugin\n  // },\n  // gridRowStart: {\n  //   // Defaults handled by plugin\n  // },\n  // gridColumnEnd: {\n  //   // Defaults handled by plugin\n  // },\n  // gridRowEnd: {\n  //   // Defaults handled by plugin\n  // },\n  gridColumn: {\n    // span-X is handled by the plugin: span-1 -> span 1 / span 1\n    auto: 'auto',\n    'span-full': '1 / -1',\n  },\n  gridRow: {\n    // span-X is handled by the plugin: span-1 -> span 1 / span 1\n    auto: 'auto',\n    'span-full': '1 / -1',\n  },\n  gap: /*#__PURE__*/ alias('spacing'),\n  gradientColorStops: /*#__PURE__*/ alias('colors'),\n  height: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n    ...ratios(2, 6),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    // '1/5': '20%',\n    // '2/5': '40%',\n    // '3/5': '60%',\n    // '4/5': '80%',\n    // '1/6': '16.666667%',\n    // '2/6': '33.333333%',\n    // '3/6': '50%',\n    // '4/6': '66.666667%',\n    // '5/6': '83.333333%',\n    full: '100%',\n    screen: '100vh',\n  }),\n  inset: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n    ...ratios(2, 4),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    full: '100%',\n  }),\n  keyframes: {\n    spin: {\n      from: {\n        transform: 'rotate(0deg)',\n      },\n      to: {\n        transform: 'rotate(360deg)',\n      },\n    },\n    ping: {\n      '0%': {\n        transform: 'scale(1)',\n        opacity: '1',\n      },\n      '75%,100%': {\n        transform: 'scale(2)',\n        opacity: '0',\n      },\n    },\n    pulse: {\n      '0%,100%': {\n        opacity: '1',\n      },\n      '50%': {\n        opacity: '.5',\n      },\n    },\n    bounce: {\n      '0%, 100%': {\n        transform: 'translateY(-25%)',\n        animationTimingFunction: 'cubic-bezier(0.8,0,1,1)',\n      },\n      '50%': {\n        transform: 'none',\n        animationTimingFunction: 'cubic-bezier(0,0,0.2,1)',\n      },\n    },\n  },\n  letterSpacing: {\n    tighter: '-0.05em',\n    tight: '-0.025em',\n    normal: '0em',\n    wide: '0.025em',\n    wider: '0.05em',\n    widest: '0.1em',\n  },\n  lineHeight: {\n    none: '1',\n    tight: '1.25',\n    snug: '1.375',\n    normal: '1.5',\n    relaxed: '1.625',\n    loose: '2',\n    .../*#__PURE__*/ linear(10, 'rem', 4, 3),\n    // 3: '.75rem',\n    // 4: '1rem',\n    // 5: '1.25rem',\n    // 6: '1.5rem',\n    // 7: '1.75rem',\n    // 8: '2rem',\n    // 9: '2.25rem',\n    // 10: '2.5rem',\n  },\n  // listStyleType: {\n  //   // Defaults handled by plugin\n  // },\n  margin: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n  }),\n  maxHeight: (theme) => ({\n    ...theme('spacing'),\n    full: '100%',\n    screen: '100vh',\n  }),\n  maxWidth: (theme, { breakpoints }) => ({\n    none: 'none',\n    0: '0rem',\n    xs: '20rem',\n    sm: '24rem',\n    md: '28rem',\n    lg: '32rem',\n    xl: '36rem',\n    '2xl': '42rem',\n    '3xl': '48rem',\n    '4xl': '56rem',\n    '5xl': '64rem',\n    '6xl': '72rem',\n    '7xl': '80rem',\n    full: '100%',\n    min: 'min-content',\n    max: 'max-content',\n    prose: '65ch',\n    ...breakpoints(theme('screens')),\n  }),\n  minHeight: {\n    0: '0px',\n    full: '100%',\n    screen: '100vh',\n  },\n  minWidth: {\n    0: '0px',\n    full: '100%',\n    min: 'min-content',\n    max: 'max-content',\n  },\n  // objectPosition: {\n  //   // The plugins joins all arguments by default\n  // },\n  opacity: {\n    .../*#__PURE__*/ linear(100, '', 100, 0, 10),\n    // 0: '0',\n    // 10: '0.1',\n    // 20: '0.2',\n    // 30: '0.3',\n    // 40: '0.4',\n    // 60: '0.6',\n    // 70: '0.7',\n    // 80: '0.8',\n    // 90: '0.9',\n    // 100: '1',\n    5: '0.05',\n    25: '0.25',\n    75: '0.75',\n    95: '0.95',\n  },\n  order: {\n    first: '-9999',\n    last: '9999',\n    none: '0',\n    .../*#__PURE__*/ linear(12, '', 1, 1),\n    // 1: '1',\n    // 2: '2',\n    // 3: '3',\n    // 4: '4',\n    // 5: '5',\n    // 6: '6',\n    // 7: '7',\n    // 8: '8',\n    // 9: '9',\n    // 10: '10',\n    // 11: '11',\n    // 12: '12',\n  },\n  outline: {\n    none: ['2px solid transparent', '2px'],\n    white: ['2px dotted white', '2px'],\n    black: ['2px dotted black', '2px'],\n  },\n  padding: /*#__PURE__*/ alias('spacing'),\n  placeholderColor: /*#__PURE__*/ alias('colors'),\n  placeholderOpacity: /*#__PURE__*/ alias('opacity'),\n  ringColor: (theme) => ({\n    DEFAULT: theme('colors.blue.500', '#3b82f6'),\n    ...theme('colors'),\n  }),\n  ringOffsetColor: /*#__PURE__*/ alias('colors'),\n  ringOffsetWidth: /*#__PURE__*/ exponential(8, 'px'),\n  // 0: '0px',\n  // 1: '1px',\n  // 2: '2px',\n  // 4: '4px',\n  // 8: '8px',,\n  ringOpacity: (theme) => ({\n    DEFAULT: '0.5',\n    ...theme('opacity'),\n  }),\n  ringWidth: {\n    DEFAULT: '3px',\n    .../*#__PURE__*/ exponential(8, 'px'),\n    // 0: '0px',\n    // 1: '1px',\n    // 2: '2px',\n    // 4: '4px',\n    // 8: '8px',\n  },\n  rotate: {\n    .../*#__PURE__*/ exponential(2, 'deg'),\n    // 0: '0deg',\n    // 1: '1deg',\n    // 2: '2deg',\n    .../*#__PURE__*/ exponential(12, 'deg', 3),\n    // 3: '3deg',\n    // 6: '6deg',\n    // 12: '12deg',\n    .../*#__PURE__*/ exponential(180, 'deg', 45),\n    // 45: '45deg',\n    // 90: '90deg',\n    // 180: '180deg',\n  },\n  saturate: /*#__PURE__*/ linear(200, '', 100, 0, 50),\n  // 0: '0',\n  // 50: '.5',\n  // 100: '1',\n  // 150: '1.5',\n  // 200: '2',\n  scale: {\n    .../*#__PURE__*/ linear(150, '', 100, 0, 50),\n    // 0: '0',\n    // 50: '.5',\n    // 150: '1.5',\n    .../*#__PURE__*/ linear(110, '', 100, 90, 5),\n    // 90: '.9',\n    // 95: '.95',\n    // 100: '1',\n    // 105: '1.05',\n    // 110: '1.1',\n    75: '0.75',\n    125: '1.25',\n  },\n  sepia: {\n    0: '0',\n    DEFAULT: '100%',\n  },\n  skew: {\n    .../*#__PURE__*/ exponential(2, 'deg'),\n    // 0: '0deg',\n    // 1: '1deg',\n    // 2: '2deg',\n    .../*#__PURE__*/ exponential(12, 'deg', 3),\n    // 3: '3deg',\n    // 6: '6deg',\n    // 12: '12deg',\n  },\n  space: /*#__PURE__*/ alias('spacing'),\n  stroke: {\n    current: 'currentColor',\n  },\n  strokeWidth: /*#__PURE__*/ linear(2),\n  // 0: '0',\n  // 1: '1',\n  // 2: '2',,\n  textColor: /*#__PURE__*/ alias('colors'),\n  textOpacity: /*#__PURE__*/ alias('opacity'),\n  // transformOrigin: {\n  //   // The following are already handled by the plugin:\n  //   // center, right, left, bottom, top\n  //   // 'bottom-10px-right-20px' -> bottom 10px right 20px\n  // },\n  transitionDuration: (theme) => ({\n    DEFAULT: '150ms',\n    ...theme('durations'),\n  }),\n  transitionDelay: /*#__PURE__*/ alias('durations'),\n  transitionProperty: {\n    none: 'none',\n    all: 'all',\n    DEFAULT:\n      'background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter',\n    colors: 'background-color,border-color,color,fill,stroke',\n    opacity: 'opacity',\n    shadow: 'box-shadow',\n    transform: 'transform',\n  },\n  transitionTimingFunction: {\n    DEFAULT: 'cubic-bezier(0.4,0,0.2,1)',\n    linear: 'linear',\n    in: 'cubic-bezier(0.4,0,1,1)',\n    out: 'cubic-bezier(0,0,0.2,1)',\n    'in-out': 'cubic-bezier(0.4,0,0.2,1)',\n  },\n  translate: (theme) => ({\n    ...theme('spacing'),\n    ...ratios(2, 4),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    full: '100%',\n  }),\n  width: (theme) => ({\n    auto: 'auto',\n    ...theme('spacing'),\n    ...ratios(2, 6),\n    // '1/2': '50%',\n    // '1/3': '33.333333%',\n    // '2/3': '66.666667%',\n    // '1/4': '25%',\n    // '2/4': '50%',\n    // '3/4': '75%',\n    // '1/5': '20%',\n    // '2/5': '40%',\n    // '3/5': '60%',\n    // '4/5': '80%',\n    // '1/6': '16.666667%',\n    // '2/6': '33.333333%',\n    // '3/6': '50%',\n    // '4/6': '66.666667%',\n    // '5/6': '83.333333%',\n\n    ...ratios(12, 12),\n    // '1/12': '8.333333%',\n    // '2/12': '16.666667%',\n    // '3/12': '25%',\n    // '4/12': '33.333333%',\n    // '5/12': '41.666667%',\n    // '6/12': '50%',\n    // '7/12': '58.333333%',\n    // '8/12': '66.666667%',\n    // '9/12': '75%',\n    // '10/12': '83.333333%',\n    // '11/12': '91.666667%',\n\n    screen: '100vw',\n    full: '100%',\n    min: 'min-content',\n    max: 'max-content',\n  }),\n  zIndex: {\n    auto: 'auto',\n    .../*#__PURE__*/ linear(50, '', 1, 0, 10),\n    // 0: '0',\n    // 10: '10',\n    // 20: '20',\n    // 30: '30',\n    // 40: '40',\n    // 50: '50',\n  },\n}\n\n// https://github.com/tailwindlabs/tailwindcss/blob/master/src/util/flattenColorPalette.js\nconst flattenColorPalette = (\n  colors: Record<string, ThemeColor>,\n  target: Record<string, ThemeColor> = {},\n  prefix: string[] = [],\n): Record<string, ThemeColor> => {\n  Object.keys(colors).forEach((property) => {\n    const value = colors[property]\n\n    if (property == 'DEFAULT') {\n      target[join(prefix)] = value\n      target[join(prefix, '.')] = value\n    }\n\n    const key = [...prefix, property]\n    target[join(key)] = value\n    target[join(key, '.')] = value\n\n    if (value && typeof value == 'object') {\n      flattenColorPalette(value, target, key)\n    }\n  }, target)\n\n  return target\n}\n\nconst resolveContext: ThemeSectionResolverContext = {\n  // ?negative: (source) =>\n  //   Object.keys(source).reduce(\n  //     (target, key) => {\n  //       if (source[key]) target['-' + key] = '-' + (source[key] as string)\n\n  //       return target\n  //     },\n  //     { ...source },\n  //   ),\n  // Stub implementation as negated values are automatically infered and do _not_ not to be in the theme\n  negative: () => ({}),\n\n  breakpoints: (screens) =>\n    Object.keys(screens)\n      .filter((key) => typeof screens[key] == 'string')\n      .reduce((target, key) => {\n        target['screen-' + key] = screens[key] as string\n\n        return target\n      }, {} as Record<string, string | undefined>),\n}\n\nconst handleArbitraryValues = (section: keyof Theme, key: string): string | false =>\n  (key = (key[0] == '[' && key.slice(-1) == ']' && key.slice(1, -1)) as string) &&\n  includes(section, 'olor') == /^(#|(hsl|rgb)a?\\(|[a-z]+$)/.test(key) &&\n  (includes(key, 'calc(')\n    ? key.replace(/(-?\\d*\\.?\\d(?!\\b-.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, '$1 $2 ')\n    : key)\n\nexport const makeThemeResolver = (config?: ThemeConfiguration): ThemeResolver => {\n  const cache = new Map<keyof Theme, Record<string, unknown>>()\n\n  const theme = { ...defaultTheme, ...config }\n\n  const deref = (\n    theme: undefined | Partial<Theme>,\n    section: keyof Theme,\n  ): Record<string, unknown> | undefined => {\n    const base = theme && theme[section]\n\n    const value = typeof base == 'function' ? base(resolve, resolveContext) : base\n\n    return value && section == 'colors'\n      ? flattenColorPalette(value as Record<string, ThemeColor>)\n      : (value as Record<string, unknown>)\n  }\n\n  const resolve = ((section: keyof Theme, key: unknown, defaultValue: unknown): unknown => {\n    const keypath = section.split('.')\n    section = keypath[0] as keyof Theme\n\n    // theme('colors.gray.500', maybeDefault)\n    if (keypath.length > 1) {\n      defaultValue = key\n      key = join(tail(keypath), '.')\n    }\n    // else: theme('colors', 'gray.500', maybeDefault)\n\n    let base = cache.get(section)\n\n    if (!base) {\n      // Stacked resolution to allow referencing the same section from core theme with extend\n      cache.set(section, (base = { ...deref(theme, section) }))\n\n      Object.assign(base, deref(theme.extend, section))\n    }\n\n    if (key != null) {\n      key = (Array.isArray(key) ? join(key) : (key as string)) || 'DEFAULT'\n\n      const value: unknown = handleArbitraryValues(section, key as string) || base[key as string]\n\n      return value == null\n        ? defaultValue\n        : Array.isArray(value) &&\n          // https://github.com/tailwindlabs/tailwindcss/blob/master/src/util/transformThemeValue.js\n          // only testing for sections that uses an array for values\n          !includes(['fontSize', 'outline', 'dropShadow'], section)\n        ? join(value, ',')\n        : value\n    }\n\n    return base\n  }) as ThemeResolver\n\n  return resolve\n}\n","import type {\n  Context,\n  CSSRules,\n  Plugin,\n  Rule,\n  Falsy,\n  InlineDirective,\n  TypescriptCompat,\n} from '../types'\n\nimport { join, tail } from '../internal/util'\n\nexport const translate = (\n  plugins: Record<string, Plugin | undefined>,\n  context: Context,\n): ((\n  rule: Rule,\n  isTranslating?: boolean,\n) => InlineDirective | CSSRules | string | Falsy | TypescriptCompat) => (rule, isTranslating) => {\n  // If this is a inline directive - called it right away\n  if (typeof rule.d == 'function') {\n    return rule.d(context)\n  }\n\n  const parameters = rule.d.split(/-(?![^[]*])/g)\n\n  // Bail early for already hashed class names\n  // Only if there are no variants and no negation\n  // If there are variants or negation unknown directive will be reported\n  if (!isTranslating && parameters[0] == 'tw' && rule.$ == rule.d) {\n    return rule.$\n  }\n\n  // Try to find a plugin to handle this directive\n  // example 'bg-gradient-to-r'\n  // 1. 'bg-gradient-to-r' -> parameters=['bg-gradient-to-r']\n  // 2. 'bg-gradient-to'   -> parameters=['bg-gradient-to', 'r']\n  // 4. 'bg-gradient'      -> parameters=['bg-gradient', 'to', 'r']\n  // 5. 'bg'               -> parameters=['bg', 'gradient', 'to', 'r']\n  for (let index = parameters.length; index; index--) {\n    const id = join(parameters.slice(0, index))\n\n    if (Object.prototype.hasOwnProperty.call(plugins, id)) {\n      const plugin = plugins[id]\n      return typeof plugin == 'function'\n        ? plugin(tail(parameters, index), context, id)\n        : typeof plugin == 'string'\n        ? context[isTranslating ? 'css' : 'tw'](plugin)\n        : plugin\n    }\n  }\n}\n","import type { Context, CSSRules, Rule, DarkMode, ThemeScreenValue } from '../types'\n\nimport { tail, escape, buildMediaQuery } from '../internal/util'\n\nlet _: RegExpExecArray | null | readonly ThemeScreenValue[] | string\n\nexport const GROUP_RE = /^:(group(?:(?!-focus).+?)*)-(.+)$/\nexport const NOT_PREFIX_RE = /^(:not)-(.+)/\n\nexport const prepareVariantSelector = (variant: string): string =>\n  variant[1] == '[' ? tail(variant) : variant\n\n// Wraps a CSS rule object with variant at-rules and pseudo classes\n// { '.selector': {...} }\n// => { '&:hover': { '.selector': {...} } }\n// => { '@media (min-width: ...)': { '&:hover': { '.selector': {...} } } }\nexport const decorate = (\n  darkMode: DarkMode,\n  variants: Record<string, string>,\n  { theme, tag }: Context,\n): ((translation: CSSRules, rule: Rule) => CSSRules) => {\n  // Select the wrapper for a variant\n  const applyVariant = (translation: CSSRules, variant: string): CSSRules => {\n    // Check responsive\n    if ((_ = theme('screens', tail(variant), ''))) {\n      return { [buildMediaQuery(_)]: translation }\n    }\n\n    // Dark mode\n    if (variant == ':dark' && darkMode == 'class') {\n      return { '.dark &': translation }\n    }\n\n    // Groups classes like: group-focus and group-hover\n    // these need to add a marker selector with the pseudo class\n    // => '.group:focus .group-focus:selector'\n    if ((_ = GROUP_RE.exec(variant))) {\n      return { [`.${escape(tag((_ as RegExpExecArray)[1]))}:${_[2]} &`]: translation }\n    }\n\n    // Check other well known variants\n    // and fallback to pseudo class or element\n    return {\n      [variants[tail(variant)] ||\n      '&' +\n        variant.replace(\n          NOT_PREFIX_RE,\n          (_, not, variant) => not + '(' + prepareVariantSelector(':' + variant) + ')',\n        )]: translation,\n    }\n  }\n\n  // Apply variants depth-first\n  return (translation, rule) => rule.v.reduceRight(applyVariant, translation)\n}\n","/* eslint-disable no-return-assign, no-cond-assign, no-implicit-coercion */\n\n// Based on https://github.com/kripod/otion\n// License MIT\n\n/*\nTo have a predictable styling the styles must be ordered.\n\nThis order is represented by a precedence number. The lower values\nare inserted before higher values. Meaning higher precedence styles\noverwrite lower precedence styles.\n\nEach rule has some traits that are put into a bit set which form\nthe precedence:\n\n| bits | trait                                             |\n| ---- | ------------------------------------------------- |\n| 1    | dark mode                                         |\n| 2    | layer: base = 0, components = 1, utilities = 2    |\n| 1    | screens: is this a responsive variation of a rule |\n| 5    | responsive based on min-width                     |\n| 4    | at-rules                                          |\n| 17   | pseudo and group variants                         |\n| 4    | number of declarations (descending)               |\n| 4    | greatest precedence of properties                 |\n\n**Dark Mode: 1 bit**\n\nFlag for dark mode rules.\n\n**Layer: 3 bits**\n\n- base = 0: The preflight styles and any base styles registered by plugins.\n- components = 1: Component classes and any component classes registered by plugins.\n- utilities = 2: Utility classes and any utility classes registered by plugins.\n\n**Screens: 1 bit**\n\nFlag for screen variants. They may not always have a `min-width` to be detected by _Responsive_ below.\n\n**Responsive: 5 bits**\n\nBased on extracted `min-width` value:\n\n- 576px -> 3\n- 1536px -> 9\n- 36rem -> 3\n- 96rem -> 9\n\n**At-Rules: 4 bits**\n\nBased on the count of special chars (`-:,`) within the at-rule.\n\n**Pseudo and group variants: 17 bits**\n\nEnsures predictable order of pseudo classes.\n\n- https://bitsofco.de/when-do-the-hover-focus-and-active-pseudo-classes-apply/#orderofstyleshoverthenfocusthenactive\n- https://developer.mozilla.org/docs/Web/CSS/:active#Active_links\n- https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js#L718\n\n**Number of declarations (descending): 4 bits**\n\nAllows single declaration styles to overwrite styles from multi declaration styles.\n\n**Greatest precedence of properties: 4 bits**\n\nEnsure shorthand properties are inserted before longhand properties; eg longhand override shorthand\n*/\n\nimport type { ThemeResolver, ThemeScreen } from '../types'\n\nimport { tail, includes, buildMediaQuery } from '../internal/util'\nimport { GROUP_RE, NOT_PREFIX_RE } from './decorate'\n\n// Shared variables\nlet _: string | RegExpExecArray | null | number | ThemeScreen\n\n/*\nBit shifts for the primary bits:\n\n| bits | trait                                                   | shift |\n| ---- | ------------------------------------------------------- | ----- |\n| 1    | dark mode                                               | 30    |\n| 2    | layer: base = 0, components = 1, utilities = 2, css = 3 | 28    |\n| 1    | screens: is this a responsive variation of a rule       | 27    |\n| 5    | responsive based on min-width                           | 22    |\n| 4    | at-rules                                                | 18    |\n| 17   | pseudo and group variants                               | 0     |\n\nThese are calculated by serialize and added afterwards:\n\n| bits | trait                               |\n| ---- | ----------------------------------- |\n| 4    | number of declarations (descending) |\n| 4    | greatest precedence of properties   |\n\nThese are added by shifting the primary bits using multiplication as js only\nsupports bit shift up to 32 bits.\n*/\n\n// 0=none, 1=sm, 2=md, 3=lg, 4=xl, 5=2xl, 6=??, 7=??\n// 0 - 31: 5 bits\n//  576px -> 3\n// 1536px -> 9\n// 36rem -> 3\n// 96rem -> 9\nexport const responsivePrecedence = (css: string): number =>\n  (((_ = /(?:^|min-width: *)(\\d+(?:.\\d+)?)(p)?/.exec(css)) ? +_[1] / (_[2] ? 15 : 1) / 10 : 0) &\n    31) <<\n  22\n\n// Colon and dash count of string (ascending): 0 -> 7 => 3 bits\nexport const seperatorPrecedence = (string: string): number => {\n  _ = 0\n\n  for (let index = string.length; index--; ) {\n    _ += (includes('-:,', string[index]) as unknown) as number\n  }\n\n  return _\n}\n\nexport const atRulePresedence = (css: string): number => (seperatorPrecedence(css) & 15) << 18\n\n// Pesudo variant presedence\n// Chars 3 - 8: Uniquely identifies a pseudo selector\n// represented as a bit set for each relevant value\n// 17 bits: one for each variant plus one for unknown variants\n//\n// ':group-*' variants are normalized to their native pseudo class (':group-hover' -> ':hover')\n// as they already have a higher selector presedence due to the add '.group' ('.group:hover .group-hover:...')\n\n// Sources:\n// - https://bitsofco.de/when-do-the-hover-focus-and-active-pseudo-classes-apply/#orderofstyleshoverthenfocusthenactive\n// - https://developer.mozilla.org/docs/Web/CSS/:active#Active_links\n// - https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js#L718\n\nconst PRECEDENCES_BY_PSEUDO_CLASS = [\n  /* fi */ 'rst' /* : 0 */,\n  /* la */ 'st' /* : 1 */,\n  /* ev */ 'en' /* : 2 */,\n  /* od */ 'd' /* : 3 */,\n  /* li */ 'nk' /* : 4 */,\n  /* vi */ 'sited' /* : 5 */,\n  /* em */ 'pty' /* : 6 */,\n  /* ch */ 'ecked' /* : 7 */,\n  /* fo */ 'cus-w' /* ithin : 8 */,\n  /* ho */ 'ver' /* : 9 */,\n  /* fo */ 'cus' /* : 10 */,\n  /* fo */ 'cus-v' /* isible : 11 */,\n  /* ac */ 'tive' /* : 12 */,\n  /* di */ 'sable' /* d : 13 */,\n  /* re */ 'ad-on' /* ly: 14 */,\n  /* op */ 'tiona' /* l: 15 */,\n  /* re */ 'quire' /* d: 16 */,\n]\n\nconst pseudoPrecedence = (pseudoClass: string): number =>\n  1 <<\n  (~(_ = PRECEDENCES_BY_PSEUDO_CLASS.indexOf(pseudoClass.replace(GROUP_RE, ':$2').slice(3, 8)))\n    ? _\n    : 17)\n\n// Variants: 28 bits\nexport const makeVariantPresedenceCalculator = (\n  theme: ThemeResolver,\n  variants: Record<string, string | undefined>,\n) => (presedence: number, variant: string): number =>\n  presedence |\n  // 5: responsive\n  ((_ = theme('screens', tail(variant), ''))\n    ? // 0=none, 1=sm, 2=md, 3=lg, 4=xl, 5=2xl, 6=??, 7=??\n      // 0 - 31: 5 bits\n      // 576px -> 3\n      // 1536px -> 9\n      // 36rem -> 3\n      // 96rem -> 9\n      // Move into screens layer and adjust based on min-width\n      (1 << 27) | responsivePrecedence(buildMediaQuery(_))\n    : // 1: dark mode flag\n    variant == ':dark'\n    ? 1 << 30\n    : // 4: precedence of other at-rules\n    (_ = variants[variant] || variant.replace(NOT_PREFIX_RE, ':$2'))[0] == '@'\n    ? atRulePresedence(_)\n    : // 17: pseudo and group variants\n      pseudoPrecedence(variant))\n\n// https://github.com/kripod/otion/blob/main/packages/otion/src/propertyMatchers.ts\n// \"+1\": [\n// \t/* ^border-.*(w|c|sty) */\n// \t\"border-.*(width,color,style)\",\n\n// \t/* ^[tlbr].{2,4}m?$ */\n// \t\"top\",\n// \t\"left\",\n// \t\"bottom\",\n// \t\"right\",\n\n// \t/* ^c.{7}$ */\n// \t\"continue\",\n// ],\n\n// \"-1\": [\n// \t/* ^[fl].{5}l */\n// \t\"flex-flow\",\n// \t\"line-clamp\",\n\n// \t/* ^g.{8}$ */\n// \t\"grid-area\",\n\n// \t/* ^pl */\n// \t\"place-content\",\n// \t\"place-items\",\n// \t\"place-self\",\n// ],\n\n// group: 1 => +1\n// group: 2 => -1\n\n// 0 - 15 => 4 bits\n// Ignore vendor prefixed and custom properties\nexport const declarationPropertyPrecedence = (property: string): number =>\n  property[0] == '-'\n    ? 0\n    : seperatorPrecedence(property) +\n      ((_ = /^(?:(border-(?!w|c|sty)|[tlbr].{2,4}m?$|c.{7}$)|([fl].{5}l|g.{8}$|pl))/.exec(property))\n        ? +!!_[1] /* +1 */ || -!!_[2] /* -1 */\n        : 0) +\n      1\n\n/* eslint-enable no-return-assign, no-cond-assign, no-implicit-coercion */\n","import type { Context, CSSRules, Prefixer, Rule, Token, MaybeArray } from '../types'\n\nimport {\n  join,\n  includes,\n  escape,\n  hyphenate,\n  evalThunk,\n  buildMediaQuery,\n  tail,\n  merge,\n  isCSSProperty,\n} from '../internal/util'\nimport {\n  responsivePrecedence,\n  declarationPropertyPrecedence,\n  makeVariantPresedenceCalculator,\n  atRulePresedence,\n} from './presedence'\nimport { apply } from './apply'\nexport interface RuleWithPresedence {\n  r: string\n  p: number\n}\n\nconst stringifyBlock = (body: string, selector: string): string => selector + '{' + body + '}'\n\n// Not using const enums as they get transpiled to a lot of code\n// /**\n//  * Determines the default order of styles.\n//  *\n//  * For example: screens have a higher presedence (eg override) utilities\n//  */\n// const enum Layer {\n//   /**\n//    * The preflight styles and any base styles registered by plugins.\n//    */\n//   base = 0,\n\n//   /**\n//    * Component classes and any component classes registered by plugins.\n//    */\n//   components = 1,\n\n//   /**\n//    * Utility classes and any utility classes registered by plugins.\n//    */\n//   utilities = 2,\n\n//   /**\n//    * Inline directives\n//    */\n//   css = 3,\n// }\n\n/**\n * The preflight styles and any base styles registered by plugins.\n */\nexport type LayerBase = 0\n\n/**\n * Component classes and any component classes registered by plugins.\n */\nexport type LayerComponents = 1\n\n/**\n * Utility classes and any utility classes registered by plugins.\n */\nexport type LayerUtilities = 2\n\n/**\n * Inline directives\n */\nexport type LayerCss = 3\n\nexport type Layer = LayerBase | LayerComponents | LayerUtilities | LayerCss\n\nexport const serialize = (\n  prefix: Prefixer,\n  variants: Record<string, string>,\n  context: Context,\n): ((css: CSSRules, className?: string, rule?: Rule, layer?: Layer) => RuleWithPresedence[]) => {\n  const { theme, tag } = context\n\n  // Hash/Tag tailwind custom properties during serialization\n  // used by `tagVars` below\n  const tagVar = (_: string, property: string): string => '--' + tag(property)\n\n  const tagVars = (value: string | number): string => `${value}`.replace(/--(tw-[\\w-]+)\\b/g, tagVar)\n\n  // Create a css declaration with prefix and hashed custom properties\n  const stringifyDeclaration = (\n    property: string,\n    value: string | number | string[],\n    important: boolean | undefined,\n  ): string => {\n    property = tagVars(property)\n\n    // Support array fallbacks\n    return Array.isArray(value)\n      ? join(\n          value.filter(Boolean).map((value) => prefix(property, tagVars(value), important)),\n          ';',\n        )\n      : prefix(property, tagVars(value), important)\n  }\n\n  // List of css rule with presedence to be injected\n  let rules: RuleWithPresedence[]\n\n  // Responsible for converting the css into one or more css strings\n  // which will be injected into the page\n  const stringify = (\n    // Upper at-rules, selector that should wrap each generated css block\n    atRules: string[],\n    // The current css selector\n    selector: string,\n    // The current presedence for determine the css position in the stylesheet\n    presedence: number,\n    // The rules object\n    css: MaybeArray<CSSRules>,\n    important: boolean | undefined,\n  ): void => {\n    if (Array.isArray(css)) {\n      css.forEach((css) => css && stringify(atRules, selector, presedence, css, important))\n      return\n    }\n\n    // 1. Properties\n    // 3. *\n    // 2. @...\n    // 3. :pseudo\n    // 4. &\n\n    // The generated declaration block eg body of the css rule\n    let declarations = ''\n\n    // Additional presedence values\n\n    // this ensures that 'border-top-width' has a higer presedence than 'border-top'\n    let maxPropertyPresedence = 0\n\n    // more specific utilities have less declarations and a higher presedence\n    let numberOfDeclarations = 0\n\n    if ((css as CSSRules)['@apply']) {\n      css = merge(\n        evalThunk(apply((css as CSSRules)['@apply'] as Token), context),\n        { ...(css as CSSRules), '@apply': undefined },\n        context,\n      )\n    }\n\n    // Walk through the object\n    Object.keys(css as CSSRules).forEach((key) => {\n      const value = evalThunk((css as CSSRules)[key], context)\n\n      if (isCSSProperty(key, value)) {\n        if (value !== '' && key.length > 1) {\n          // It is a Property\n          const property = hyphenate(key)\n\n          // Update presedence\n          numberOfDeclarations += 1\n          maxPropertyPresedence = Math.max(\n            maxPropertyPresedence,\n            declarationPropertyPrecedence(property),\n          )\n\n          // Add to the declaration block with prefixer applied\n          declarations =\n            (declarations && declarations + ';') +\n            stringifyDeclaration(property, value as string | number | string[], important)\n        }\n      } else if (value) {\n        // TODO remove once moved from :global to @global\n        if (key == ':global') {\n          key = '@global'\n        }\n\n        // If the value is an object this must be a nested block\n        // like '@media ...', '@supports ... ', ':pseudo ...', '& > ...'\n        // If this is a `@` rule\n        if (key[0] == '@') {\n          if (key[1] == 'g') {\n            // @global\n            stringify([], '', 0, value as MaybeArray<CSSRules>, important)\n          } else if (key[1] == 'f') {\n            // `@font-face` is never wrapped, eg always global/root\n            stringify([], key, 0, value as MaybeArray<CSSRules>, important)\n          } else if (key[1] == 'k') {\n            // @keyframes handling\n            // To prevent\n            // \"@keyframes spin{from{transform:rotate(0deg)}}\"\n            // \"@keyframes spin{to{transform:rotate(360deg)}}\"\n            // we generate waypoints without prefix and grap them from the stack\n            // \"from{transform:rotate(0deg)}\"\n            // \"to{transform:rotate(360deg)}\"\n            // => \"@keyframes name{from{transform:rotate(0deg)}from{transform:rotate(0deg)}}\"\n            const currentSize = rules.length\n\n            stringify([], '', 0, value as MaybeArray<CSSRules>, important)\n\n            const waypoints = rules.splice(currentSize, rules.length - currentSize)\n\n            // Insert without wrappers\n            rules.push({\n              r: stringifyBlock(\n                join(\n                  waypoints.map((p) => p.r),\n                  '',\n                ),\n                key,\n              ),\n              p: waypoints.reduce((sum, p) => sum + p.p, 0),\n            })\n          } else if (key[1] == 'i') {\n            // @import\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;(Array.isArray(value) ? value : [value]).forEach(\n              (value) => value && rules.push({ p: 0, r: `${key} ${value};` }),\n            )\n          } else {\n            // @screen\n            if (key[2] == 'c') {\n              key = buildMediaQuery(context.theme('screens', tail(key, 8).trim()) as string)\n            }\n\n            // Some nested block like @media, dive into it\n            stringify(\n              [...atRules, key],\n              selector,\n              presedence | responsivePrecedence(key) | atRulePresedence(key),\n              value as MaybeArray<CSSRules>,\n              important,\n            )\n          }\n        } else {\n          // A selector block: { '&:focus': { ... } }\n          stringify(\n            atRules,\n            // If this is a nested selector we need to\n            // - replace `&` with the current selector\n            selector\n              ? // Go over the selector and replace the matching selectors respecting multiple selectors\n                selector.replace(\n                  / *((?:\\(.+?\\)|\\[.+?\\]|[^,])+) *(,|$)/g,\n                  (_, selectorPart: string, comma: string) =>\n                    key.replace(\n                      / *((?:\\(.+?\\)|\\[.+?\\]|[^,])+) *(,|$)/g,\n                      (_, keyPart: string, comma: string) =>\n                        (includes(keyPart, '&')\n                          ? keyPart.replace(/&/g, selectorPart)\n                          : (selectorPart && selectorPart + ' ') + keyPart) + comma,\n                    ) + comma,\n                )\n              : key,\n            presedence,\n            value as MaybeArray<CSSRules>,\n            important,\n          )\n        }\n      }\n    })\n\n    // We have collected all properties\n    // if there have been some we need to create a css rule\n    if (numberOfDeclarations) {\n      // Inject declarations\n\n      rules.push({\n        // Wrap block with upper at-rules\n        r: atRules.reduceRight(stringifyBlock, stringifyBlock(declarations, selector)),\n\n        // Calculate precedence\n        p:\n          presedence *\n            // Declarations: 8 bits = 256\n            (1 << 8) +\n          // 4: number of declarations (descending)\n          (((Math.max(0, 15 - numberOfDeclarations) & 15) << 4) |\n            // 4: greatest precedence of properties\n            // if there is no property presedence this is most likely a custom property only declaration\n            // these have the highest presedence\n            ((maxPropertyPresedence || 15) & 15)),\n      })\n    }\n  }\n\n  const variantPresedence = makeVariantPresedenceCalculator(theme, variants)\n\n  return (css, className, rule, layer = 0 /* Layerbase */) => {\n    // Initial presedence based on layer (base = 0, components = 1, utilities = 2, css = 3)\n    layer <<= 28\n\n    rules = []\n\n    stringify(\n      [],\n      className ? '.' + escape(className) : '',\n      // If we have a rule, create starting presedence based on the variants\n      rule ? rule.v.reduceRight(variantPresedence, layer) : layer,\n      css,\n      rule && rule.i,\n    )\n\n    return rules\n  }\n}\n","import type { Context, Sheet, Mode, SheetInit } from '../types'\n\nimport { sortedInsertionIndex } from '../internal/util'\n\nimport type { RuleWithPresedence } from './serialize'\n\n// Insert css rules using presedence to find the correct position within the sheet\nexport const inject = (\n  sheet: Sheet,\n  mode: Mode,\n  init: SheetInit,\n  context: Context,\n): ((rule: RuleWithPresedence) => void) => {\n  // An array of presedence by index within the sheet\n  // always sorted\n  let sortedPrecedences: number[]\n  init<number[]>((value = []) => (sortedPrecedences = value))\n\n  // Cache for already inserted css rules\n  // to prevent double insertions\n  let insertedRules: Set<string>\n  init<Set<string>>((value = new Set()) => (insertedRules = value))\n\n  return ({ r: css, p: presedence }) => {\n    // If not already inserted\n    if (!insertedRules.has(css)) {\n      // Mark rule as inserted\n      insertedRules.add(css)\n\n      // Find the correct position\n      const index = sortedInsertionIndex(sortedPrecedences, presedence)\n\n      try {\n        // Insert\n        sheet.insert(css, index)\n\n        // Update sorted index\n        sortedPrecedences.splice(index, 0, presedence)\n      } catch (error) {\n        // Some thrown error a because of specific pseudo classes\n        // let filter them to prevent unnecessary warnings\n        // ::-moz-focus-inner\n        // :-moz-focusring\n        if (!/:-[mwo]/.test(css)) {\n          mode.report({ id: 'INJECT_CSS_ERROR', css, error: error as Error }, context)\n        }\n      }\n    }\n  }\n}\n","import type {\n  Configuration,\n  Context,\n  Preflight,\n  ThemeResolver,\n  Theme,\n  Rule,\n  Hasher,\n  InlineDirective,\n  CSSRules,\n  Mode,\n  Falsy,\n  TypescriptCompat,\n  MaybeTokenInterpolation,\n} from '../types'\n\nimport { corePlugins } from './plugins'\nimport { createPreflight } from './preflight'\nimport { coreVariants } from './variants'\n\nimport { cssomSheet, voidSheet } from './sheets'\nimport { silent, strict, warn } from './modes'\nimport { autoprefix, noprefix } from './prefix'\nimport { makeThemeResolver } from './theme'\n\nimport { cyrb32, identity, merge, evalThunk, ensureMaxSize, includes, join } from '../internal/util'\n\nimport { parse } from './parse'\nimport { translate as makeTranslate } from './translate'\nimport { decorate as makeDecorate, prepareVariantSelector } from './decorate'\nimport { serialize as makeSerialize } from './serialize'\nimport { inject as makeInject } from './inject'\nimport { stringifyRule } from './helpers'\n\nconst sanitize = <T>(\n  value: T | boolean | undefined,\n  defaultValue: T,\n  disabled: T,\n  enabled = defaultValue,\n): T => (value === false ? disabled : value === true ? enabled : value || defaultValue)\n\nconst loadMode = (mode: Configuration['mode']): Mode =>\n  (typeof mode == 'string'\n    ? ({ t: strict, a: warn, i: silent } as Record<string, Mode>)[mode[1]]\n    : mode) || warn\n\n// Use hidden '_' property to collect class names which have no css translation like hashed twind classes\nconst COMPONENT_PROPS = { _: { value: '', writable: true } }\n\nexport const configure = (\n  config: Configuration = {},\n): {\n  init: () => void\n  process: (tokens: MaybeTokenInterpolation) => string\n} => {\n  const theme = makeThemeResolver(config.theme)\n\n  const mode = loadMode(config.mode)\n\n  const hash = sanitize<Hasher | false>(config.hash, false, false, cyrb32)\n\n  const important = config.important\n\n  // Track the active rule\n  // 1. to detect if a theme value should be negated\n  // 2. for nested `tw()` calls\n  //    `sm:hover:${({ tw }) => tw`underline`}`\n  //    ==> 'sm:hover:underline`\n  // Start with an \"empty\" rule, to always have value to use\n  let activeRule: { v: string[]; n?: boolean } = { v: [] }\n\n  let translateDepth = 0\n  const lastTranslations: (CSSRules | string | Falsy)[] = []\n\n  // The context that is passed to functions to access the theme, ...\n  const context: Context = {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    tw: (...tokens: MaybeTokenInterpolation) => process(tokens),\n\n    theme: ((section: keyof Theme, key?: string | string[], defaultValue?: unknown): unknown => {\n      const value =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        theme(section, key as string, defaultValue as any) ??\n        // If no theme value is found, notify 'mode', it may be able to resolve a value\n        mode.unknown(\n          section,\n          key == null || Array.isArray(key) ? key : key.split('.'),\n          defaultValue != null,\n          context,\n        )\n\n      // Add negate to theme value using calc to support complex values\n      return activeRule.n && value && includes('rg', (typeof value)[5])\n        ? `calc(${value} * -1)`\n        : value\n    }) as ThemeResolver,\n\n    tag: (value) => (hash ? hash(value) : value),\n\n    css: (rules) => {\n      translateDepth++\n      const lastTranslationsIndex = lastTranslations.length\n\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;(typeof rules == 'string' ? parse([rules]) : rules).forEach(convert)\n\n        const css = Object.create(null, COMPONENT_PROPS)\n\n        for (let index = lastTranslationsIndex; index < lastTranslations.length; index++) {\n          const translation = lastTranslations[index]\n\n          if (translation) {\n            switch (typeof translation) {\n              case 'object':\n                merge(css, translation, context)\n                break\n              case 'string':\n                css._ += (css._ && ' ') + translation\n            }\n          }\n        }\n\n        return css\n      } finally {\n        lastTranslations.length = lastTranslationsIndex\n        translateDepth--\n      }\n    },\n  }\n\n  // Used to translate a rule using plugins\n  const translate = makeTranslate({ ...corePlugins, ...config.plugins }, context)\n\n  // Wrap `translate()` to keep track of the active rule\n  // we need to use try-finally as mode.report may throw\n  // and we must always reset the active rule\n  const doTranslate = (rule: Rule): CSSRules | string | Falsy | TypescriptCompat => {\n    // Keep track of active variants for nested `tw` calls\n    const parentRule = activeRule\n    activeRule = rule\n\n    try {\n      return evalThunk(translate(rule), context)\n    } finally {\n      activeRule = parentRule\n    }\n  }\n\n  const variants = { ...coreVariants, ...config.variants }\n\n  // Apply variants to a translation\n  const decorate = makeDecorate(config.darkMode || 'media', variants, context)\n\n  // Serialize a translation to css\n  const serialize = makeSerialize(sanitize(config.prefix, autoprefix, noprefix), variants, context)\n\n  const sheet = config.sheet || (typeof window == 'undefined' ? voidSheet() : cssomSheet(config))\n\n  const { init = (callback) => callback() } = sheet\n\n  // Inject css into the target enviroment\n  const inject = makeInject(sheet, mode, init, context)\n\n  // Cache rule ids and their generated class name\n  let idToClassName: Map<string, string>\n  init<Map<string, string>>((value = new Map()) => (idToClassName = value))\n\n  // Cache generated inline directive names by their function identity\n  const inlineDirectiveName = new WeakMap<InlineDirective, string>()\n\n  // Used as replacer for JSON.stringify to calculate the hash for a inline function\n  const evaluateFunctions = (key: string, value: unknown): unknown =>\n    key == '_' // Do not include passed classNames in the hash\n      ? undefined\n      : typeof value == 'function'\n      ? JSON.stringify(evalThunk(value, context), evaluateFunctions)\n      : value\n\n  // Responsible for converting (translate, decorate, serialize, inject) a rule\n  const convert = (rule: Rule): string | undefined | void => {\n    // If there is a active rule this one is nested\n    // we must add the variants and need to reset the id\n    if (!translateDepth && activeRule.v.length) {\n      rule = { ...rule, v: [...activeRule.v, ...rule.v], $: '' }\n    }\n\n    // Static rules (from template literals) can cache their id\n    // this greatly improves performance\n    if (!rule.$) {\n      // For inline directives (functions) `stringifyRule` returns an empty string\n      // in that case we check if we already have a name for the function\n      // and use that one to generate the id\n      rule.$ = stringifyRule(rule, inlineDirectiveName.get(rule.d as InlineDirective))\n    }\n\n    // Check if we already have a class name for this rule id\n    let className = translateDepth ? null : idToClassName.get(rule.$)\n\n    if (className == null) {\n      // 2. translate each rule using plugins\n      let translation = doTranslate(rule)\n\n      // If this is a unknown inline directive\n      if (!rule.$) {\n        // We can now generate a unique name based on the created translation\n        // This id does not include the variants as a directive is always independent of variants\n        // Variants are applied below using `decorate()`\n        // JSON.stringify ignores functions - by using a custom replace\n        // we can calculate a hash based on the value returned by these functions\n        // eslint-disable-next-line no-var\n        rule.$ = cyrb32(JSON.stringify(translation, evaluateFunctions))\n\n        // Remember it\n        inlineDirectiveName.set(rule.d as InlineDirective, rule.$)\n\n        // Generate an id including the current variants\n        rule.$ = stringifyRule(rule, rule.$)\n      }\n\n      if (translation && typeof translation == 'object') {\n        rule.v = rule.v.map(prepareVariantSelector)\n        if (important) rule.i = important\n\n        // 3. decorate: apply variants\n        translation = decorate(translation, rule)\n\n        if (translateDepth) {\n          lastTranslations.push(translation)\n        } else {\n          // - components: layer.components = 1\n          // - plugins: layer.utilities = 2\n          // - inline directive: layer.css = 3\n          const layer = typeof rule.d == 'function' ? (typeof translation._ == 'string' ? 1 : 3) : 2\n\n          className =\n            hash || typeof rule.d == 'function' ? (hash || cyrb32)(layer + rule.$) : rule.$\n\n          // 4. serialize: convert to css string with precedence\n          // 5. inject: add to dom\n          serialize(translation, className, rule, layer).forEach(inject)\n\n          if (translation._) {\n            className += ' ' + translation._\n          }\n        }\n      } else {\n        // CSS class names have been returned\n        if (typeof translation == 'string') {\n          // Use as is\n          className = translation\n        } else {\n          // No plugin or plugin did not return something\n          className = rule.$\n          mode.report({ id: 'UNKNOWN_DIRECTIVE', rule: className }, context)\n        }\n\n        if (translateDepth && typeof rule.d !== 'function') {\n          lastTranslations.push(className)\n        }\n      }\n\n      if (!translateDepth) {\n        // Remember the generated class name\n        idToClassName.set(rule.$, className as string)\n\n        // Ensure the cache does not grow unlimited\n        ensureMaxSize(idToClassName, 30000)\n      }\n    }\n\n    return className as string\n  }\n\n  // This function is called from `tw(...)`\n  // it parses, translates, decorates, serializes and injects the tokens\n  const process = (tokens: MaybeTokenInterpolation): string =>\n    join(parse(tokens).map(convert).filter(Boolean) as string[], ' ')\n\n  // Determine if we should inject the preflight (browser normalize)\n  const preflight = sanitize<Preflight | false | CSSRules>(config.preflight, identity, false)\n\n  if (preflight) {\n    // Create the base tailwind preflight css rules\n    const css = createPreflight(theme)\n\n    // Call the preflight handler, serialize and inject the result\n    const styles = serialize(\n      typeof preflight == 'function'\n        ? evalThunk(preflight(css, context), context) || css\n        : { ...css, ...preflight },\n    )\n\n    init<boolean>((injected = (styles.forEach(inject), true)) => injected)\n  }\n\n  return {\n    init: () => mode.report({ id: 'LATE_SETUP_CALL' }, context),\n    process,\n  }\n}\n","import type { Configuration, Context, Instance, MaybeTokenInterpolation, TW } from '../types'\n\nimport { configure } from './configure'\n\nexport const create = (config?: Configuration): Instance => {\n  // We are using lazy variables to trigger setup either\n  // on first `setup` or `tw` call\n  //\n  // This allows to provide one-time lazy configuration\n  //\n  // These variables are not named `tw` and `setup`\n  // as we use `tw` and `setup` to find the callee site\n  // during stacktrace generation\n  // This allows the error stacktrace to start at the call site.\n\n  // Used by `tw`\n  let process = (tokens: MaybeTokenInterpolation): string => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    init()\n    return process(tokens)\n  }\n\n  // Used by `setup`\n  let init = (config?: Configuration): void => {\n    // Replace implementation with configured ones\n    // `process`: the real one\n    // `init`: invokes `mode.report` with `LATE_SETUP_CALL`\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;({ process, init } = configure(config))\n  }\n\n  // If we got a config, start right away\n  if (config) init(config)\n\n  let context: Context\n  const fromContext = <Key extends keyof Context>(key: Key) => (): Context[Key] => {\n    if (!context) {\n      process([\n        (_: Context) => {\n          context = _\n          return ''\n        },\n      ])\n    }\n\n    return context[key]\n  }\n\n  // The instance methods delegate to the lazy ones.\n  // This ensures that after setup we use the configured\n  // `process` and `setup` fails.\n  return {\n    tw: Object.defineProperties(((...tokens: MaybeTokenInterpolation) => process(tokens)) as TW, {\n      theme: {\n        get: fromContext('theme'),\n      },\n      // css: {\n      //   get: fromContext('css'),\n      // },\n      // tag: {\n      //   get: fromContext('tag'),\n      // },\n    }),\n\n    setup: (config) => init(config),\n  }\n}\n","import { create } from './instance'\n\nexport const { tw, setup } = /*#__PURE__*/ create()\n","import { parse } from './parse'\nimport { stringifyRule } from './helpers'\n\nexport const expandGroups = (classNames: string): string =>\n  parse(classNames)\n    .map((rule) => stringifyRule(rule))\n    .join(' ')\n"],"mappings":";AAgBO,IAAMA,QAAA,GAAqBA,CAACC,KAAA,EAAoCC,MAAA,KAErE,CAAC,CAAC,CAAED,KAAA,CAAiBE,OAAA,CAAQD,MAAA;AAExB,IAAME,IAAA,GAAOA,CAACC,KAAA,EAA0BC,SAAA,GAAY,QAAgBD,KAAA,CAAMD,IAAA,CAAKE,SAAA;AAE/E,IAAMC,UAAA,GAAaA,CAACF,KAAA,EAAoCC,SAAA,KAC7DF,IAAA,CAAKC,KAAA,CAAMG,MAAA,CAAOC,OAAA,GAAsBH,SAAA;AAEnC,IAAMI,IAAA,GAAOA,CAAwCC,KAAA,EAAUC,UAAA,GAAa,MACjFD,KAAA,CAAME,KAAA,CAAMD,UAAA;AAEP,IAAME,QAAA,GAAeb,KAAA,IAAgBA,KAAA;AAErC,IAAMc,IAAA,GAAOA,CAAA,KAAY;AAIzB,IAAMC,UAAA,GAAgCf,KAAA,IAC1CA,KAAA,CAAM,GAAGgB,WAAA,KAAgBP,IAAA,CAAKT,KAAA;AAE1B,IAAMiB,SAAA,GAAajB,KAAA,IAA0BA,KAAA,CAAMkB,OAAA,CAAQ,UAAU,OAAOC,WAAA;AAE5E,IAAMC,SAAA,GAAYA,CAAIpB,KAAA,EAAsBqB,OAAA,KAAwB;EACzE,OAAO,OAAOrB,KAAA,IAAS,YAAY;IACjCA,KAAA,GAASA,KAAA,CAAkCqB,OAAA;EAAA;EAG7C,OAAOrB,KAAA;AAAA;AAGF,IAAMsB,aAAA,GAAgBA,CAAOC,GAAA,EAAgBC,GAAA,KAAsB;EAExE,IAAID,GAAA,CAAIE,IAAA,GAAOD,GAAA,EAAK;IAClBD,GAAA,CAAIG,MAAA,CAAOH,GAAA,CAAII,IAAA,GAAOC,IAAA,GAAO5B,KAAA;EAAA;AAAA;AAK1B,IAAM6B,aAAA,GAAgBA,CAACC,GAAA,EAAa9B,KAAA,KACzC,CAACD,QAAA,CAAS,OAAO+B,GAAA,CAAI,QAAQ/B,QAAA,CAAS,MAAO,QAAOC,KAAA,EAAO,OAAO+B,KAAA,CAAMC,OAAA,CAAQhC,KAAA;AAE3E,IAAMiC,KAAA,GAAQA,CAACC,MAAA,EAAkBC,MAAA,EAAkBd,OAAA,KACxDc,MAAA,GACIC,MAAA,CAAOT,IAAA,CAAKQ,MAAA,EAAQE,MAAA,CAAO,CAACC,OAAA,EAAQR,GAAA,KAAQ;EAC1C,MAAM9B,KAAA,GAAQoB,SAAA,CAAUe,MAAA,CAAOL,GAAA,GAAMT,OAAA;EAErC,IAAIQ,aAAA,CAAcC,GAAA,EAAK9B,KAAA,GAAQ;IAE7BsC,OAAA,CAAOrB,SAAA,CAAUa,GAAA,KAAQ9B,KAAA;EAAA,OACpB;IAELsC,OAAA,CAAOR,GAAA,IACLA,GAAA,CAAI,MAAM,OAAO/B,QAAA,CAAS,QAAQ+B,GAAA,CAAI,MAChC,CAAAQ,OAAA,CAAOR,GAAA,KAAQ,IAAmBS,MAAA,CAAOvC,KAAA,IAC3CiC,KAAA,CAAOK,OAAA,CAAOR,GAAA,KAAQ,IAAiB9B,KAAA,EAAmBqB,OAAA;EAAA;EAGlE,OAAOiB,OAAA;AAAA,GACNJ,MAAA,IACHA,MAAA;AAEC,IAAMM,MAAA,GACV,OAAOC,GAAA,KAAQ,eAAeA,GAAA,CAAID,MAAA,KAGjCE,SAAA,IACAA,SAAA,CAEGxB,OAAA,CAAQ,uCAAuC,QAG/CA,OAAA,CAAQ,OAAO;AAEf,IAAMyB,eAAA,GAAmBC,MAAA,IAAgC;EAC9D,IAAI,CAACb,KAAA,CAAMC,OAAA,CAAQY,MAAA,GAAS;IAC1BA,MAAA,GAAS,CAACA,MAAA;EAAA;EAGZ,OACE,YACAzC,IAAA,CACGyC,MAAA,CAA8BrB,GAAA,CAAKsB,OAAA,IAAW;IAC7C,IAAI,OAAOA,OAAA,IAAU,UAAU;MAC7BA,OAAA,GAAS;QAAEC,GAAA,EAAKD;MAAA;IAAA;IAGlB,OACGA,OAAA,CAA4BE,GAAA,IAC7B5C,IAAA,CACEiC,MAAA,CAAOT,IAAA,CAAKkB,OAAA,EAAQtB,GAAA,CACjByB,OAAA,IAAY,IAAIA,OAAA,UAAkBH,OAAA,CAAkCG,OAAA,OAEvE;EAAA,IAIN;AAAA;AAMC,IAAMC,MAAA,GAAkBjD,KAAA,IAA0B;EAEvD,SAASkD,CAAA,GAAI,GAAGC,KAAA,GAAQnD,KAAA,CAAMoD,MAAA,EAAQD,KAAA,KAAW;IAC/CD,CAAA,GAAIG,IAAA,CAAKC,IAAA,CAAKJ,CAAA,GAAIlD,KAAA,CAAMuD,UAAA,CAAWJ,KAAA,GAAQ;EAAA;EAG7C,OAAO,QAAU,EAAAD,CAAA,GAAKA,CAAA,KAAM,OAAQ,GAAGM,QAAA,CAAS;AAAA;AAQ3C,IAAMC,oBAAA,GAAuBA,CAAC/C,KAAA,EAA0BgD,OAAA,KAA4B;EAGzF,SAASC,GAAA,GAAM,GAAGC,IAAA,GAAOlD,KAAA,CAAM0C,MAAA,EAAQO,GAAA,GAAMC,IAAA,GAAQ;IACnD,MAAMC,KAAA,GAASD,IAAA,GAAOD,GAAA,IAAQ;IAG9B,IAAIjD,KAAA,CAAMmD,KAAA,KAAUH,OAAA,EAAS;MAC3BC,GAAA,GAAME,KAAA,GAAQ;IAAA,OACT;MACLD,IAAA,GAAOC,KAAA;IAAA;EAAA;EAIX,OAAOD,IAAA;AAAA;;;ACrHT,IAAIE,SAAA;AAGJ,IAAIC,KAAA;AAIJ,IAAMC,aAAA,GAAgBA,CAAChE,KAAA,GAAQ,OAAW;EACxC8D,SAAA,CAAUG,IAAA,CAAKjE,KAAA;EACf,OAAO;AAAA;AAUT,IAAMkE,WAAA,GAAeC,YAAA,IAAiC;EAGpDL,SAAA,CAAUV,MAAA,GAASC,IAAA,CAAK7B,GAAA,CAAIsC,SAAA,CAAUM,WAAA,CAAY,MAAM,CAAC,CAAED,YAAA,EAA0B;AAAA;AAGvF,IAAME,YAAA,GAAgBC,CAAA,IAA4BA,CAAA,IAAK,CAACvE,QAAA,CAAS,MAAMuE,CAAA,CAAE;AACzE,IAAMC,YAAA,GAAgBD,CAAA,IAA4BA,CAAA,CAAE,MAAM;AAE1D,IAAME,OAAA,GAAUA,CAACC,UAAA,EAAsBC,MAAA,KAA2B;EAChEX,KAAA,CAAME,IAAA,CAAK;IACTU,CAAA,EAAGb,SAAA,CAAUvD,MAAA,CAAOgE,YAAA;IACpBK,CAAA,EAAGH,UAAA;IACHI,CAAA,EAAGH,MAAA;IACHI,CAAA,EAAG/E,QAAA,CAAS+D,SAAA,EAAW;IACvBiB,CAAA,EAAG;EAAA;AAAA;AAIP,IAAMC,QAAA,GAAYC,MAAA,IAAuB;EACvC,MAAMP,MAAA,GAASO,MAAA,CAAO,MAAM;EAE5B,IAAIP,MAAA,EAAQ;IACVO,MAAA,GAASxE,IAAA,CAAKwE,MAAA;EAAA;EAGhB,MAAMC,MAAA,GAAS/E,IAAA,CAAK2D,SAAA,CAAUvD,MAAA,CAAO8D,YAAA;EAErCG,OAAA,CAAQS,MAAA,IAAU,MAAMC,MAAA,GAAU,CAAAA,MAAA,IAAUA,MAAA,GAAS,OAAOD,MAAA,EAAQP,MAAA;EAEpE,OAAO;AAAA;AAGT,IAAMS,WAAA,GAAcA,CAACC,KAAA,EAAeC,SAAA,KAA8B;EAChE,IAAIJ,MAAA,GAAS;EAEb,SAASK,IAAA,EAAcC,OAAA,GAAU,OAAOC,SAAA,GAAW,GAAIF,IAAA,GAAOF,KAAA,CAAMI,SAAA,MAAgB;IAClF,IAAID,OAAA,IAAWD,IAAA,IAAQ,KAAK;MAC1BL,MAAA,IAAUK,IAAA;MACVC,OAAA,GAAUD,IAAA,IAAQ;MAClB;IAAA;IAGF,QAAQA,IAAA;MAAA,KACD;QAEHL,MAAA,GACEA,MAAA,IAAUjB,aAAA,CAAc,OAAOoB,KAAA,CAAMI,SAAA,KAAaF,IAAA,GAAOF,KAAA,CAAMI,SAAA,MAAc,MAAMP,MAAA;QAErF;MAAA,KAEG;QAEHA,MAAA,GAASA,MAAA,IAAUjB,aAAA,CAAciB,MAAA;QAEjCjB,aAAA;QAEA;MAAA,KAEG;QACHA,aAAA,CAAcsB,IAAA;QAEd;MAAA,KAEG;MAAA,KACA;MAAA,KACA;MAAA,KACA;MAAA,KACA;QACHL,MAAA,GAASA,MAAA,IAAUD,QAAA,CAASC,MAAA;QAC5Bf,WAAA,CAAYoB,IAAA,KAAS;QAErB;MAAA;QAGAL,MAAA,IAAUK,IAAA;IAAA;EAAA;EAIhB,IAAIL,MAAA,EAAQ;IACV,IAAII,SAAA,EAAW;MACbrB,aAAA,CAAc,MAAMiB,MAAA;IAAA,WACXA,MAAA,CAAOrE,KAAA,CAAM,OAAO,KAAK;MAClCoD,aAAA,CAAciB,MAAA,CAAOrE,KAAA,CAAM,GAAG;IAAA,OACzB;MACLoE,QAAA,CAASC,MAAA;IAAA;EAAA;AAAA;AAKf,IAAMQ,iBAAA,GAAqBL,KAAA,IAAuB;EAChDpB,aAAA;EAGA0B,UAAA,CAAWN,KAAA;EAEXlB,WAAA;AAAA;AAGF,IAAMyB,UAAA,GAAaA,CAAC7D,GAAA,EAAasD,KAAA,KAAuB;EACtD,IAAIA,KAAA,EAAO;IACTpB,aAAA;IAYA,MAAMqB,SAAA,GAAYtF,QAAA,CAAS,OAAQ,QAAOqF,KAAA,EAAO;IAEjDD,WAAA,CAAYrD,GAAA,EAAKuD,SAAA;IAEjB,IAAIA,SAAA,EAAW;MACbI,iBAAA,CAAkBL,KAAA;IAAA;IAGpBlB,WAAA;EAAA;AAAA;AAIJ,IAAMwB,UAAA,GAAcN,KAAA,IAAuB;EACzC,QAAQ,OAAOA,KAAA;IAAA,KACR;MAEHD,WAAA,CAAYC,KAAA;MACZ;IAAA,KACG;MAEHZ,OAAA,CAAQY,KAAA;MACR;IAAA,KACG;MACH,IAAIrD,KAAA,CAAMC,OAAA,CAAQoD,KAAA,GAAQ;QAExBA,KAAA,CAAMQ,OAAA,CAAQH,iBAAA;MAAA,WACLL,KAAA,EAAO;QAEhBhD,MAAA,CAAOT,IAAA,CAAKyD,KAAA,EAAOQ,OAAA,CAAS9D,GAAA,IAAQ;UAClC6D,UAAA,CAAW7D,GAAA,EAAMsD,KAAA,CAAwBtD,GAAA;QAAA;MAAA;EAAA;AAAA;AAkBnD,IAAM+D,aAAA,GAAgB,IAAIC,OAAA;AAE1B,IAAMC,YAAA,GAAgBC,OAAA,IAA4C;EAChE,IAAIC,OAAA,GAAUJ,aAAA,CAAcK,GAAA,CAAIF,OAAA;EAEhC,IAAI,CAACC,OAAA,EAAS;IAIZ,IAAIE,aAAA,GAAgBC,GAAA;IAGpB,IAAInB,MAAA,GAAS;IAEbgB,OAAA,GAAUD,OAAA,CAAQzE,GAAA,CAAI,CAAC6D,KAAA,EAAOjC,KAAA,KAAU;MACtC,IACEgD,aAAA,KAAkBA,aAAA,KACjBf,KAAA,CAAMxE,KAAA,CAAM,OAAO,OAAOb,QAAA,CAAS,OAAQ,CAAAiG,OAAA,CAAQ7C,KAAA,GAAQ,MAAM,IAAI,MACtE;QAGAgD,aAAA,GAAgBhD,KAAA;MAAA;MAIlB,IAAIA,KAAA,IAASgD,aAAA,EAAe;QAC1B,OAAQE,aAAA,IAAkB;UAExB,IAAIlD,KAAA,IAASgD,aAAA,EAAe;YAC1BlB,MAAA,GAAS;UAAA;UAGXA,MAAA,IAAUG,KAAA;UAGV,IAAIrF,QAAA,CAAS,MAAO,QAAOsG,aAAA,EAAe,KAAK;YAC7CpB,MAAA,IAAUoB,aAAA;UAAA,WACDA,aAAA,EAAe;YACxBlB,WAAA,CAAYF,MAAA;YACZA,MAAA,GAAS;YACTS,UAAA,CAAWW,aAAA;UAAA;UAIb,IAAIlD,KAAA,IAAS6C,OAAA,CAAQ5C,MAAA,GAAS,GAAG;YAC/B+B,WAAA,CAAYF,MAAA;UAAA;QAAA;MAAA;MAOlB,MAAMqB,WAAA,GAAevC,KAAA,GAAQ;MAE7BoB,WAAA,CAAYC,KAAA;MAIZ,MAAMmB,eAAA,GAAkB,CAAC,GAAGzC,SAAA;MAG5BC,KAAA,GAAQ;MAER,OAAQsC,aAAA,IAAkB;QACxBtC,KAAA,CAAME,IAAA,CAAK,GAAGqC,WAAA;QACdxC,SAAA,GAAY,CAAC,GAAGyC,eAAA;QAChB,IAAIF,aAAA,EAAe;UACjBX,UAAA,CAAWW,aAAA;QAAA;MAAA;IAAA;IAKjBR,aAAA,CAAcW,GAAA,CAAIR,OAAA,EAASC,OAAA;EAAA;EAG7B,OAAOA,OAAA;AAAA;AAGF,IAAMQ,KAAA,GAASC,MAAA,IAAqD;EACzE5C,SAAA,GAAY;EACZC,KAAA,GAAQ;EAGR,IACEhC,KAAA,CAAMC,OAAA,CAAQ0E,MAAA,CAAO,OACrB3E,KAAA,CAAMC,OAAA,CAAS0E,MAAA,CAAO,GAA4B3D,GAAA,GAClD;IACAgD,YAAA,CAAaW,MAAA,CAAO,IAA4Bd,OAAA,CAAQ,CAACe,MAAA,EAAOxD,KAAA,KAC9DwD,MAAA,CAAMD,MAAA,CAAOvD,KAAA,GAAQ;EAAA,OAElB;IAELuC,UAAA,CAAWgB,MAAA;EAAA;EAGb,OAAO3C,KAAA;AAAA;;;AC5ST,IAAI6C,cAAA;AACJ,IAAMC,cAAA,GAAiBA,CAAC/E,GAAA,EAAa9B,KAAA,KAA4B;EAC/D,IAAI,OAAOA,KAAA,IAAS,YAAY;IAC9B4G,cAAA,GAAiB;EAAA;EAGnB,OAAO5G,KAAA;AAAA;AAGT,IAAM8G,SAAA,GAAaC,IAAA,IAAkC;EACnDH,cAAA,GAAiB;EAEjB,MAAM9E,GAAA,GAAMkF,IAAA,CAAKF,SAAA,CAAUC,IAAA,EAAMF,cAAA;EAEjC,OAAOD,cAAA,IAAkB9E,GAAA;AAAA;AAI3B,IAAMmF,cAAA,GAAiB,IAAInB,OAAA;AAepB,IAAMoB,SAAA,GAAYA,CACvBC,OAAA,EACAJ,IAAA,KACiB;EACjB,MAAMjF,GAAA,GAAMgF,SAAA,CAAUC,IAAA;EAEtB,IAAItC,UAAA;EAEJ,IAAI3C,GAAA,EAAK;IAEP,IAAIsF,KAAA,GAAQH,cAAA,CAAef,GAAA,CAAIiB,OAAA;IAE/B,IAAI,CAACC,KAAA,EAAO;MACVH,cAAA,CAAeT,GAAA,CAAIW,OAAA,EAAUC,KAAA,GAAQ,IAAIC,GAAA;IAAA;IAG3C5C,UAAA,GAAY2C,KAAA,CAAMlB,GAAA,CAAIpE,GAAA;EAAA;EAGxB,IAAI,CAAC2C,UAAA,EAAW;IACdA,UAAA,GAAYrC,MAAA,CAAOkF,cAAA,CACjB,CAACC,MAAA,EAA4BlG,OAAA,KAAwB;MACnDA,OAAA,GAAUU,KAAA,CAAMC,OAAA,CAAQuF,MAAA,IAAUlG,OAAA,GAAUkG,MAAA;MAC5C,OAAOnG,SAAA,CAAU+F,OAAA,CAAQJ,IAAA,EAAM1F,OAAA,GAAUA,OAAA;IAAA,GAE3C,UACA;MAIErB,KAAA,EAAOA,CAAA,KAAM8B,GAAA,IAAOiF;IAAA;IAIxB,IAAIK,KAAA,EAAO;MACTA,KAAA,CAAMZ,GAAA,CAAI1E,GAAA,EAAe2C,UAAA;MAGzBnD,aAAA,CAAc8F,KAAA,EAAO;IAAA;EAAA;EAIzB,OAAO3C,UAAA;AAAA;;;ACnET,IAAM+C,YAAA,GAAeA,CAACd,MAAA,EAAiC;EAAEe;AAAA,MAAmBA,GAAA,CAAIhB,KAAA,CAAMC,MAAA;AAE/E,IAAMgB,KAAA,GAAeA,CAAA,GAAIhB,MAAA,KAC9BQ,SAAA,CAAUM,YAAA,EAAcd,MAAA;;;ACV1B,IAAMiB,SAAA,GAAaC,OAAA,IAA+D,CAChF5H,KAAA,EACAwF,SAAA,EACAN,MAAA,EACA2C,MAAA,KACyB;EACzB,IAAI7H,KAAA,EAAO;IACT,MAAM8H,UAAA,GAAatC,SAAA,IAAYoC,OAAA,CAAQpC,SAAA;IAEvC,IAAIsC,UAAA,IAAcA,UAAA,CAAW1E,MAAA,GAAS,GAAG;MACvC,OAAO0E,UAAA,CAAWzF,MAAA,CAAO,CAAC0F,YAAA,EAAcC,SAAA,KAAa;QACnDD,YAAA,CAAazH,UAAA,CAAW,CAAC4E,MAAA,EAAQ8C,SAAA,EAAUH,MAAA,MAAY7H,KAAA;QACvD,OAAO+H,YAAA;MAAA,GACN;IAAA;EAAA;AAAA;AAKF,IAAME,OAAA,GAAwB,eAAAN,SAAA,CAClC7F,GAAA,IACG;EACAoG,CAAA,EAAG,CAAC,YAAY;EAChBC,CAAA,EAAG,CAAC,aAAa;EACjBC,CAAA,EAAG,CAAC,eAAe;EACnBC,CAAA,EAAG,CAAC,eAAe;EACnBC,EAAA,EAAI,CAAC;EACLC,EAAA,EAAI,CAAC;EACLC,EAAA,EAAI,CAAC;EACLC,EAAA,EAAI,CAAC;AAAA,GACoC3G,GAAA;AAGxC,IAAM4G,WAAA,GAAe5G,GAAA,IAAsC;EAChE,MAAM1B,KAAA,GAAU;IAAEuI,CAAA,EAAG;IAAMC,CAAA,EAAG;EAAA,EAA8C9G,GAAA,KAAQA,GAAA,IAAO,IACxF+G,KAAA,CAAM,IACNC,IAAA;EAEH,SAAS3F,KAAA,GAAQ/C,KAAA,CAAMgD,MAAA,EAAQD,KAAA,KAAW;IACxC,IACE,EAAE/C,KAAA,CAAM+C,KAAA,IAAU;MAChB+E,CAAA,EAAG;MACHC,CAAA,EAAG;MACHC,CAAA,EAAG;MACHC,CAAA,EAAG;IAAA,EACwBjI,KAAA,CAAM+C,KAAA,KAEnC;EAAA;EAGJ,IAAI/C,KAAA,CAAMgD,MAAA,EAAQ,OAAOhD,KAAA;AAAA;AAOpB,IAAM2I,KAAA,GAAsB,eAAApB,SAAA,CAAUe,WAAA;AAE7C,IAAMM,gBAAA,GAAmBA,CAACC,QAAA,EAAkBC,OAAA,KAC1CD,QAAA,IAAYC,OAAA,CAAQ,MAAM,MAAMzI,IAAA,CAAKyI,OAAA,EAAS,KAAK,MAAMzI,IAAA,CAAKyI,OAAA,KAAY;AAIrE,IAAMC,aAAA,GAAgBA,CAACC,IAAA,EAAY3E,UAAA,GAAY2E,IAAA,CAAKxE,CAAA,KACzD,OAAOH,UAAA,IAAa,aAChB,KACA2E,IAAA,CAAKzE,CAAA,CAAEtC,MAAA,CAAO2G,gBAAA,EAAkB,OAAOI,IAAA,CAAKtE,CAAA,GAAI,MAAM,OAAOsE,IAAA,CAAKvE,CAAA,GAAI,MAAM,MAAMJ,UAAA;;;ACxCxF,IAAI4E,CAAA;AACJ,IAAIC,EAAA;AACJ,IAAIvE,CAAA;AAEJ,IAAMwE,eAAA,GAAmBZ,CAAA,IAAmCA,CAAA,IAAK,SAAS,YAAY;AAEtF,IAAMa,QAAA,GAAYxB,SAAA,IAAqB,CACrCT,MAAA,EACAlG,OAAA,EACAoI,EAAA,MACc;EAAA,CACbzB,SAAA,GAAWyB,EAAA,IAAO,CAAAJ,CAAA,GAAIlJ,IAAA,CAAKoH,MAAA,MAAY,MAAM8B,CAAA;AAAA;AAGhD,IAAMK,aAAA,GAAgBA,CAAC1B,SAAA,EAAmB3H,SAAA,KAAuB,CAC/DkH,MAAA,EACAlG,OAAA,EACAoI,EAAA,KAEC,CAAAJ,CAAA,GAAIlJ,IAAA,CAAKoH,MAAA,EAAQlH,SAAA,MAAe;EAAA,CAC9B2H,SAAA,IAAayB,EAAA,GAAgBJ;AAAA;AAGlC,IAAMM,aAAA,GAAiBC,OAAA,IAAyC,CAACrC,MAAA,EAAkB;EAAEsC,KAAA,EAAAC;AAAA,GAASL,EAAA,KAC3F,CAAAJ,CAAA,GAAIS,MAAA,CAAMF,OAAA,IAAYH,EAAA,EAAoBlC,MAAA,MAAsB;EAAA,CAC9DqC,OAAA,IAAWH,EAAA,GAAKJ;AAAA;AAGrB,IAAMU,qBAAA,GAAwBA,CAACH,OAAA,EAAuBvJ,SAAA,KAAsC,CAC1FkH,MAAA,EACA;EAAEsC,KAAA,EAAAC;AAAA,GACFL,EAAA,KAEC,CAAAJ,CAAA,GAAIS,MAAA,CAAMF,OAAA,IAAYH,EAAA,EAAoBlC,MAAA,EAAQpH,IAAA,CAAKoH,MAAA,EAAQlH,SAAA,OAA0B;EAAA,CACvFuJ,OAAA,IAAWH,EAAA,GAAKJ;AAAA;AAGrB,IAAMW,KAAA,GAAQA,CAACC,OAAA,EAAwBC,IAAA,KAAgC,CAAC3C,MAAA,EAAQlG,OAAA,KAC9E4I,OAAA,CAAQ1C,MAAA,EAAQlG,OAAA,EAAS6I,IAAA;AAE3B,IAAMC,OAAA,GAAUX,QAAA,CAAS;AACzB,IAAMY,QAAA,GAAWZ,QAAA,CAAS;AAC1B,IAAMa,aAAA,GAAgBb,QAAA,CAAS;AAC/B,IAAMc,cAAA,GAAiBd,QAAA,CAAS;AAChC,IAAMe,SAAA,GAAYf,QAAA,CAAS;AAC3B,IAAMgB,kBAAA,GAAsB1I,GAAA,IAA+B,CAACyF,MAAA,EAAQlG,OAAA,EAASoI,EAAA,MAAQ;EAAA,CAClF,UAAU3H,GAAA,GAAM2H,EAAA;EACjBe,kBAAA,EACE;AAAA;AAGJ,IAAMC,KAAA,GAAuBA,CAAClD,MAAA,EAAQ;EAAEsC,KAAA,EAAAC;AAAA,GAASL,EAAA,KAAQ,CAAAJ,CAAA,GAAIS,MAAA,CAAM,SAASvC,MAAA,MAAY;EAAA,CAAGkC,EAAA,GAAKJ;AAAA;AAEhG,IAAMqB,eAAA,GAAkBA,CACtBnD,MAAA,EACAuC,MAAA,EACAL,EAAA,EACAG,OAAA,GAAUH,EAAA,KAET,CAAAJ,CAAA,GAAIS,MAAA,CAAOF,OAAA,GAAU,WAA6BnJ,IAAA,CAAK8G,MAAA,OAA0B;EAAA,CAC/E,QAAQkC,EAAA,aAAeJ;AAAA;AAG5B,IAAMsB,mBAAA,GAAsBA,CAACC,KAAA,EAAeC,MAAA,KAC1CxH,IAAA,CAAKyH,KAAA,CAAMC,QAAA,CAASH,KAAA,EAAO,MAAMC,MAAA;AAEnC,IAAMG,MAAA,GAASA,CACbC,KAAA,EACAC,gBAAA,EACAC,cAAA,KACe;EACf,IAAIF,KAAA,IAASA,KAAA,CAAM,MAAM,QAAQ5B,CAAA,GAAK,CAAA4B,KAAA,CAAM7H,MAAA,GAAS,KAAK,OAAO2B,CAAA,GAAI,CAAC,IAAI,GAAG,UAAUsE,CAAA,GAAI,KAAK;IAC9F,OAAO,QAAQsB,mBAAA,CAAoBM,KAAA,CAAMG,MAAA,CAAO,GAAG/B,CAAA,GAAItE,CAAA,KAAM4F,mBAAA,CAC3DM,KAAA,CAAMG,MAAA,CAAO,IAAI/B,CAAA,EAAGA,CAAA,GACpBtE,CAAA,KACG4F,mBAAA,CAAoBM,KAAA,CAAMG,MAAA,CAAO,IAAI,IAAI/B,CAAA,EAAGA,CAAA,GAAItE,CAAA,KACnDmG,gBAAA,GACI,YAAYA,gBAAA,GAAkBC,cAAA,GAAiB,MAAMA,cAAA,GAAiB,QACtEA,cAAA,IAAkB;EAAA;EAI1B,OAAOF,KAAA;AAAA;AAGT,IAAMI,mBAAA,GAAsBA,CAC1BrD,SAAA,EACAsD,IAAA,EACAL,KAAA,KAEAA,KAAA,IAAS,OAAOA,KAAA,IAAS,WACpB,CAAA5B,CAAA,GAAI2B,MAAA,CAAOC,KAAA,EAAOK,IAAA,GAAO,gBAAgBjC,CAAA,KAAM4B,KAAA,GAC9C;EAAA,CACG,QAAQK,IAAA,aAAiB;EAAA,CACzBtD,SAAA,GAAW,CAACiD,KAAA,EAAO5B,CAAA;AAAA,IAEtB;EAAA,CAAGrB,SAAA,GAAWiD;AAAA,IAChB;AAEN,IAAMM,aAAA,GAAiBN,KAAA,IAAoB,CAAAlG,CAAA,GAAIiG,MAAA,CAAOC,KAAA,EAAO,IAAI,SAAS5B,CAAA,GAAI,gBAAgBtE,CAAA;AAE9F,IAAMyG,cAAA,GAAiBA,CACrBjE,MAAA,EACA;EAAEsC,KAAA,EAAAC;AAAA,GACFL,EAAA,EACAG,OAAA,EACA1E,MAAA,EACA2C,MAAA,KAGC,CAAAwB,CAAA,GAAK;EAAEV,CAAA,EAAG,CAAC,SAAS;EAASC,CAAA,EAAG,CAAC,UAAU;AAAA,EAC1CrB,MAAA,CAAO,SACFxC,CAAA,GAAI,QAAQ0E,EAAA,IAAMlC,MAAA,CAAO,gBAC5BA,MAAA,CAAO,MAAM,YACX;EAAA,CACGxC,CAAA,GAAI;AAAA,IAEP;EAAA,CACGA,CAAA,GAAI;EAAA,CACJzE,UAAA,CAAW,CAAC4E,MAAA,EAAQmE,CAAA,CAAE,IAAIxB,MAAA,KACxB,CAAAyB,EAAA,GAAKQ,MAAA,CAAMF,OAAA,EAASnJ,IAAA,CAAK8G,MAAA,OAAa,QAAQ+B,EAAA,UAAYvE,CAAA;EAAA,CAE5DzE,UAAA,CAAW,CAAC4E,MAAA,EAAQmE,CAAA,CAAE,IAAIxB,MAAA,KAAWyB,EAAA,IAAM,CAACA,EAAA,EAAI,QAAQA,EAAA,mBAAqBvE,CAAA;AAAA,IAElF;AAEN,IAAM0G,WAAA,GAAcA,CAACzD,SAAA,EAAkBT,MAAA,KACrCA,MAAA,CAAO,MAAM;EAAA,CAWVS,SAAA,GAAY,CAAAjI,QAAA,CAAS,OAAQ,CAAAwH,MAAA,CAAO,MAAM,IAAI,MAAM,WAAW,MAAMA,MAAA,CAAO;AAAA;AAGjF,IAAMmE,gBAAA,GAAoB1D,SAAA,IAAsBT,MAAA,IAC9CxH,QAAA,CAAS,CAAC,SAAS,QAAQwH,MAAA,CAAO,MAC9B;EAAA,CAAGS,SAAA,GAAW,UAAUT,MAAA,CAAO;AAAA,IAC/BkE,WAAA,CAAYzD,SAAA,EAAUT,MAAA;AAE5B,IAAMoE,UAAA,GAAcL,IAAA,IAA0C,CAAC/D,MAAA,EAAQ;EAAEsC,KAAA,EAAAC;AAAA,MAAY;EACnF,IAAKT,CAAA,GAAIS,MAAA,CAAO,SAAS/I,UAAA,CAAWuK,IAAA,GAAqB/D,MAAA,EAAQ,KAAM;IACrE,OAAO;MAAA,CAAG,UAAU+D,IAAA,GAAOjC;IAAA;EAAA;EAG7B,QAAQ9B,MAAA,CAAO;IAAA,KACR;MACH,OACEA,MAAA,CAAO,MAAM;QAAA,CACV,UAAU+D,IAAA,GAAO,QAAQ/D,MAAA,CAAO,aAAaA,MAAA,CAAO;MAAA;IAAA,KAGtD;IAAA,KACA;MACH,OACG,CAAA8B,CAAA,GAAIS,MAAA,CACF,SAAS/I,UAAA,CAAWuK,IAAA,IAAQvK,UAAA,CAAWwG,MAAA,CAAO,KAC/C9G,IAAA,CAAK8G,MAAA,GACLpH,IAAA,CAAKM,IAAA,CAAK8G,MAAA,QACN;QAAA,CACH,QAAQ+D,IAAA,IAAQ/D,MAAA,CAAO,OAAO8B;MAAA;EAAA;AAAA;AAMzC,IAAMuC,MAAA,GAAwBA,CAACrE,MAAA,EAAQ;EAAEsC,KAAA,EAAAC;AAAA,GAASL,EAAA,KAAO;EACvD,QAAQlC,MAAA,CAAO;IAAA,KACR;IAAA,KACA;IAAA,KACA;IAAA,KACA;IAAA,KACA;MACH,OAAOmC,aAAA,CAAc,eAAenC,MAAA;IAAA,KACjC;IAAA,KACA;MACH,OAAOmC,aAAA,CAAc,kBAAkBnC,MAAA;IAAA,KACpC;MACH,OAAOmD,eAAA,CAAgBnD,MAAA,EAAQuC,MAAA,EAAOL,EAAA;EAAA;EAG1C,OAAQ,CAAAJ,CAAA,GAAIS,MAAA,CAAOL,EAAA,GAAK,SAA2ClC,MAAA,EAAQ,OACvE;IAAEsE,WAAA,EAAaxC;EAAA,IACfgC,mBAAA,CACE,eACA5B,EAAA,EACAK,MAAA,CAAOL,EAAA,GAAK,SAA2ClC,MAAA;AAAA;AAI/D,IAAMuE,WAAA,GAA6BA,CAACvE,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KAAO;EAnO5D,IAAAsC,EAAA;EAoOE,MAAMC,MAAA,GAAQ,CAAAD,EAAA,GAAArD,WAAA,CAAYnB,MAAA,CAAO,QAAnB,gBAAAwE,EAAA,CAAwBxK,GAAA,CAAIR,UAAA;EAC1C,IAAIiL,MAAA,EAAO;IACTzE,MAAA,GAAS9G,IAAA,CAAK8G,MAAA;EAAA;EAGhB,IAAI0E,MAAA,GAAQL,MAAA,CAAOrE,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EACpC,IAAIuC,MAAA,IAASC,MAAA,IAAS,OAAOA,MAAA,KAAU,UAAU;IAC/CA,MAAA,GAAQ7J,MAAA,CAAO8J,OAAA,CAAQD,MAAA,EAAO5J,MAAA,CAAO,CAAC8J,QAAA,EAAU,CAACrK,GAAA,EAAK9B,KAAA,MAAW;MAC/D,IAAI8B,GAAA,CAAIsK,UAAA,CAAW,WAAW;QAC5B,WAAWC,IAAA,IAAQL,MAAA,EAAO;UACxBG,QAAA,CAASrK,GAAA,CAAIlB,KAAA,CAAM,GAAG,KAAKyL,IAAA,GAAOvK,GAAA,CAAIlB,KAAA,CAAM,MAAMZ,KAAA;QAAA;MAAA,OAE/C;QACLmM,QAAA,CAASrK,GAAA,IAAO9B,KAAA;MAAA;MAGlB,OAAOmM,QAAA;IAAA,GACN;EAAA;EAGL,OAAOF,MAAA;AAAA;AAGT,IAAMK,SAAA,GAAaC,GAAA,IAChB,CAAAA,GAAA,GACG,mEACA,6EACJ;AAYF,IAAMC,mBAAA,GAAqCA,CAACjF,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KAC3DlC,MAAA,CAAO,OACN8B,CAAA,GAAIhI,OAAA,CAAQwI,KAAA,CAAMJ,EAAA,EAAsClC,MAAA,CAAO,MAAMA,MAAA,CAAO,QAAQ;EAAA,CAClF,QAAQkC,EAAA,OAASlC,MAAA,CAAO,OAAO,OAAO8B,CAAA;EAAA,CACtC,QAAQI,EAAA,OAASlC,MAAA,CAAO,OAAO,OAAO8B,CAAA;EACvCiD,SAAA,EAAW,CAAC,GAAG7C,EAAA,GAAKlC,MAAA,CAAO,KAAKA,MAAA,CAAO,GAAGvG,WAAA,KAAgB,MAAMqI,CAAA,KAAMiD,SAAA;AAAA;AAG1E,IAAMG,cAAA,GAAkB3K,GAAA,IAA6C,CAACyF,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACrFA,EAAA,CAAG,KAAKV,KAAA,CAAM1H,OAAA,CAAQwI,KAAA,CAAM/H,GAAA,EAAKyF,MAAA,GAASkC,EAAA,CAAG,IAAI3H,GAAA,IAAO6H,aAAA,CAAc7H,GAAA,EAAKyF,MAAA,EAAQlG,OAAA,EAASoI,EAAA;AAG9F,IAAMiD,OAAA,GAAUD,cAAA,CAAe;AAG/B,IAAME,MAAA,GAASF,cAAA,CAAe;AAI9B,IAAMG,MAAA,GAAwBA,CAACrF,MAAA,EAAQ;EAAEsC,KAAA,EAAAC;AAAA,GAASL,EAAA,KAC/C,CAAAJ,CAAA,GAAK;EAAEwD,CAAA,EAAG;EAAS3J,CAAA,EAAG;AAAA,EAAkDqE,MAAA,CAAO,QAAQ;EAAA,CACpF8B,CAAA,GAAI,GAAGI,EAAA,GAAK1I,UAAA,CAAWsI,CAAA,MAAQS,MAAA,CAC/BT,CAAA,EACA5I,IAAA,CAAK8G,MAAA;AAAA;AAIX,IAAMhH,MAAA,GAAiBA,CAACgH,MAAA,EAAQ;EAAEsC,KAAA,EAAAC;AAAA,GAASL,EAAA,KAAO;EAChD,MAAMrJ,KAAA,GAAQqJ,EAAA,CAAGZ,KAAA,CAAM;EACvB,MAAM3D,MAAA,GAAS9E,KAAA,CAAM,MAAM,aAAaA,KAAA,CAAM,KAAK,MAAM;EACzD,IAAI,CAAC8E,MAAA,EAAQ;IACXqC,MAAA,CAAOuF,OAAA,CAAQ,GAAG1M,KAAA;EAAA;EAGpB,IAAImH,MAAA,CAAO,MAAM,UAAU;IACzB,MAAMwF,OAAA,GAAU,CACd,QACA,cACA,YACA,aACA,cACA,UACA7H,MAAA,IAAU,WACV,YACA,SACA,CAACA,MAAA,IAAU,eACX3E,MAAA,CAAOC,OAAA;IAET,OAAO+G,MAAA,CAAO,MAAM,SAChB;MAAA,CAAGrC,MAAA,GAAS,WAAW;IAAA,IACvB6H,OAAA,CAAQ1K,MAAA,CACN,CAACoF,GAAA,EAAK3F,GAAA,KAAQ;MACZ2F,GAAA,CAAI,UAAUvC,MAAA,GAASpD,GAAA,IAAO;MAC9B,OAAO2F,GAAA;IAAA,GAET;MAAA,CACGvC,MAAA,GAAS,WAAW6H,OAAA,CAAQxL,GAAA,CAAKO,GAAA,IAAQ,YAAYoD,MAAA,GAASpD,GAAA,KAAQ3B,IAAA,CAAK;IAAA;EAAA;EAKtF4E,CAAA,GAAIwC,MAAA,CAAOyF,KAAA;EAEX,IAAIjN,QAAA,CAAS,CAAC,OAAO,SAASgF,CAAA,GAAIA,CAAA,IAAKhE,UAAA,CAAWwG,MAAA,CAAOyF,KAAA;EAEzD,OACG,CAAA3D,CAAA,GAAIS,MAAA,CAAO5E,MAAA,GAAS,aAAanE,UAAA,CAAWgE,CAAA,IAAeA,CAAA,EAAcwC,MAAA,MAAY;IAAA,CACnF,UAAUrC,MAAA,GAASH,CAAA,GAAK,CAAAhD,KAAA,CAAMC,OAAA,CAAQqH,CAAA,IAAMA,CAAA,GAAiB,CAACA,CAAA,GAC5D9H,GAAA,CAAK0L,EAAA,IAAM,GAAGhM,SAAA,CAAU8D,CAAA,KAAgBkI,EAAA,KACxC9M,IAAA,CAAK;EAAA;AAAA;AAKP,IAAM+M,WAAA,GAAkD;EAC7DC,KAAA,EAAOA,CAAC5F,MAAA,EAAQ;IAAE6F;EAAA,GAAO3D,EAAA,KAAO2D,GAAA,CAAIjN,IAAA,CAAK,CAACsJ,EAAA,EAAI,GAAGlC,MAAA;EAEjD8F,MAAA,EAAQrD,KAAA,CAAMG,OAAA,EAAS;EACvBmD,MAAA,EAAQnD,OAAA;EACRoD,KAAA,EAAOpD,OAAA;EACPqD,QAAA,EAAUrD,OAAA;EACVsD,IAAA,EAAMtD,OAAA;EAENuD,KAAA,EAAOA,CAACnG,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACvB1J,QAAA,CAAS,CAAC,QAAQ,UAAUwH,MAAA,CAAO,MAC/B;IAAEoG,WAAA,EAAapG,MAAA,CAAO;EAAA,IACtB4C,OAAA,CAAQ5C,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAE/BmE,KAAKrG,MAAA,EAAQlG,OAAA,EAASoI,EAAA,EAAI;IACxB,QAAQlC,MAAA,CAAO;MAAA,KACR;MAAA,KACA;QACH,OAAO;UACLsG,aAAA,EAAe1N,IAAA,CAAKoH,MAAA,CAAO,MAAM,QAAQ,CAAC,UAAU,GAAG9G,IAAA,CAAK8G,MAAA,KAAWA,MAAA;QAAA;MAAA,KAEtE;MAAA,KACA;QACH,OAAO;UAAEuG,QAAA,EAAU3N,IAAA,CAAKoH,MAAA;QAAA;MAAA,KACrB;MAAA,KACA;QACH8B,CAAA,GAAIhI,OAAA,CAAQwI,KAAA,CACT,SAAS9I,UAAA,CAAWwG,MAAA,CAAO,KAC5B9G,IAAA,CAAK8G,MAAA,GACJA,MAAA,CAAO,MAAM;QAGhB,OACE8B,CAAA,IAAK,QAAQ;UAAA,CACV,UAAU9B,MAAA,CAAO,KAAK,KAAK8B;QAAA;IAAA;IAKpC,OAAQ,CAAAA,CAAA,GAAIhI,OAAA,CAAQwI,KAAA,CAAM,QAAQtC,MAAA,EAAQ,OACtC;MAAEqG,IAAA,EAAMvE;IAAA,IACRc,OAAA,CAAQ5C,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAAA;EAG/BsE,KAAKxG,MAAA,EAAQlG,OAAA,EAASoI,EAAA,EAAI;IACxB,QAAQlC,MAAA,CAAO;MAAA,KACR;MAAA,KACA;QACH,OACG,CAAA8B,CAAA,GAAIhI,OAAA,CAAQwI,KAAA,CACV,iBAAiB9I,UAAA,CAAWwI,eAAA,CAAgBhC,MAAA,CAAO,MACpD9G,IAAA,CAAK8G,MAAA,GACLA,MAAA,CAAOnE,MAAA,IAAU,KAAK4K,MAAA,CAAOzG,MAAA,CAAO,MAChC,UAAUA,MAAA,CAAO,sBACjBpH,IAAA,CAAKM,IAAA,CAAK8G,MAAA,QACV;UAAA,CACH,kBAAkBgC,eAAA,CAAgBhC,MAAA,CAAO,MAAM8B;QAAA;MAAA,KAIjD;QACH,OACE9B,MAAA,CAAOnE,MAAA,GAAS,KAAK;UACnB6K,YAAA,EAAc9N,IAAA,CACZoH,MAAA,CAAO,MAAM,QAAQ,CAAC,UAAU,GAAG9G,IAAA,CAAK8G,MAAA,EAAQ,MAAM9G,IAAA,CAAK8G,MAAA,GAC3D;QAAA;IAAA;IAMV,OAAO4C,OAAA,CAAQ5C,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAAA;EAGlCyE,IAAA,EAAMA,CAAC3G,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MACf/J,QAAA,CAAS,CAAC,QAAQ,SAASwH,MAAA,CAAO,QACjC8B,CAAA,GAAIS,MAAA,CACF,aAAa/I,UAAA,CAAWwI,eAAA,CAAgBhC,MAAA,CAAO,MAChD9G,IAAA,CAAK8G,MAAA,GACLpH,IAAA,CAAKM,IAAA,CAAK8G,MAAA,QACN;IAAA,CACH,cAAcgC,eAAA,CAAgBhC,MAAA,CAAO,MAAM8B;EAAA;EAGhD8E,MAAA,EAAQ/D,QAAA;EACRgE,KAAA,EAAOhE,QAAA;EACPiE,QAAA,EAAUjE,QAAA;EACVkE,QAAA,EAAUlE,QAAA;EACVmE,MAAA,EAAQnE,QAAA;EAERoE,OAAA,EAAS;IAAEC,UAAA,EAAY;EAAA;EACvBC,SAAA,EAAW;IAAED,UAAA,EAAY;EAAA;EAEzBE,WAAA,EAAa;IACXC,mBAAA,EAAqB;IACrBC,mBAAA,EAAqB;EAAA;EAGvB,wBAAwB;IACtBD,mBAAA,EAAqB;IACrBC,mBAAA,EAAqB;EAAA;EAGvBC,QAAA,EAAU;IACRC,QAAA,EAAU;IACVC,UAAA,EAAY;IACZC,YAAA,EAAc;EAAA;EAGhB,WAAW;IACT7E,QAAA,EAAU;IACV8E,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRzC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRoC,QAAA,EAAU;IACVC,UAAA,EAAY;IACZI,IAAA,EAAM;IACNvD,WAAA,EAAa;EAAA;EAGf,eAAe;IACbzB,QAAA,EAAU;IACV8E,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRzC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRoC,QAAA,EAAU;IACVC,UAAA,EAAY;IACZI,IAAA,EAAM;EAAA;EAGRC,MAAA,EAAS9H,MAAA,KAAY;IACnB8H,MAAA,EACG;MAAE1G,CAAA,EAAG;MAAcC,CAAA,EAAG;IAAA,EAAoDrB,MAAA,CAAO,OAClFA,MAAA,CAAO,MACP;EAAA;EAGJ+H,GAAA,EAAM/H,MAAA,IAAWA,MAAA,CAAO,MAAM;IAAEgI,SAAA,EAAWhI,MAAA,CAAO,KAAK;EAAA;EAMvDiI,UAAA,EAAY9F,aAAA;EACZ+F,MAAA,EAAQ1F,qBAAA;EAER2F,KAAA,EAAOhG,aAAA;EACPiG,KAAA,EAAOjG,aAAA;EACPkG,UAAA,EAAYlG,aAAA,CAAc;EAE1BmG,OAAA,EAAS;IAAEC,SAAA,EAAW;EAAA;EACtBA,SAAA,EAAWpG,aAAA;EAEX,aAAaA,aAAA,CAAc;EAE3BqG,GAAA,EAAKtF,KAAA;EACLuF,KAAA,EAAOvF,KAAA;EACPwF,MAAA,EAAQxF,KAAA;EACRyF,IAAA,EAAMzF,KAAA;EAKNA,KAAA,EAAOA,CAAClD,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MACf,CAAAT,CAAA,GAAIX,WAAA,CAAYnB,MAAA,CAAO,OACpBwB,KAAA,CAAMe,MAAA,CAAM,SAASrJ,IAAA,CAAK8G,MAAA,IAAUA,MAAA,CAAO,MAC1C,CAAA8B,CAAA,GAAIS,MAAA,CAAM,SAASvC,MAAA,MAAY;IAC9BwI,GAAA,EAAK1G,CAAA;IACL2G,KAAA,EAAO3G,CAAA;IACP4G,MAAA,EAAQ5G,CAAA;IACR6G,IAAA,EAAM7G;EAAA;EAGd8G,SAAA,EAAW7F,cAAA;EACX,gBAAgBA,cAAA;EAChB,gBAAgBN,KAAA,CAAMM,cAAA,EAAgB;EAEtC,kBAAkBN,KAAA,CAAMM,cAAA,EAAgB;EACxC,qBAAqBN,KAAA,CAAMM,cAAA,EAAgB;EAC3C,qBAAqBN,KAAA,CAAMM,cAAA,EAAgB;EAE3C8F,SAAA,EAAW/F,aAAA;EACXgG,SAAA,EAAWhG,aAAA;EACXtJ,UAAA,EAAYsJ,aAAA;EAEZ,eAAeL,KAAA,CAAMK,aAAA,EAAe;EACpC,oBAAoBL,KAAA,CAAMK,aAAA,EAAe;EAEzCiG,MAAA,EAAQ/F,SAAA;EACR,cAAcP,KAAA,CAAMO,SAAA,EAAW;EAE/B,eAAeP,KAAA,CAAMO,SAAA,EAAW;EAChC,mBAAmBP,KAAA,CAAMO,SAAA,EAAW;EAEpCgG,IAAA,EAAMA,CAAChJ,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACrB,CAAAJ,CAAA,GAAIhI,OAAA,CAAQwI,KAAA,CAAM,cAActC,MAAA,EAAQ,OACrC;IAAEiJ,UAAA,EAAYnH;EAAA,IACdM,aAAA,CAAc,cAAcpC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAEnDgH,KAAA,EAAQlJ,MAAA,IACNA,MAAA,CAAO,MAAM;IACXmJ,UAAA,EAAY3Q,QAAA,CAAS,CAAC,SAAS,QAAQwH,MAAA,CAAO,MAAM,UAAUA,MAAA,CAAO,KAAKpH,IAAA,CAAKoH,MAAA;EAAA;EAGnF,gBAAgBmC,aAAA;EAChB,iBAAiBA,aAAA;EACjBiH,OAAA,EAASjF,gBAAA,CAAiB;EAC1BkF,OAAA,EAASlF,gBAAA,CAAiB;EAC1BmF,IAAA,EAAMnF,gBAAA,CAAiB;EAEvBoF,KAAA,EAAQvJ,MAAA,IAAWA,MAAA,CAAO,MAAMkE,WAAA,CAAY,WAAWlE,MAAA,CAAO,IAAI9G,IAAA,CAAK8G,MAAA;EAEvEwJ,UAAA,EAAaxJ,MAAA,IACXA,MAAA,CAAO,MAAM;IAAA,CACV,wBAAwBA,MAAA,CAAO,KAAK,MAAMA,MAAA,CAAO,KAAK,MAAMA,MAAA,CAAO,MAAMA,MAAA,CAAO;EAAA;EAGrFyJ,GAAA,EAAKrF,UAAA,CAAW;EAChBsF,GAAA,EAAKtF,UAAA,CAAW;EAIhBuF,QAAA,EAAUvH,aAAA,CAAc;EAIxBwH,KAAA,EAAOxH,aAAA,CAAc;EAErByH,QAAA,EAAUzH,aAAA,CAAc;EAKxB0H,OAAA,EAAS1H,aAAA,CAAc;EAIvB2H,CAAA,EAAG3H,aAAA,CAAc;EAEjB4H,OAAA,EAAS5H,aAAA;EAET6H,IAAA,EAAM7H,aAAA,CAAc;EAEpB8H,CAAA,EAAG/E,OAAA;EACHgF,EAAA,EAAIhF,OAAA;EACJiF,EAAA,EAAIjF,OAAA;EACJkF,EAAA,EAAIlF,OAAA;EACJmF,EAAA,EAAInF,OAAA;EACJoF,EAAA,EAAIpF,OAAA;EACJqF,EAAA,EAAIrF,OAAA;EAEJsF,CAAA,EAAGrF,MAAA;EACHsF,EAAA,EAAItF,MAAA;EACJuF,EAAA,EAAIvF,MAAA;EACJwF,EAAA,EAAIxF,MAAA;EACJyF,EAAA,EAAIzF,MAAA;EACJ0F,EAAA,EAAI1F,MAAA;EACJ2F,EAAA,EAAI3F,MAAA;EAQJE,CAAA,EAAGlD,aAAA,CAAc;EACjBzG,CAAA,EAAGyG,aAAA,CAAc;EAEjB7G,GAAA,EAAK8J,MAAA;EACLpL,GAAA,EAAKoL,MAAA;EAEL2F,IAAA,EAAM5I,aAAA;EAEN6I,KAAA,EAAO7I,aAAA;EAEP8I,MAAA,EAAQ1I,qBAAA,CAAsB,mBAAmB;EAEjD2I,MAAA,EAAQhJ,aAAA,CAAc;EAEtB,kBAAkBA,aAAA;EAElBiJ,KAAA,EAAOjJ,aAAA,CAAc;EAErBkJ,UAAA,EAAYlJ,aAAA,CAAc;EAE1B,eAAe;IAAEc,kBAAA,EAAoB;EAAA;EACrCqI,OAAA,EAASrI,kBAAA,CAAmB;EAC5B,gBAAgBA,kBAAA,CAAmB;EACnC,eAAeA,kBAAA,CAAmB;EAClC,iBAAiBA,kBAAA,CAAmB;EACpC,qBAAqBA,kBAAA,CAAmB;EACxC,gBAAgBA,kBAAA,CAAmB;EACnC,sBAAsBA,kBAAA,CAAmB;EACzC,qBAAqBA,kBAAA,CAAmB;EAIxCuE,QAAA,EAAUA,CAACxH,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KAC1B1J,QAAA,CAAS,CAAC,YAAY,SAASwH,MAAA,CAAO,MAClCmC,aAAA,CAAc,gBAAgBnC,MAAA,IAC9BA,MAAA,CAAO,KACP;IAAA,CAAG,cAAcA,MAAA,CAAO,KAAKA,MAAA,CAAO;EAAA,IACpCmC,aAAA,GAAgBnC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAEvC6C,SAAA,EAAY/E,MAAA,IACVA,MAAA,CAAO,MAAM,SACT;IAAE+E,SAAA,EAAW;EAAA,IACb;IACE,oBAAoB;IACpB,oBAAoB;IACpB,eAAe;IACf,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChBA,SAAA,EAAWA,SAAA,CAAU/E,MAAA,CAAO,MAAM;EAAA;EAK1CuL,MAAA,EAAQA,CAACvL,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MAChB,CAAAT,CAAA,GAAIS,MAAA,CAAM,UAAUvC,MAAA,MAAY;IAC/B,eAAe8B,CAAA;IACfiD,SAAA,EAAW,CAAC,UAAUjD,CAAA,KAAMiD,SAAA;EAAA;EAGhCyG,KAAA,EAAOvG,mBAAA;EACPwG,SAAA,EAAWxG,mBAAA;EACXyG,IAAA,EAAMzG,mBAAA;EAON0G,GAAA,EAAKA,CAAC3L,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACpB,CAAAJ,CAAA,GAAK;IAAEV,CAAA,EAAG;IAAUC,CAAA,EAAG;EAAA,EAA+CrB,MAAA,CAAO,OAC1E;IAAA,CAAG8B,CAAA,GAAI,QAAQhI,OAAA,CAAQwI,KAAA,CAAM,OAAOpJ,IAAA,CAAK8G,MAAA;EAAA,IACzCoC,aAAA,CAAc,OAAOpC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAK5C0J,MAAA,EAAQA,CAAC5L,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACvB,CAAAJ,CAAA,GAAIhI,OAAA,CAAQwI,KAAA,CAAM,UAAUtC,MAAA,EAAQ,OACjC;IAAE4L,MAAA,EAAQ9J;EAAA,IACVM,aAAA,CAAc,eAAepC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAIpD2J,OAAA,EAASA,CAAC7L,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MACjB,CAAAT,CAAA,GAAIS,MAAA,CAAM,WAAWvC,MAAA,MAAY;IAChC6L,OAAA,EAAS/J,CAAA,CAAE;IACXgK,aAAA,EAAehK,CAAA,CAAE;EAAA;EAGrB,gBAAgB;IACdiK,SAAA,EAAW;IACXC,YAAA,EAAc;EAAA;EAEhB,eAAe;IAAEA,YAAA,EAAc;EAAA;EAC/B,aAAa;IAAED,SAAA,EAAW;EAAA;EAE1BE,KAAKjM,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,GAASL,EAAA,EAAI;IAC1B,QAAQlC,MAAA,CAAO;MAAA,KACR;MAAA,KACA;MAAA,KACA;MAAA,KACA;QACH,OAAO;UAAEkM,SAAA,EAAWlM,MAAA,CAAO;QAAA;MAAA,KACxB;MAAA,KACA;MAAA,KACA;QACH,OAAO8C,aAAA,CAAc,IAAIhB,CAAA,EAAG9B,MAAA,CAAO;MAAA,KAChC;QACH,OAAOmD,eAAA,CAAgBnD,MAAA,EAAQuC,MAAA,EAAOL,EAAA;IAAA;IAG1C,MAAMiK,QAAA,GAAW5J,MAAA,CAAM,YAAYvC,MAAA,EAAQ;IAE3C,IAAImM,QAAA,EAAU;MACZ,OAAO,OAAOA,QAAA,IAAY,WACtB;QAAEA;MAAA,IACF;QACEA,QAAA,EAAUA,QAAA,CAAS;QAAA,IACf,OAAOA,QAAA,CAAS,MAAM,WAAW;UAAEC,UAAA,EAAYD,QAAA,CAAS;QAAA,IAAOA,QAAA,CAAS;MAAA;IAAA;IAIpF,OAAOrI,mBAAA,CAAoB,SAAS,QAAQvB,MAAA,CAAM,aAAavC,MAAA;EAAA;EAIjEqM,GAAGrM,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,GAASL,EAAA,EAAI;IACxB,QAAQlC,MAAA,CAAO;MAAA,KACR;MAAA,KACA;MAAA,KACA;QACH,OAAOmC,aAAA,CAAc,wBAAwB,KAAKnC,MAAA;MAAA,KAE/C;MAAA,KACA;MAAA,KACA;MAAA,KACA;MAAA,KACA;QACH,OAAOmC,aAAA,CAAc,sBAAsB,KAAKnC,MAAA;MAAA,KAE7C;QACH,OAAOA,MAAA,CAAO,MAAM,YAAYmC,aAAA,CAAc,oBAAoBnC,MAAA;MAAA,KAE/D;QACH,OAAOxH,QAAA,CAAS,MAAMwH,MAAA,CAAO,MACzBmC,aAAA,CAAc,oBAAoBnC,MAAA,IAClC;UAAEsM,gBAAA,EAAkBtM,MAAA,CAAO,MAAMA,MAAA,CAAO;QAAA;MAAA,KAEzC;QACH,OAAOmD,eAAA,CAAgBnD,MAAA,EAAQuC,MAAA,EAAOL,EAAA,EAAI;MAAA,KAEvC;MAAA,KACA;QACH,OACElC,MAAA,CAAO,MAAM;UAAA,CACV,gBAAgBA,MAAA,CAAO,KAAKA,MAAA,CAAO,MAAMA,MAAA,CAAO,MAAM,SAAS,KAAK;QAAA;MAAA,KAItE;QACH,OAAOmC,aAAA,CAAc,yBAAyBjJ,IAAA,CAAK8G,MAAA;MAAA,KAIhD;QACH,IAAIA,MAAA,CAAO,MAAM,SAAS8B,CAAA,GAAIX,WAAA,CAAYnB,MAAA,CAAO,MAAM;UACrD,OAAO;YACLuM,eAAA,EAAiB,sBAAsB3T,IAAA,CAAKkJ,CAAA,EAAG;UAAA;QAAA;IAAA;IAKvD,OAAQ,CAAAA,CAAA,GAAIS,MAAA,CAAM,sBAAsBvC,MAAA,EAAQ,OAC5C;MAAEwM,kBAAA,EAAoB1K;IAAA,IACrB,CAAAA,CAAA,GAAIS,MAAA,CAAM,kBAAkBvC,MAAA,EAAQ,OACrC;MAAEyM,cAAA,EAAgB3K;IAAA,IACjB,CAAAA,CAAA,GAAIS,MAAA,CAAM,mBAAmBvC,MAAA,EAAQ,OACtC;MAAEuM,eAAA,EAAiBzK;IAAA,IACnBgC,mBAAA,CAAoB,mBAAmB,MAAMvB,MAAA,CAAM,mBAAmBvC,MAAA;EAAA;EAI5E0M,IAAA,EAAMA,CAAC1M,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MACd,CAAAT,CAAA,GAAIS,MAAA,CAAM,sBAAsBvC,MAAA,MAAY;IAC3C,sBAAsB8B,CAAA;IACtB,uBAAuB,gDAAgDkC,aAAA,CACrElC,CAAA;EAAA;EAKN6K,GAAA,EAAKA,CAAC3M,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MACb,CAAAT,CAAA,GAAIS,MAAA,CAAM,sBAAsBvC,MAAA,MAAY;IAC3C,uBAAuB,2BAA2B8B,CAAA,yBAA0BkC,aAAA,CAC1ElC,CAAA;EAAA;EAKN8K,EAAA,EAAIA,CAAC5M,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MACZ,CAAAT,CAAA,GAAIS,MAAA,CAAM,sBAAsBvC,MAAA,MAAY;IAC3C,oBAAoB8B;EAAA;EAUxBuC,MAAA,EAAQE,WAAA;EAIRsI,MAAA,EAAQA,CAAC7M,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACvB,CAAAJ,CAAA,GACCmC,cAAA,CAAejE,MAAA,EAAQlG,OAAA,EAASoI,EAAA,EAAI,eAAe,UAAU,YAC7DmC,MAAA,CAAOrE,MAAA,EAAQlG,OAAA,EAASoI,EAAA,MAAQ;IAChC,mCAAmCJ;EAAA;EAGvCgL,KAAA,EAAOA,CAAC9M,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACtB,CAAAJ,CAAA,GAAImC,cAAA,CAAejE,MAAA,EAAQlG,OAAA,EAASoI,EAAA,EAAI,SAAS,cAAc;IAC9D,mCAAmCJ;EAAA;EAGvCiL,WAAA,EAAaA,CAAC/M,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,GAASL,EAAA,KAC9B,CAAAJ,CAAA,GACC9B,MAAA,CAAO,MAAM,YACTmD,eAAA,CAAgBnD,MAAA,EAAQuC,MAAA,EAAOL,EAAA,IAC/B4B,mBAAA,CACE,SACA,eACAvB,MAAA,CAAM,oBAAoBvC,MAAA,OACtB;IACV,kBAAkB8B;EAAA;EAMtBkL,MAAA,EAAQA,CAAChN,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MAChB,CAAAT,CAAA,GAAIS,MAAA,CAAM,aAAavC,MAAA,MAAY;IAClC,WAAW;MACT,KAAK;QACH,eAAe;MAAA;IAAA;IAGnB,eAAe8B,CAAA,IAAK,SAAS,oBAAoBA,CAAA;IAEjDmL,SAAA,EAAW,CACTnL,CAAA,EACA;EAAA;EAINoL,OAAA,EAASA,CAAClN,MAAA,EAAQ;IAAEsC,KAAA,EAAAC,MAAA;IAAOsD;EAAA,MAAU;IACnC,IAAKrI,CAAA,GAAI+E,MAAA,CAAM,aAAavC,MAAA,GAAU;MAEpC,MAAMnH,KAAA,GAAQ2E,CAAA,CAAE8D,KAAA,CAAM;MAItB,IAAK,CAAAQ,CAAA,GAAIS,MAAA,CAAM,aAAa1J,KAAA,CAAM,IAAKkJ,EAAA,GAAK,SAAUA,EAAA,EAAI;QAExD,OACG,CAAAvE,CAAA,GAAIqI,GAAA,CAAIhN,KAAA,CAAM,QAAQ;UACrBsU,SAAA,EAAW3P,CAAA,GAAI,MAAM5E,IAAA,CAAKM,IAAA,CAAKL,KAAA,GAAQ;UAAA,CACtC,gBAAgB2E,CAAA,GAAIsE;QAAA;MAAA;MAK3B,OAAO;QAAEqL,SAAA,EAAW3P;MAAA;IAAA;EAAA;EAoBxB4P,KAAKpN,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,GAASL,EAAA,EAAI;IAC1B,QAAQlC,MAAA,CAAO;MAAA,KACR;QACH,OAAO;UAAE,mBAAmB;QAAA;MAAA,KAEzB;QACH,OAAOmD,eAAA,CAAgBnD,MAAA,EAAQuC,MAAA,EAAOL,EAAA;MAAA,KAEnC;QAEH,OAAQ,CAAAJ,CAAA,GAAIS,MAAA,CAAM,mBAAmBrJ,IAAA,CAAK8G,MAAA,GAAS,OAC/C;UACE,0BAA0B8B;QAAA,IAE5B;UACE,0BAA0BS,MAAA,CAAM,mBAAmBrJ,IAAA,CAAK8G,MAAA;QAAA;IAAA;IAKlE,OAAQ,CAAA8B,CAAA,GAAIS,MAAA,CAAM,aAAavC,MAAA,EAAQ,OACnC;MAEE,2BAA2B;MAC3B,oBAAoB,mCAAmC8B,CAAA;MACvDmL,SAAA,EAAW;MAEX,WAAW;QACT,KAAK;UACH,mBAAmB;UACnB,0BAA0B1K,MAAA,CAAM,mBAAmB,IAAI;UACvD,0BAA0BA,MAAA,CAAM,mBAAmB,IAAI;UACvD,mBAAmBkB,MAAA,CACjBlB,MAAA,CAAM,aAAa,IAAI,YACvB,gBACAA,MAAA,CAAM,eAAe,IAAI;UAE3B,2BAA2B;UAC3B,oBAAoB;QAAA;MAAA;IAAA,IAI1B;MAEE,qBAAqB;MACrB,mBAAmBkB,MAAA,CAAOlB,MAAA,CAAM,aAAavC,MAAA,GAAmB;IAAA;EAAA;EAIxEqN,MAAA,EAAQA,CAACrN,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACxB1J,QAAA,CAAS,CAAC,WAAW,SAAS,QAAQ,QAAQ,eAAeI,IAAA,CAAKoH,MAAA,KAC9D;IAAEsN,SAAA,EAAW1U,IAAA,CAAKoH,MAAA;EAAA,IAClBwC,qBAAA,CAAsB,kBAAkB,KAAKxC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAEpEqL,IAAA,EAAMA,CAACvN,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACtBtJ,IAAA,CAAKoH,MAAA,KAAW,SACZ4C,OAAA,CAAQ5C,MAAA,EAAQlG,OAAA,EAASoI,EAAA,IACzB1J,QAAA,CAAS,CAAC,UAAU,YAAYI,IAAA,CAAKoH,MAAA,KACrC;IAAEwN,iBAAA,EAAmBxN,MAAA,CAAO;EAAA,IAC5BwC,qBAAA,CAAsB,iBAAiBxC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAY9DuL,OAAA,EAASA,CAACzN,MAAA,EAAQlG,OAAA,EAASoI,EAAA,KACzBxB,OAAA,CACE5G,OAAA,CAAQwI,KAAA,CAAM,gBAAgBpJ,IAAA,CAAK8G,MAAA,GAAS,KAC5CA,MAAA,CAAO,IACP,UACA,aACGoC,aAAA,CAAc,gBAAgBpC,MAAA,EAAQlG,OAAA,EAASoI,EAAA;EAEtD,mBAAmB;IAAEwL,kBAAA,EAAoB;EAAA;EAEzCC,UAAA,EAAYA,CAAC3N,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,OAAa;IAClCmL,kBAAA,EAAoBnL,MAAA,CAAM,sBAAsBvC,MAAA;IAChD4N,wBAAA,EAA0BrL,MAAA,CAAM,4BAA4B;IAC5DsL,kBAAA,EAAoBtL,MAAA,CAAM,sBAAsB;EAAA;EAGlDuL,SAAA,EAAWA,CAAC9N,MAAA,EAAQ;IAAEsC,KAAA,EAAAC;EAAA,MAAY;IAChC,MAAM;MAAEwL,OAAA,GAAUxL,MAAA,CAAM;MAAYyL,MAAA;MAAQ7I,OAAA,EAAA8I;IAAA,IAAY1L,MAAA,CAAM;IAE9D,MAAM2L,UAAA,GAAc7S,MAAA,IACjB,CAAAyG,CAAA,GAAImM,QAAA,KAAY,OAAOA,QAAA,IAAW,WAAWA,QAAA,GAAUA,QAAA,CAAQ5S,MAAA,KAAW4S,QAAA,CAAQE,OAAA,KAC/E;MACEC,YAAA,EAActM,CAAA;MACduM,WAAA,EAAavM;IAAA,IAEf;IAEN,OAAOjH,MAAA,CAAOT,IAAA,CAAK2T,OAAA,EAASjT,MAAA,CAC1B,CAAC4J,MAAA,EAAOrJ,MAAA,KAAW;MACjB,IAAK,CAAAmC,CAAA,GAAIuQ,OAAA,CAAQ1S,MAAA,MAAY,OAAOmC,CAAA,IAAK,UAAU;QACjDkH,MAAA,CAAMtJ,eAAA,CAAgBoC,CAAA,KAAM;UAC1B,KAAK;YACH,aAAaA,CAAA;YAAA,GACV0Q,UAAA,CAAW7S,MAAA;UAAA;QAAA;MAAA;MAKpB,OAAOqJ,MAAA;IAAA,GAET;MACEiD,KAAA,EAAO;MAAA,IACHqG,MAAA,GAAS;QAAEM,WAAA,EAAa;QAAQC,UAAA,EAAY;MAAA,IAAW;MAAA,GACxDL,UAAA,CAAW;IAAA;EAAA;EAKpBlV,MAAA;EACAwV,IAAA,EAAMxV,MAAA;EACNyV,UAAA,EAAYzV,MAAA;EACZ0V,QAAA,EAAU1V,MAAA;EACV2V,SAAA,EAAW3V,MAAA;EACX,cAAcA,MAAA;EACd4V,MAAA,EAAQ5V,MAAA;EACR6V,QAAA,EAAU7V,MAAA;EACV8V,KAAA,EAAO9V,MAAA;EACP,eAAeA,MAAA;EACf+V,QAAA,EAAU/V;AAAA;;;AC5/BL,IAAMgW,eAAA,GAAmBzM,MAAA,KAAoC;EAIlE,SAAS;IAAE0M,OAAA,EAAS;EAAA;EAKpB,0EAA0E;IAAE7J,MAAA,EAAQ;EAAA;EAEpF8J,MAAA,EAAQ;IAAEC,eAAA,EAAiB;IAAe5C,eAAA,EAAiB;EAAA;EAK3D,yDAAyD;IAAE6C,gBAAA,EAAkB;EAAA;EAM7E,gBAAgB;IAAEvD,OAAA,EAAS,CAAC,cAAc;EAAA;EAK1C,yBAAyB;IAAE1G,OAAA,EAAS;EAAA;EAEpC,SAAS;IAAEkK,SAAA,EAAW;EAAA;EAStBC,IAAA,EAAM;IACJlD,UAAA,EAAY;IACZmD,oBAAA,EAAsB;IACtBtG,UAAA,EAAY1G,MAAA,CAAM,mBAAmB;EAAA;EAQvCiN,IAAA,EAAM;IAAEvG,UAAA,EAAY;IAAWmD,UAAA,EAAY;EAAA;EA2B3C,sBAAsB;IACpBpE,SAAA,EAAW;IACX3D,MAAA,EAAQ,WAAW9B,MAAA,CAAM,uBAAuB;EAAA;EAQlDkN,EAAA,EAAI;IAAE7H,MAAA,EAAQ;IAAKlE,KAAA,EAAO;IAAWgM,cAAA,EAAgB;EAAA;EAWrDC,GAAA,EAAK;IAAEC,WAAA,EAAa;EAAA;EAEpBC,QAAA,EAAU;IAAE/H,MAAA,EAAQ;EAAA;EAEpB,4CAA4C;IAC1CkC,OAAA,EAAS;IACTtG,KAAA,EAAOnB,MAAA,CAAM,4BAA4BA,MAAA,CAAM,mBAAmB;EAAA;EAGpE,0BAA0B;IAAE2F,MAAA,EAAQ;EAAA;EAMpC/B,KAAA,EAAO;IAAE2J,UAAA,EAAY;IAAKC,WAAA,EAAa;IAAWC,cAAA,EAAgB;EAAA;EAElE,qBAAqB;IAAE7D,QAAA,EAAU;IAAW8D,UAAA,EAAY;EAAA;EAMxDC,CAAA,EAAG;IAAExM,KAAA,EAAO;IAAWX,cAAA,EAAgB;EAAA;EAWvC,yCAAyC;IACvCkG,UAAA,EAAY;IACZkD,QAAA,EAAU;IACV/G,MAAA,EAAQ;IACRD,OAAA,EAAS;IACTiH,UAAA,EAAY;IACZ1I,KAAA,EAAO;EAAA;EAOT,iBAAiB;IAAEZ,aAAA,EAAe;EAAA;EAKlC,sBAAsB;IAAE8M,WAAA,EAAa;IAAQzK,OAAA,EAAS;EAAA;EAKtD,mBAAmB;IAAE0G,OAAA,EAAS;EAAA;EAM9B,oBAAoB;IAAEoB,SAAA,EAAW;EAAA;EAKjCkD,QAAA,EAAU;IAAEC,aAAA,EAAe;EAAA;EAK3B,2DAA2D;IAAExI,MAAA,EAAQ;EAAA;EAMrE,mBAAmB;IAAEwH,gBAAA,EAAkB;IAAatD,aAAA,EAAe;EAAA;EAKnE,+BAA+B;IAAEsD,gBAAA,EAAkB;EAAA;EAMnD,gCAAgC;IAAEA,gBAAA,EAAkB;IAAUpG,IAAA,EAAM;EAAA;EAKpEqH,OAAA,EAAS;IAAEzN,OAAA,EAAS;EAAA;EAKpB,eAAe;IAAEG,cAAA,EAAgB;EAAA;EAKjC,YAAY;IAAEkN,UAAA,EAAY;EAAA;EAS1B,qBAAqB;IACnBhH,UAAA,EAAY1G,MAAA,CAAM,cAAc,QAAQ;IACxC4J,QAAA,EAAU;EAAA;EAMZ,WAAW;IAAEA,QAAA,EAAU;IAAOC,UAAA,EAAY;IAAKvJ,QAAA,EAAU;IAAYuN,aAAA,EAAe;EAAA;EAEpFE,GAAA,EAAK;IAAE5H,MAAA,EAAQ;EAAA;EAEf6H,GAAA,EAAK;IAAE/H,GAAA,EAAK;EAAA;EASZ,kDAAkD;IAAE5F,OAAA,EAAS;IAASwN,aAAA,EAAe;EAAA;EAQrF,aAAa;IAAEI,QAAA,EAAU;IAAQ5I,MAAA,EAAQ;EAAA;AAAA;;;AC7PpC,IAAM6I,YAAA,GAAuC;EAClDC,IAAA,EAAM;EACN1J,MAAA,EAAQ;EACR,iBAAiB;EACjB,eAAe;EACf2J,KAAA,EAAO;EACPC,IAAA,EAAM;EACNC,IAAA,EAAM;EACNC,GAAA,EAAK;EACLC,QAAA,EAAU;EACVC,QAAA,EAAU;EACVC,OAAA,EAAS;EACTC,QAAA,EAAU;AAAA;;;ACZL,IAAMC,gBAAA,GAAmB;AAQzB,IAAMC,eAAA,GAAmBC,KAAA,IAAqC;EAInE,IAAIlV,OAAA,GAAUmN,IAAA,CAAK6H,gBAAA;EAEnB,IAAI,CAAChV,OAAA,EAAS;IAEZA,OAAA,GAAUmV,QAAA,CAASC,IAAA,CAAKC,WAAA,CAAYF,QAAA,CAASG,aAAA,CAAc;IAE3DtV,OAAA,CAAQ+F,EAAA,GAAKiP,gBAAA;IACbE,KAAA,KAAUlV,OAAA,CAAQkV,KAAA,GAAQA,KAAA;IAG1BlV,OAAA,CAAQqV,WAAA,CAAYF,QAAA,CAASI,cAAA,CAAe;EAAA;EAG9C,OAAOvV,OAAA;AAAA;;;AChBF,IAAMwV,UAAA,GAAaA,CAAC;EACzBN,KAAA;EACA1W,MAAA,GAASyW,eAAA,CAAgBC,KAAA,EAAOO;AAAA,IACF,OAA6B;EAC3D,MAAMC,MAAA,GAASlX,MAAA,CAAOmX,QAAA,CAASjW,MAAA;EAE/B,OAAO;IACLlB,MAAA;IACAoX,MAAA,EAAQA,CAAClQ,IAAA,EAAMjG,KAAA,KAAUjB,MAAA,CAAOqX,UAAA,CAAWnQ,IAAA,EAAMgQ,MAAA,GAASjW,KAAA;EAAA;AAAA;AAOvD,IAAMqW,SAAA,GAAYA,CAAA,MAAoB;EAC3CtX,MAAA,EAAQ;EACRoX,MAAA,EAAQxY;AAAA;;;ACtBH,IAAM2Y,IAAA,GAAQC,MAAA,KAA6C;EAChEC,QAAQ/P,OAAA,EAAS9H,GAAA,GAAM,IAAI8X,QAAA,EAAUvY,OAAA,EAAS;IAC5C,IAAI,CAACuY,QAAA,EAAU;MAEb,KAAKF,MAAA,CAAO;QAAEjQ,EAAA,EAAI;QAAuB3H,GAAA,EAAK8H,OAAA,GAAU,MAAMzJ,IAAA,CAAK2B,GAAA;MAAA,GAAQT,OAAA;IAAA;EAAA;EAI/EqY,OAAO;IAAEjQ,EAAA;IAAA,GAAOoQ;EAAA,GAAQ;IACtB,OAAOH,MAAA,CAAO,IAAIjQ,EAAA,KAAOzC,IAAA,CAAKF,SAAA,CAAU+S,IAAA;EAAA;AAAA;AAIrC,IAAMC,IAAA,GAAqB,eAAAL,IAAA,CAAMM,OAAA,IAAYC,OAAA,CAAQF,IAAA,CAAKC,OAAA;AAE1D,IAAME,MAAA,GAAuB,eAAAR,IAAA,CAAMM,OAAA,IAAY;EACpD,MAAM,IAAIG,KAAA,CAAMH,OAAA;AAAA;AAGX,IAAMI,MAAA,GAAuB,eAAAV,IAAA,CAAK3Y,IAAA;;;ACrBzC,SAAAsZ,gBAAA,EAAAC,sBAAA,EAAAC,mBAAA;AAEO,IAAMC,QAAA,GAAqBA,CAACvS,SAAA,EAAkBhI,KAAA,EAAewa,SAAA,KAClE,GAAGxS,SAAA,IAAYhI,KAAA,GAAQwa,SAAA,GAAY,gBAAgB;AAE9C,IAAMC,UAAA,GAAuBA,CAClCzS,SAAA,EACAhI,KAAA,EACAwa,SAAA,KACW;EACX,IAAIE,OAAA,GAAU;EAGd,MAAMC,aAAA,GAAgBP,gBAAA,CAAiBpS,SAAA;EACvC,IAAI2S,aAAA,EAAeD,OAAA,IAAW,GAAGH,QAAA,CAASI,aAAA,EAAe3a,KAAA,EAAOwa,SAAA;EAGhE,IAAII,KAAA,GAAQP,sBAAA,CAAuBrS,SAAA;EACnC,IAAI4S,KAAA,GAAQ,GAAOF,OAAA,IAAW,WAAWH,QAAA,CAASvS,SAAA,EAAUhI,KAAA,EAAOwa,SAAA;EACnE,IAAII,KAAA,GAAQ,GAAOF,OAAA,IAAW,QAAQH,QAAA,CAASvS,SAAA,EAAUhI,KAAA,EAAOwa,SAAA;EAChE,IAAII,KAAA,GAAQ,GAAOF,OAAA,IAAW,OAAOH,QAAA,CAASvS,SAAA,EAAUhI,KAAA,EAAOwa,SAAA;EAI/DI,KAAA,GAAQN,mBAAA,CAAoBtS,SAAA,EAAUhI,KAAA;EACtC,IAAI4a,KAAA,GAAQ,GAAOF,OAAA,IAAW,GAAGH,QAAA,CAASvS,SAAA,EAAU,WAAWhI,KAAA,IAASwa,SAAA;EACxE,IAAII,KAAA,GAAQ,GAAOF,OAAA,IAAW,GAAGH,QAAA,CAASvS,SAAA,EAAU,QAAQhI,KAAA,IAASwa,SAAA;EACrE,IAAII,KAAA,GAAQ,GAAOF,OAAA,IAAW,GAAGH,QAAA,CAASvS,SAAA,EAAU,OAAOhI,KAAA,IAASwa,SAAA;EAIpEE,OAAA,IAAWH,QAAA,CAASvS,SAAA,EAAUhI,KAAA,EAAOwa,SAAA;EAErC,OAAOE,OAAA;AAAA;;;ACLT,IAAMG,MAAA,GAASA,CAACC,KAAA,EAAeC,GAAA,KAAwC;EACrE,MAAMC,MAAA,GAAiC;EAEvC,GAAG;IACD,SAASC,QAAA,GAAW,GAAGA,QAAA,GAAWH,KAAA,EAAOG,QAAA,IAAY;MAEnDD,MAAA,CAAO,GAAGC,QAAA,IAAYH,KAAA,MAAW9M,MAAA,CAAS,CAAAiN,QAAA,GAAWH,KAAA,GAAS,KAAKI,OAAA,CAAQ,MAAM;IAAA;EAAA,SAE5E,EAAEJ,KAAA,IAASC,GAAA;EAEpB,OAAOC,MAAA;AAAA;AAOT,IAAMG,WAAA,GAAcA,CAACC,IAAA,EAAcC,IAAA,EAAcP,KAAA,GAAQ,MAA8B;EACrF,MAAME,MAAA,GAAiC;EAEvC,OAAOF,KAAA,IAASM,IAAA,EAAMN,KAAA,GAAQA,KAAA,GAAQ,KAAK,GAAG;IAE5CE,MAAA,CAAOF,KAAA,IAASA,KAAA,GAAQO,IAAA;EAAA;EAG1B,OAAOL,MAAA;AAAA;AAWT,IAAMM,MAAA,GAASA,CACbF,IAAA,EACAC,IAAA,GAAO,IACPE,QAAA,GAAW,GACXT,KAAA,GAAQ,GACRU,IAAA,GAAO,GACPR,MAAA,GAAiC,OAEN;EAC3B,OAAOF,KAAA,IAASM,IAAA,EAAMN,KAAA,IAASU,IAAA,EAAM;IAEnCR,MAAA,CAAOF,KAAA,IAASA,KAAA,GAAQS,QAAA,GAAWF,IAAA;EAAA;EAGrC,OAAOL,MAAA;AAAA;AAGT,IAAMS,MAAA,GACJ7R,OAAA,IAC4DE,MAAA,IAAUA,MAAA,CAAMF,OAAA;AAE9E,IAAM8R,YAAA,GAAeA,CAACC,IAAA,EAAiC;EAAE9R,KAAA,EAAAC;AAAA,MAAqBA,MAAA,CAAM,GAAG6R,IAAA;AAEhF,IAAM9R,KAAA,GAASA,CAAA,GAAI8R,IAAA,KACxBzU,SAAA,CAAUwU,YAAA,EAAcC,IAAA;AAE1B,IAAMC,YAAA,GAA6C;EACjDtG,OAAA,EAAS;IACPuG,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJ,OAAO;EAAA;EAETC,MAAA,EAAQ;IACNC,WAAA,EAAa;IACbC,OAAA,EAAS;IAGTC,KAAA,EAAO;IAGPC,KAAA,EAAO;IAGPC,IAAA,EAAM;MACJ,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,GAAA,EAAK;MACH,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,MAAA,EAAQ;MACN,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,KAAA,EAAO;MACL,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,IAAA,EAAM;MACJ,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,MAAA,EAAQ;MACN,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,MAAA,EAAQ;MACN,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;IAIPC,IAAA,EAAM;MACJ,IAAI;MACJ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IAAA;EAAA;EAITC,OAAA,EAAS;IACPnL,EAAA,EAAI;IACJ,GAAG;IAAA,IACc,eAAA2J,MAAA,CAAO,GAAG,OAAO,GAAG,KAAK;IAAA,IASzB,eAAAA,MAAA,CAAO,IAAI,OAAO,GAAG;IAStC,IAAI;IAAA,IACa,eAAAA,MAAA,CAAO,IAAI,OAAO,GAAG,IAAI;IAc1C,IAAI;IACJ,IAAI;IACJ,IAAI;EAAA;EAGNyB,SAAA,EAAW;IACT,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAM;EAAA;EAGRrI,SAAA,EAAW;IACTsI,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,MAAA,EAAQ;EAAA;EAGVC,YAAA,EAA4B,eAAA5B,MAAA,CAAM;EAClC6B,kBAAA,EAAkC,eAAA7B,MAAA,CAAM;EACxC8B,gBAAA,EAAgC,eAAA9B,MAAA,CAAM;EACtC+B,iBAAA,EAAiC,eAAA/B,MAAA,CAAM;EACvCgC,iBAAA,EAAiC,eAAAhC,MAAA,CAAM;EACvCiC,cAAA,EAA8B,eAAAjC,MAAA,CAAM;EACpCkC,eAAA,EAA+B,eAAAlC,MAAA,CAAM;EACrCmC,gBAAA,EAAgC,eAAAnC,MAAA,CAAM;EACtCoC,aAAA,EAA6B,eAAApC,MAAA,CAAM;EAEnC/E,eAAA,EAA+B,eAAA+E,MAAA,CAAM;EACrC3H,eAAA,EAAiB;IACfkJ,IAAA,EAAM;EAAA;EAWRc,iBAAA,EAAiC,eAAArC,MAAA,CAAM;EAMvCzH,cAAA,EAAgB;IACd9F,IAAA,EAAM;IACN6P,KAAA,EAAO;IACPC,OAAA,EAAS;EAAA;EAEXjI,IAAA,EAAM;IACJ,GAAG;IACH8F,EAAA,EAAI;IACJnG,OAAA,EAAS;IACToG,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJ,OAAO;IACP,OAAO;EAAA;EAEThG,UAAA,EAAY;IAAA,IACO,eAAAsF,MAAA,CAAO,KAAK,IAAI,KAAK,GAAG;IAAA,IAMxB,eAAAA,MAAA,CAAO,KAAK,IAAI,KAAK,IAAI;IAM1C,IAAI;IACJ,KAAK;EAAA;EAEPhE,WAAA,EAAcxN,MAAA,KAAW;IAAA,GACpBA,MAAA,CAAM;IACT4L,OAAA,EAAS5L,MAAA,CAAM,mBAAmB;EAAA;EAEpCmU,aAAA,EAA6B,eAAAxC,MAAA,CAAM;EACnCyC,YAAA,EAAc;IACZlB,IAAA,EAAM;IACNnB,EAAA,EAAI;IACJnG,OAAA,EAAS;IACToG,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJ,OAAO;IACP,OAAO;IACP,OAAO;IACPmC,IAAA,EAAM;EAAA;EAERtS,WAAA,EAAa;IACX6J,OAAA,EAAS;IAAA,IACQ,eAAAyF,WAAA,CAAY,GAAG;EAAA;EAMlC3G,SAAA,EAAW;IACTqH,EAAA,EAAI;IACJnG,OAAA,EAAS;IACToG,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJ,OAAO;IACPoC,KAAA,EAAO;IACPpB,IAAA,EAAM;EAAA;EAMR/G,QAAA,EAAU;IAAA,IACS,eAAAqF,MAAA,CAAO,KAAK,IAAI,KAAK,GAAG;IAKzC,IAAI;IACJ,KAAK;EAAA;EAEP+C,WAAA,EAA2B,eAAA5C,MAAA,CAAM;EACjC6C,aAAA,EAA6B,eAAA7C,MAAA,CAAM;EACnC8C,WAAA,EAA2B,eAAA9C,MAAA,CAAM;EACjC+C,UAAA,EAAY;IACV3C,EAAA,EAAI;IACJnG,OAAA,EAAS,CAAC,6BAA6B;IACvCoG,EAAA,EAAI,CAAC,8BAA8B;IACnCC,EAAA,EAAI,CAAC,+BAA+B;IACpCC,EAAA,EAAI,CAAC,gCAAgC;IACrC,OAAO;IACPgB,IAAA,EAAM;EAAA;EAERzK,IAAA,EAAM;IAAE4J,OAAA,EAAS;EAAA;EACjBjG,SAAA,EAAW;IACT,GAAG;IACHR,OAAA,EAAS;EAAA;EAEX+I,SAAA,EAAW;IACT,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;EAAA;EAEPtI,MAAA,EAAQ;IACN,GAAG;IACHT,OAAA,EAAS;EAAA;EAEX9H,IAAA,EAAM;IACJ,GAAG;IACHM,IAAA,EAAM;IACNwQ,OAAA,EAAS;IACT1B,IAAA,EAAM;EAAA;EAQRxM,UAAA,EAAY;IACVmO,IAAA,EAAM,qMAAqM9V,KAAA,CACzM;IAEF+V,KAAA,EAAO,yDAAyD/V,KAAA,CAAM;IACtEgW,IAAA,EAAM,8FAA8FhW,KAAA,CAClG;EAAA;EAGJ6K,QAAA,EAAU;IACRoL,EAAA,EAAI,CAAC,WAAW;IAChBjD,EAAA,EAAI,CAAC,YAAY;IACjBkD,IAAA,EAAM,CAAC,QAAQ;IACfhD,EAAA,EAAI,CAAC,YAAY;IACjBC,EAAA,EAAI,CAAC,WAAW;IAChB,OAAO,CAAC,UAAU;IAClB,OAAO,CAAC,YAAY;IACpB,OAAO,CAAC,WAAW;IACnB,OAAO,CAAC,QAAQ;IAChB,OAAO,CAAC,WAAW;IACnB,OAAO,CAAC,UAAU;IAClB,OAAO,CAAC,QAAQ;IAChB,OAAO,CAAC,QAAQ;EAAA;EAElBxE,UAAA,EAAY;IACVwH,IAAA,EAAM;IACNC,UAAA,EAAY;IACZC,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,QAAA,EAAU;IACVC,IAAA,EAAM;IACNC,SAAA,EAAW;IACXnD,KAAA,EAAO;EAAA;EAEToD,mBAAA,EAAqB;EAIrBC,gBAAA,EAAkB;EAIlBC,eAAA,EAAiB;IAEf5c,GAAA,EAAK;IACLtB,GAAA,EAAK;IACLme,EAAA,EAAI;EAAA;EAENC,YAAA,EAAc;IAEZ9c,GAAA,EAAK;IACLtB,GAAA,EAAK;IACLme,EAAA,EAAI;EAAA;EAcNE,UAAA,EAAY;IAEV3R,IAAA,EAAM;IACN,aAAa;EAAA;EAEf4R,OAAA,EAAS;IAEP5R,IAAA,EAAM;IACN,aAAa;EAAA;EAEfgF,GAAA,EAAmB,eAAAuI,MAAA,CAAM;EACzBsE,kBAAA,EAAkC,eAAAtE,MAAA,CAAM;EACxCtM,MAAA,EAASrF,MAAA,KAAW;IAClBoE,IAAA,EAAM;IAAA,GACHpE,MAAA,CAAM;IAAA,GACN+Q,MAAA,CAAO,GAAG;IAgBbsD,IAAA,EAAM;IACNvb,MAAA,EAAQ;EAAA;EAEV6H,KAAA,EAAQX,MAAA,KAAW;IACjBoE,IAAA,EAAM;IAAA,GACHpE,MAAA,CAAM;IAAA,GACN+Q,MAAA,CAAO,GAAG;IAObsD,IAAA,EAAM;EAAA;EAER6B,SAAA,EAAW;IACT/C,IAAA,EAAM;MACJhJ,IAAA,EAAM;QACJ3H,SAAA,EAAW;MAAA;MAEb6H,EAAA,EAAI;QACF7H,SAAA,EAAW;MAAA;IAAA;IAGf4Q,IAAA,EAAM;MACJ,MAAM;QACJ5Q,SAAA,EAAW;QACXiF,OAAA,EAAS;MAAA;MAEX,YAAY;QACVjF,SAAA,EAAW;QACXiF,OAAA,EAAS;MAAA;IAAA;IAGb4L,KAAA,EAAO;MACL,WAAW;QACT5L,OAAA,EAAS;MAAA;MAEX,OAAO;QACLA,OAAA,EAAS;MAAA;IAAA;IAGb6L,MAAA,EAAQ;MACN,YAAY;QACV9Q,SAAA,EAAW;QACX2T,uBAAA,EAAyB;MAAA;MAE3B,OAAO;QACL3T,SAAA,EAAW;QACX2T,uBAAA,EAAyB;MAAA;IAAA;EAAA;EAI/BC,aAAA,EAAe;IACbC,OAAA,EAAS;IACTC,KAAA,EAAO;IACPjB,MAAA,EAAQ;IACRkB,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,MAAA,EAAQ;EAAA;EAEV5M,UAAA,EAAY;IACVqJ,IAAA,EAAM;IACNoD,KAAA,EAAO;IACPI,IAAA,EAAM;IACNrB,MAAA,EAAQ;IACRsB,OAAA,EAAS;IACTC,KAAA,EAAO;IAAA,IACU,eAAApF,MAAA,CAAO,IAAI,OAAO,GAAG;EAAA;EAaxC3O,MAAA,EAAS7C,MAAA,KAAW;IAClBoE,IAAA,EAAM;IAAA,GACHpE,MAAA,CAAM;EAAA;EAEX6W,SAAA,EAAY7W,MAAA,KAAW;IAAA,GAClBA,MAAA,CAAM;IACTqU,IAAA,EAAM;IACNvb,MAAA,EAAQ;EAAA;EAEVmV,QAAA,EAAUA,CAACjO,MAAA,EAAO;IAAE8W;EAAA,OAAmB;IACrC5D,IAAA,EAAM;IACN,GAAG;IACH8B,EAAA,EAAI;IACJjD,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJC,EAAA,EAAI;IACJ,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACPmC,IAAA,EAAM;IACNrb,GAAA,EAAK;IACLtB,GAAA,EAAK;IACLqf,KAAA,EAAO;IAAA,GACJD,WAAA,CAAY9W,MAAA,CAAM;EAAA;EAEvBgX,SAAA,EAAW;IACT,GAAG;IACH3C,IAAA,EAAM;IACNvb,MAAA,EAAQ;EAAA;EAEVme,QAAA,EAAU;IACR,GAAG;IACH5C,IAAA,EAAM;IACNrb,GAAA,EAAK;IACLtB,GAAA,EAAK;EAAA;EAKP+P,OAAA,EAAS;IAAA,IACU,eAAA+J,MAAA,CAAO,KAAK,IAAI,KAAK,GAAG;IAWzC,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;EAAA;EAEN9I,KAAA,EAAO;IACL0F,KAAA,EAAO;IACPC,IAAA,EAAM;IACN6E,IAAA,EAAM;IAAA,IACW,eAAA1B,MAAA,CAAO,IAAI,IAAI,GAAG;EAAA;EAcrClI,OAAA,EAAS;IACP4J,IAAA,EAAM,CAAC,yBAAyB;IAChCX,KAAA,EAAO,CAAC,oBAAoB;IAC5BD,KAAA,EAAO,CAAC,oBAAoB;EAAA;EAE9B1P,OAAA,EAAuB,eAAA+O,MAAA,CAAM;EAC7BuF,gBAAA,EAAgC,eAAAvF,MAAA,CAAM;EACtCwF,kBAAA,EAAkC,eAAAxF,MAAA,CAAM;EACxCyF,SAAA,EAAYpX,MAAA,KAAW;IACrB4L,OAAA,EAAS5L,MAAA,CAAM,mBAAmB;IAAA,GAC/BA,MAAA,CAAM;EAAA;EAEXqX,eAAA,EAA+B,eAAA1F,MAAA,CAAM;EACrC2F,eAAA,EAA+B,eAAAjG,WAAA,CAAY,GAAG;EAM9CkG,WAAA,EAAcvX,MAAA,KAAW;IACvB4L,OAAA,EAAS;IAAA,GACN5L,MAAA,CAAM;EAAA;EAEXwX,SAAA,EAAW;IACT5L,OAAA,EAAS;IAAA,IACQ,eAAAyF,WAAA,CAAY,GAAG;EAAA;EAOlCrI,MAAA,EAAQ;IAAA,IACW,eAAAqI,WAAA,CAAY,GAAG;IAAA,IAIf,eAAAA,WAAA,CAAY,IAAI,OAAO;IAAA,IAIvB,eAAAA,WAAA,CAAY,KAAK,OAAO;EAAA;EAK3C/E,QAAA,EAAwB,eAAAkF,MAAA,CAAO,KAAK,IAAI,KAAK,GAAG;EAMhDvI,KAAA,EAAO;IAAA,IACY,eAAAuI,MAAA,CAAO,KAAK,IAAI,KAAK,GAAG;IAAA,IAIxB,eAAAA,MAAA,CAAO,KAAK,IAAI,KAAK,IAAI;IAM1C,IAAI;IACJ,KAAK;EAAA;EAEPjF,KAAA,EAAO;IACL,GAAG;IACHX,OAAA,EAAS;EAAA;EAEXzC,IAAA,EAAM;IAAA,IACa,eAAAkI,WAAA,CAAY,GAAG;IAAA,IAIf,eAAAA,WAAA,CAAY,IAAI,OAAO;EAAA;EAK1C9G,KAAA,EAAqB,eAAAoH,MAAA,CAAM;EAC3BtI,MAAA,EAAQ;IACNgJ,OAAA,EAAS;EAAA;EAEXoF,WAAA,EAA2B,eAAAjG,MAAA,CAAO;EAIlCkG,SAAA,EAAyB,eAAA/F,MAAA,CAAM;EAC/BgG,WAAA,EAA2B,eAAAhG,MAAA,CAAM;EAMjCrG,kBAAA,EAAqBtL,MAAA,KAAW;IAC9B4L,OAAA,EAAS;IAAA,GACN5L,MAAA,CAAM;EAAA;EAEX4X,eAAA,EAA+B,eAAAjG,MAAA,CAAM;EACrCxG,kBAAA,EAAoB;IAClB+H,IAAA,EAAM;IACN2E,GAAA,EAAK;IACLjM,OAAA,EACE;IACFuG,MAAA,EAAQ;IACR1K,OAAA,EAAS;IACTgD,MAAA,EAAQ;IACRjI,SAAA,EAAW;EAAA;EAEb6I,wBAAA,EAA0B;IACxBO,OAAA,EAAS;IACT4F,MAAA,EAAQ;IACRsG,EAAA,EAAI;IACJC,GAAA,EAAK;IACL,UAAU;EAAA;EAEZ7O,SAAA,EAAYlJ,MAAA,KAAW;IAAA,GAClBA,MAAA,CAAM;IAAA,GACN+Q,MAAA,CAAO,GAAG;IAObsD,IAAA,EAAM;EAAA;EAERjP,KAAA,EAAQpF,MAAA,KAAW;IACjBoE,IAAA,EAAM;IAAA,GACHpE,MAAA,CAAM;IAAA,GACN+Q,MAAA,CAAO,GAAG;IAAA,GAiBVA,MAAA,CAAO,IAAI;IAadjY,MAAA,EAAQ;IACRub,IAAA,EAAM;IACNrb,GAAA,EAAK;IACLtB,GAAA,EAAK;EAAA;EAEPsgB,MAAA,EAAQ;IACN5T,IAAA,EAAM;IAAA,IACW,eAAAoN,MAAA,CAAO,IAAI,IAAI,GAAG,GAAG;EAAA;AAAA;AAW1C,IAAMyG,mBAAA,GAAsBA,CAC1B9F,MAAA,EACA/Z,MAAA,GAAqC,IACrCgD,MAAA,GAAmB,OACY;EAC/B9C,MAAA,CAAOT,IAAA,CAAKsa,MAAA,EAAQrW,OAAA,CAASoC,SAAA,IAAa;IACxC,MAAMhI,KAAA,GAAQic,MAAA,CAAOjU,SAAA;IAErB,IAAIA,SAAA,IAAY,WAAW;MACzB9F,MAAA,CAAO/B,IAAA,CAAK+E,MAAA,KAAWlF,KAAA;MACvBkC,MAAA,CAAO/B,IAAA,CAAK+E,MAAA,EAAQ,QAAQlF,KAAA;IAAA;IAG9B,MAAM8B,GAAA,GAAM,CAAC,GAAGoD,MAAA,EAAQ8C,SAAA;IACxB9F,MAAA,CAAO/B,IAAA,CAAK2B,GAAA,KAAQ9B,KAAA;IACpBkC,MAAA,CAAO/B,IAAA,CAAK2B,GAAA,EAAK,QAAQ9B,KAAA;IAEzB,IAAIA,KAAA,IAAS,OAAOA,KAAA,IAAS,UAAU;MACrC+hB,mBAAA,CAAoB/hB,KAAA,EAAOkC,MAAA,EAAQJ,GAAA;IAAA;EAAA,GAEpCI,MAAA;EAEH,OAAOA,MAAA;AAAA;AAGT,IAAM8f,cAAA,GAA8C;EAWlDC,QAAA,EAAUA,CAAA,MAAO;EAEjBrB,WAAA,EAActL,OAAA,IACZlT,MAAA,CAAOT,IAAA,CAAK2T,OAAA,EACT/U,MAAA,CAAQuB,GAAA,IAAQ,OAAOwT,OAAA,CAAQxT,GAAA,KAAQ,UACvCO,MAAA,CAAO,CAACH,MAAA,EAAQJ,GAAA,KAAQ;IACvBI,MAAA,CAAO,YAAYJ,GAAA,IAAOwT,OAAA,CAAQxT,GAAA;IAElC,OAAOI,MAAA;EAAA,GACN;AAAA;AAGT,IAAMggB,qBAAA,GAAwBA,CAACtY,OAAA,EAAsB9H,GAAA,KAClD,CAAAA,GAAA,GAAOA,GAAA,CAAI,MAAM,OAAOA,GAAA,CAAIlB,KAAA,CAAM,OAAO,OAAOkB,GAAA,CAAIlB,KAAA,CAAM,GAAG,QAC9Db,QAAA,CAAS6J,OAAA,EAAS,WAAW,6BAA6BuY,IAAA,CAAKrgB,GAAA,MAC9D/B,QAAA,CAAS+B,GAAA,EAAK,WACXA,GAAA,CAAIZ,OAAA,CAAQ,qEAAqE,YACjFY,GAAA;AAEC,IAAMsgB,iBAAA,GAAqBC,MAAA,IAA+C;EAC/E,MAAMjb,KAAA,GAAQ,IAAIC,GAAA;EAElB,MAAMyC,MAAA,GAAQ;IAAA,GAAK8R,YAAA;IAAA,GAAiByG;EAAA;EAEpC,MAAMC,KAAA,GAAQA,CACZC,MAAA,EACA3Y,OAAA,KACwC;IACxC,MAAMmV,IAAA,GAAOwD,MAAA,IAASA,MAAA,CAAM3Y,OAAA;IAE5B,MAAM5J,KAAA,GAAQ,OAAO+e,IAAA,IAAQ,aAAaA,IAAA,CAAKnX,OAAA,EAASoa,cAAA,IAAkBjD,IAAA;IAE1E,OAAO/e,KAAA,IAAS4J,OAAA,IAAW,WACvBmY,mBAAA,CAAoB/hB,KAAA,IACnBA,KAAA;EAAA;EAGP,MAAM4H,OAAA,GAAWA,CAACgC,OAAA,EAAsB9H,GAAA,EAAc0gB,YAAA,KAAmC;IACvF,MAAMC,OAAA,GAAU7Y,OAAA,CAAQf,KAAA,CAAM;IAC9Be,OAAA,GAAU6Y,OAAA,CAAQ;IAGlB,IAAIA,OAAA,CAAQrf,MAAA,GAAS,GAAG;MACtBof,YAAA,GAAe1gB,GAAA;MACfA,GAAA,GAAM3B,IAAA,CAAKM,IAAA,CAAKgiB,OAAA,GAAU;IAAA;IAI5B,IAAI1D,IAAA,GAAO3X,KAAA,CAAMlB,GAAA,CAAI0D,OAAA;IAErB,IAAI,CAACmV,IAAA,EAAM;MAET3X,KAAA,CAAMZ,GAAA,CAAIoD,OAAA,EAAUmV,IAAA,GAAO;QAAA,GAAKuD,KAAA,CAAMxY,MAAA,EAAOF,OAAA;MAAA;MAE7CxH,MAAA,CAAOsgB,MAAA,CAAO3D,IAAA,EAAMuD,KAAA,CAAMxY,MAAA,CAAM6Y,MAAA,EAAQ/Y,OAAA;IAAA;IAG1C,IAAI9H,GAAA,IAAO,MAAM;MACfA,GAAA,GAAO,CAAAC,KAAA,CAAMC,OAAA,CAAQF,GAAA,IAAO3B,IAAA,CAAK2B,GAAA,IAAQA,GAAA,KAAmB;MAE5D,MAAM9B,KAAA,GAAiBkiB,qBAAA,CAAsBtY,OAAA,EAAS9H,GAAA,KAAkBid,IAAA,CAAKjd,GAAA;MAE7E,OAAO9B,KAAA,IAAS,OACZwiB,YAAA,GACAzgB,KAAA,CAAMC,OAAA,CAAQhC,KAAA,KAGd,CAACD,QAAA,CAAS,CAAC,YAAY,WAAW,eAAe6J,OAAA,IACjDzJ,IAAA,CAAKH,KAAA,EAAO,OACZA,KAAA;IAAA;IAGN,OAAO+e,IAAA;EAAA;EAGT,OAAOnX,OAAA;AAAA;;;ACv8BF,IAAMoL,SAAA,GAAYA,CACvB4P,OAAA,EACAvhB,OAAA,KAIsE,CAAC+H,IAAA,EAAMyZ,aAAA,KAAkB;EAE/F,IAAI,OAAOzZ,IAAA,CAAKxE,CAAA,IAAK,YAAY;IAC/B,OAAOwE,IAAA,CAAKxE,CAAA,CAAEvD,OAAA;EAAA;EAGhB,MAAMyhB,UAAA,GAAa1Z,IAAA,CAAKxE,CAAA,CAAEiE,KAAA,CAAM;EAKhC,IAAI,CAACga,aAAA,IAAiBC,UAAA,CAAW,MAAM,QAAQ1Z,IAAA,CAAKrE,CAAA,IAAKqE,IAAA,CAAKxE,CAAA,EAAG;IAC/D,OAAOwE,IAAA,CAAKrE,CAAA;EAAA;EASd,SAAS5B,KAAA,GAAQ2f,UAAA,CAAW1f,MAAA,EAAQD,KAAA,EAAOA,KAAA,IAAS;IAClD,MAAMsG,EAAA,GAAKtJ,IAAA,CAAK2iB,UAAA,CAAWliB,KAAA,CAAM,GAAGuC,KAAA;IAEpC,IAAIf,MAAA,CAAO2gB,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAKL,OAAA,EAASnZ,EAAA,GAAK;MACrD,MAAMyZ,MAAA,GAASN,OAAA,CAAQnZ,EAAA;MACvB,OAAO,OAAOyZ,MAAA,IAAU,aACpBA,MAAA,CAAOziB,IAAA,CAAKqiB,UAAA,EAAY3f,KAAA,GAAQ9B,OAAA,EAASoI,EAAA,IACzC,OAAOyZ,MAAA,IAAU,WACjB7hB,OAAA,CAAQwhB,aAAA,GAAgB,QAAQ,MAAMK,MAAA,IACtCA,MAAA;IAAA;EAAA;AAAA;;;AC5CV,IAAIC,EAAA;AAEG,IAAMC,QAAA,GAAW;AACjB,IAAMC,aAAA,GAAgB;AAEtB,IAAMC,sBAAA,GAA0Bpa,OAAA,IACrCA,OAAA,CAAQ,MAAM,MAAMzI,IAAA,CAAKyI,OAAA,IAAWA,OAAA;AAM/B,IAAMqa,QAAA,GAAWA,CACtBC,QAAA,EACAC,QAAA,EACA;EAAE5Z,KAAA,EAAAC,MAAA;EAAOsD;AAAA,MAC6C;EAEtD,MAAMsW,YAAA,GAAeA,CAACC,WAAA,EAAuBza,OAAA,KAA8B;IAEzE,IAAKia,EAAA,GAAIrZ,MAAA,CAAM,WAAWrJ,IAAA,CAAKyI,OAAA,GAAU,KAAM;MAC7C,OAAO;QAAA,CAAGvG,eAAA,CAAgBwgB,EAAA,IAAKQ;MAAA;IAAA;IAIjC,IAAIza,OAAA,IAAW,WAAWsa,QAAA,IAAY,SAAS;MAC7C,OAAO;QAAE,WAAWG;MAAA;IAAA;IAMtB,IAAKR,EAAA,GAAIC,QAAA,CAASQ,IAAA,CAAK1a,OAAA,GAAW;MAChC,OAAO;QAAA,CAAG,IAAI1G,MAAA,CAAO4K,GAAA,CAAK+V,EAAA,CAAsB,QAAQA,EAAA,CAAE,SAASQ;MAAA;IAAA;IAKrE,OAAO;MAAA,CACJF,QAAA,CAAShjB,IAAA,CAAKyI,OAAA,MACf,MACEA,OAAA,CAAQhI,OAAA,CACNmiB,aAAA,EACA,CAACpW,EAAA,EAAG4W,GAAA,EAAKC,QAAA,KAAYD,GAAA,GAAM,MAAMP,sBAAA,CAAuB,MAAMQ,QAAA,IAAW,OACvEH;IAAA;EAAA;EAKV,OAAO,CAACA,WAAA,EAAava,IAAA,KAASA,IAAA,CAAKzE,CAAA,CAAEof,WAAA,CAAYL,YAAA,EAAcC,WAAA;AAAA;;;ACuBjE,IAAIK,EAAA;AA+BG,IAAMC,oBAAA,GAAwBxc,GAAA,IAChC,GAAAuc,EAAA,GAAI,uCAAuCJ,IAAA,CAAKnc,GAAA,KAAQ,CAACuc,EAAA,CAAE,MAAMA,EAAA,CAAE,KAAK,KAAK,KAAK,KAAK,KACxF,OACF;AAGK,IAAME,mBAAA,GAAuBC,MAAA,IAA2B;EAC7DH,EAAA,GAAI;EAEJ,SAAS7gB,KAAA,GAAQghB,MAAA,CAAO/gB,MAAA,EAAQD,KAAA,KAAW;IACzC6gB,EAAA,IAAMjkB,QAAA,CAAS,OAAOokB,MAAA,CAAOhhB,KAAA;EAAA;EAG/B,OAAO6gB,EAAA;AAAA;AAGF,IAAMI,gBAAA,GAAoB3c,GAAA,IAAyB,CAAAyc,mBAAA,CAAoBzc,GAAA,IAAO,OAAO;AAe5F,IAAM4c,2BAAA,GAA8B,CACzB,OACA,MACA,MACA,KACA,MACA,SACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,SACA,SACA,SACA;AAGX,IAAMC,gBAAA,GAAoBC,WAAA,IACxB,MACC,EAAEP,EAAA,GAAIK,2BAAA,CAA4BnkB,OAAA,CAAQqkB,WAAA,CAAYrjB,OAAA,CAAQkiB,QAAA,EAAU,OAAOxiB,KAAA,CAAM,GAAG,OACrFojB,EAAA,GACA;AAGC,IAAMQ,+BAAA,GAAkCA,CAC7C1a,MAAA,EACA2Z,QAAA,KACG,CAACgB,UAAA,EAAoBvb,OAAA,KACxBub,UAAA,IAEE,CAAAT,EAAA,GAAIla,MAAA,CAAM,WAAWrJ,IAAA,CAAKyI,OAAA,GAAU,OAQjC,KAAK,KAAM+a,oBAAA,CAAqBthB,eAAA,CAAgBqhB,EAAA,KAEnD9a,OAAA,IAAW,UACT,KAAK,KAEN,CAAA8a,EAAA,GAAIP,QAAA,CAASva,OAAA,KAAYA,OAAA,CAAQhI,OAAA,CAAQmiB,aAAA,EAAe,QAAQ,MAAM,MACrEe,gBAAA,CAAiBJ,EAAA,IAEjBM,gBAAA,CAAiBpb,OAAA;AAoChB,IAAMwb,6BAAA,GAAiC1c,SAAA,IAC5CA,SAAA,CAAS,MAAM,MACX,IACAkc,mBAAA,CAAoBlc,SAAA,KAClB,CAAAgc,EAAA,GAAI,yEAAyEJ,IAAA,CAAK5b,SAAA,KAChF,CAAC,CAAC,CAACgc,EAAA,CAAE,MAAe,CAAC,CAAC,CAACA,EAAA,CAAE,KACzB,KACJ;;;AC7MN,IAAMW,cAAA,GAAiBA,CAAC5N,IAAA,EAAc9N,QAAA,KAA6BA,QAAA,GAAW,MAAM8N,IAAA,GAAO;AAoDpF,IAAM6N,SAAA,GAAYA,CACvB1f,MAAA,EACAue,QAAA,EACApiB,OAAA,KAC8F;EAC9F,MAAM;IAAEwI,KAAA,EAAAC,MAAA;IAAOsD;EAAA,IAAQ/L,OAAA;EAIvB,MAAMwjB,MAAA,GAASA,CAAC5X,EAAA,EAAWjF,SAAA,KAA6B,OAAOoF,GAAA,CAAIpF,SAAA;EAEnE,MAAM8c,OAAA,GAAW9kB,KAAA,IAAmC,GAAGA,KAAA,GAAQkB,OAAA,CAAQ,oBAAoB2jB,MAAA;EAG3F,MAAME,oBAAA,GAAuBA,CAC3B/c,SAAA,EACAhI,KAAA,EACAwa,SAAA,KACW;IACXxS,SAAA,GAAW8c,OAAA,CAAQ9c,SAAA;IAGnB,OAAOjG,KAAA,CAAMC,OAAA,CAAQhC,KAAA,IACjBG,IAAA,CACEH,KAAA,CAAMO,MAAA,CAAOC,OAAA,EAASe,GAAA,CAAKyjB,MAAA,IAAU9f,MAAA,CAAO8C,SAAA,EAAU8c,OAAA,CAAQE,MAAA,GAAQxK,SAAA,IACtE,OAEFtV,MAAA,CAAO8C,SAAA,EAAU8c,OAAA,CAAQ9kB,KAAA,GAAQwa,SAAA;EAAA;EAIvC,IAAIvO,MAAA;EAIJ,MAAMgZ,UAAA,GAAYA,CAEhBC,OAAA,EAEAjc,QAAA,EAEAwb,UAAA,EAEAhd,GAAA,EACA+S,SAAA,KACS;IACT,IAAIzY,KAAA,CAAMC,OAAA,CAAQyF,GAAA,GAAM;MACtBA,GAAA,CAAI7B,OAAA,CAASuf,IAAA,IAAQA,IAAA,IAAOF,UAAA,CAAUC,OAAA,EAASjc,QAAA,EAAUwb,UAAA,EAAYU,IAAA,EAAK3K,SAAA;MAC1E;IAAA;IAUF,IAAIzS,YAAA,GAAe;IAKnB,IAAIqd,qBAAA,GAAwB;IAG5B,IAAIC,oBAAA,GAAuB;IAE3B,IAAK5d,GAAA,CAAiB,WAAW;MAC/BA,GAAA,GAAMxF,KAAA,CACJb,SAAA,CAAUsG,KAAA,CAAOD,GAAA,CAAiB,YAAqBpG,OAAA,GACvD;QAAA,GAAMoG,GAAA;QAAkB,UAAU;MAAA,GAClCpG,OAAA;IAAA;IAKJe,MAAA,CAAOT,IAAA,CAAK8F,GAAA,EAAiB7B,OAAA,CAAS9D,GAAA,IAAQ;MAC5C,MAAM9B,KAAA,GAAQoB,SAAA,CAAWqG,GAAA,CAAiB3F,GAAA,GAAMT,OAAA;MAEhD,IAAIQ,aAAA,CAAcC,GAAA,EAAK9B,KAAA,GAAQ;QAC7B,IAAIA,KAAA,KAAU,MAAM8B,GAAA,CAAIsB,MAAA,GAAS,GAAG;UAElC,MAAM4E,SAAA,GAAW/G,SAAA,CAAUa,GAAA;UAG3BujB,oBAAA,IAAwB;UACxBD,qBAAA,GAAwB/hB,IAAA,CAAK7B,GAAA,CAC3B4jB,qBAAA,EACAV,6BAAA,CAA8B1c,SAAA;UAIhCD,YAAA,GACG,CAAAA,YAAA,IAAgBA,YAAA,GAAe,OAChCgd,oBAAA,CAAqB/c,SAAA,EAAUhI,KAAA,EAAqCwa,SAAA;QAAA;MAAA,WAE/Dxa,KAAA,EAAO;QAEhB,IAAI8B,GAAA,IAAO,WAAW;UACpBA,GAAA,GAAM;QAAA;QAMR,IAAIA,GAAA,CAAI,MAAM,KAAK;UACjB,IAAIA,GAAA,CAAI,MAAM,KAAK;YAEjBmjB,UAAA,CAAU,IAAI,IAAI,GAAGjlB,KAAA,EAA+Bwa,SAAA;UAAA,WAC3C1Y,GAAA,CAAI,MAAM,KAAK;YAExBmjB,UAAA,CAAU,IAAInjB,GAAA,EAAK,GAAG9B,KAAA,EAA+Bwa,SAAA;UAAA,WAC5C1Y,GAAA,CAAI,MAAM,KAAK;YASxB,MAAMwjB,WAAA,GAAcrZ,MAAA,CAAM7I,MAAA;YAE1B6hB,UAAA,CAAU,IAAI,IAAI,GAAGjlB,KAAA,EAA+Bwa,SAAA;YAEpD,MAAM+K,SAAA,GAAYtZ,MAAA,CAAMuZ,MAAA,CAAOF,WAAA,EAAarZ,MAAA,CAAM7I,MAAA,GAASkiB,WAAA;YAG3DrZ,MAAA,CAAMhI,IAAA,CAAK;cACTkE,CAAA,EAAGwc,cAAA,CACDxkB,IAAA,CACEolB,SAAA,CAAUhkB,GAAA,CAAKkQ,CAAA,IAAMA,CAAA,CAAEtJ,CAAA,GACvB,KAEFrG,GAAA;cAEF2P,CAAA,EAAG8T,SAAA,CAAUljB,MAAA,CAAO,CAACojB,GAAA,EAAKhU,CAAA,KAAMgU,GAAA,GAAMhU,CAAA,CAAEA,CAAA,EAAG;YAAA;UAAA,WAEpC3P,GAAA,CAAI,MAAM,KAAK;YAGxB;YAAE,CAAAC,KAAA,CAAMC,OAAA,CAAQhC,KAAA,IAASA,KAAA,GAAQ,CAACA,KAAA,GAAQ4F,OAAA,CACvCof,MAAA,IAAUA,MAAA,IAAS/Y,MAAA,CAAMhI,IAAA,CAAK;cAAEwN,CAAA,EAAG;cAAGtJ,CAAA,EAAG,GAAGrG,GAAA,IAAOkjB,MAAA;YAAA;UAAA,OAEjD;YAEL,IAAIljB,GAAA,CAAI,MAAM,KAAK;cACjBA,GAAA,GAAMa,eAAA,CAAgBtB,OAAA,CAAQwI,KAAA,CAAM,WAAWpJ,IAAA,CAAKqB,GAAA,EAAK,GAAG4jB,IAAA;YAAA;YAI9DT,UAAA,CACE,CAAC,GAAGC,OAAA,EAASpjB,GAAA,GACbmH,QAAA,EACAwb,UAAA,GAAaR,oBAAA,CAAqBniB,GAAA,IAAOsiB,gBAAA,CAAiBtiB,GAAA,GAC1D9B,KAAA,EACAwa,SAAA;UAAA;QAAA,OAGC;UAELyK,UAAA,CACEC,OAAA,EAGAjc,QAAA,GAEIA,QAAA,CAAS/H,OAAA,CACP,yCACA,CAAC+L,EAAA,EAAG0Y,YAAA,EAAsBC,KAAA,KACxB9jB,GAAA,CAAIZ,OAAA,CACF,yCACA,CAAC2kB,EAAA,EAAGC,OAAA,EAAiBC,MAAA,KAClB,CAAAhmB,QAAA,CAAS+lB,OAAA,EAAS,OACfA,OAAA,CAAQ5kB,OAAA,CAAQ,MAAMykB,YAAA,IACrB,CAAAA,YAAA,IAAgBA,YAAA,GAAe,OAAOG,OAAA,IAAWC,MAAA,IACtDH,KAAA,IAER9jB,GAAA,EACJ2iB,UAAA,EACAzkB,KAAA,EACAwa,SAAA;QAAA;MAAA;IAAA;IAQR,IAAI6K,oBAAA,EAAsB;MAGxBpZ,MAAA,CAAMhI,IAAA,CAAK;QAETkE,CAAA,EAAG+c,OAAA,CAAQnB,WAAA,CAAYY,cAAA,EAAgBA,cAAA,CAAe5c,YAAA,EAAckB,QAAA;QAGpEwI,CAAA,EACEgT,UAAA,IAEG,KAAK,MAEL,CAAAphB,IAAA,CAAK7B,GAAA,CAAI,GAAG,KAAK6jB,oBAAA,IAAwB,OAAO,IAI/C,CAAAD,qBAAA,IAAyB,MAAM;MAAA;IAAA;EAAA;EAK3C,MAAMY,iBAAA,GAAoBxB,+BAAA,CAAgC1a,MAAA,EAAO2Z,QAAA;EAEjE,OAAO,CAAChc,GAAA,EAAK/E,SAAA,EAAW0G,IAAA,EAAM6c,KAAA,GAAQ,MAAsB;IAE1DA,KAAA,KAAU;IAEVha,MAAA,GAAQ;IAERgZ,UAAA,CACE,IACAviB,SAAA,GAAY,MAAMF,MAAA,CAAOE,SAAA,IAAa,IAEtC0G,IAAA,GAAOA,IAAA,CAAKzE,CAAA,CAAEof,WAAA,CAAYiC,iBAAA,EAAmBC,KAAA,IAASA,KAAA,EACtDxe,GAAA,EACA2B,IAAA,IAAQA,IAAA,CAAKtE,CAAA;IAGf,OAAOmH,MAAA;EAAA;AAAA;;;AC3SJ,IAAMia,MAAA,GAASA,CACpB/M,KAAA,EACAgN,KAAA,EACAC,IAAA,EACA/kB,OAAA,KACyC;EAGzC,IAAIglB,iBAAA;EACJD,IAAA,CAAe,CAACpmB,KAAA,GAAQ,OAAQqmB,iBAAA,GAAoBrmB,KAAA;EAIpD,IAAIsmB,aAAA;EACJF,IAAA,CAAkB,CAACpmB,KAAA,GAAQ,IAAIumB,GAAA,OAAWD,aAAA,GAAgBtmB,KAAA;EAE1D,OAAO,CAAC;IAAEmI,CAAA,EAAGV,GAAA;IAAKgK,CAAA,EAAGgT;EAAA,MAAiB;IAEpC,IAAI,CAAC6B,aAAA,CAAcE,GAAA,CAAI/e,GAAA,GAAM;MAE3B6e,aAAA,CAAcG,GAAA,CAAIhf,GAAA;MAGlB,MAAMtE,KAAA,GAAQM,oBAAA,CAAqB4iB,iBAAA,EAAmB5B,UAAA;MAEtD,IAAI;QAEFtL,KAAA,CAAMG,MAAA,CAAO7R,GAAA,EAAKtE,KAAA;QAGlBkjB,iBAAA,CAAkBb,MAAA,CAAOriB,KAAA,EAAO,GAAGshB,UAAA;MAAA,SAC5BiC,KAAA,EAAP;QAKA,IAAI,CAAC,UAAUvE,IAAA,CAAK1a,GAAA,GAAM;UACxB0e,KAAA,CAAKzM,MAAA,CAAO;YAAEjQ,EAAA,EAAI;YAAoBhC,GAAA;YAAKif;UAAA,GAAyBrlB,OAAA;QAAA;MAAA;IAAA;EAAA;AAAA;;;ACV9E,IAAMslB,QAAA,GAAWA,CACf3mB,KAAA,EACAwiB,YAAA,EACAoE,QAAA,EACAC,OAAA,GAAUrE,YAAA,KACHxiB,KAAA,KAAU,QAAQ4mB,QAAA,GAAW5mB,KAAA,KAAU,OAAO6mB,OAAA,GAAU7mB,KAAA,IAASwiB,YAAA;AAE1E,IAAMsE,QAAA,GAAYX,KAAA,IACf,QAAOA,KAAA,IAAQ,WACX;EAAEje,CAAA,EAAG+R,MAAA;EAAQxC,CAAA,EAAGqC,IAAA;EAAMhV,CAAA,EAAGqV;AAAA,EAAkCgM,KAAA,CAAK,MACjEA,KAAA,KAASrM,IAAA;AAGf,IAAMiN,eAAA,GAAkB;EAAE1d,CAAA,EAAG;IAAErJ,KAAA,EAAO;IAAIgnB,QAAA,EAAU;EAAA;AAAA;AAE7C,IAAMC,SAAA,GAAYA,CACvB5E,MAAA,GAAwB,OAIrB;EACH,MAAMvY,MAAA,GAAQsY,iBAAA,CAAkBC,MAAA,CAAOxY,KAAA;EAEvC,MAAMsc,KAAA,GAAOW,QAAA,CAASzE,MAAA,CAAO5I,IAAA;EAE7B,MAAMyN,IAAA,GAAOP,QAAA,CAAyBtE,MAAA,CAAO6E,IAAA,EAAM,OAAO,OAAOjkB,MAAA;EAEjE,MAAMuX,SAAA,GAAY6H,MAAA,CAAO7H,SAAA;EAQzB,IAAI2M,UAAA,GAA2C;IAAExiB,CAAA,EAAG;EAAA;EAEpD,IAAIyiB,cAAA,GAAiB;EACrB,MAAMC,gBAAA,GAAkD;EAGxD,MAAMhmB,OAAA,GAAmB;IAEvBimB,EAAA,EAAIA,CAAA,GAAI5gB,MAAA,KAAoC6gB,OAAA,CAAQ7gB,MAAA;IAEpDmD,KAAA,EAAQA,CAACD,OAAA,EAAsB9H,GAAA,EAAyB0gB,YAAA,KAAoC;MA/EhG,IAAAzW,EAAA;MAgFM,MAAM/L,KAAA,GAEJ,CAAA+L,EAAA,GAAAjC,MAAA,CAAMF,OAAA,EAAS9H,GAAA,EAAe0gB,YAAA,MAA9B,OAAAzW,EAAA,GAEAoa,KAAA,CAAKxM,OAAA,CACH/P,OAAA,EACA9H,GAAA,IAAO,QAAQC,KAAA,CAAMC,OAAA,CAAQF,GAAA,IAAOA,GAAA,GAAMA,GAAA,CAAI+G,KAAA,CAAM,MACpD2Z,YAAA,IAAgB,MAChBnhB,OAAA;MAIJ,OAAO8lB,UAAA,CAAWtiB,CAAA,IAAK7E,KAAA,IAASD,QAAA,CAAS,MAAO,QAAOC,KAAA,EAAO,MAC1D,QAAQA,KAAA,WACRA,KAAA;IAAA;IAGNoN,GAAA,EAAMpN,KAAA,IAAWknB,IAAA,GAAOA,IAAA,CAAKlnB,KAAA,IAASA,KAAA;IAEtCyH,GAAA,EAAMwE,MAAA,IAAU;MACdmb,cAAA;MACA,MAAMI,qBAAA,GAAwBH,gBAAA,CAAiBjkB,MAAA;MAE/C,IAAI;QAEF;QAAE,QAAO6I,MAAA,IAAS,WAAWxF,KAAA,CAAM,CAACwF,MAAA,KAAUA,MAAA,EAAOrG,OAAA,CAAQ6hB,OAAA;QAE7D,MAAMhgB,GAAA,GAAMrF,MAAA,CAAOslB,MAAA,CAAO,MAAMX,eAAA;QAEhC,SAAS5jB,KAAA,GAAQqkB,qBAAA,EAAuBrkB,KAAA,GAAQkkB,gBAAA,CAAiBjkB,MAAA,EAAQD,KAAA,IAAS;UAChF,MAAMwgB,WAAA,GAAc0D,gBAAA,CAAiBlkB,KAAA;UAErC,IAAIwgB,WAAA,EAAa;YACf,QAAQ,OAAOA,WAAA;cAAA,KACR;gBACH1hB,KAAA,CAAMwF,GAAA,EAAKkc,WAAA,EAAatiB,OAAA;gBACxB;cAAA,KACG;gBACHoG,GAAA,CAAI4B,CAAA,IAAM,CAAA5B,GAAA,CAAI4B,CAAA,IAAK,OAAOsa,WAAA;YAAA;UAAA;QAAA;QAKlC,OAAOlc,GAAA;MAAA,UACP;QACA4f,gBAAA,CAAiBjkB,MAAA,GAASokB,qBAAA;QAC1BJ,cAAA;MAAA;IAAA;EAAA;EAMN,MAAMO,UAAA,GAAY3U,SAAA,CAAc;IAAA,GAAK9F,WAAA;IAAA,GAAgBmV,MAAA,CAAOO;EAAA,GAAWvhB,OAAA;EAKvE,MAAMumB,WAAA,GAAexe,IAAA,IAA6D;IAEhF,MAAMye,UAAA,GAAaV,UAAA;IACnBA,UAAA,GAAa/d,IAAA;IAEb,IAAI;MACF,OAAOhI,SAAA,CAAUumB,UAAA,CAAUve,IAAA,GAAO/H,OAAA;IAAA,UAClC;MACA8lB,UAAA,GAAaU,UAAA;IAAA;EAAA;EAIjB,MAAMpE,QAAA,GAAW;IAAA,GAAKzL,YAAA;IAAA,GAAiBqK,MAAA,CAAOoB;EAAA;EAG9C,MAAMqE,SAAA,GAAWvE,QAAA,CAAalB,MAAA,CAAOmB,QAAA,IAAY,SAASC,QAAA,EAAUpiB,OAAA;EAGpE,MAAM0mB,UAAA,GAAYnD,SAAA,CAAc+B,QAAA,CAAStE,MAAA,CAAOnd,MAAA,EAAQuV,UAAA,EAAYF,QAAA,GAAWkJ,QAAA,EAAUpiB,OAAA;EAEzF,MAAM8X,KAAA,GAAQkJ,MAAA,CAAOlJ,KAAA,KAAU,OAAO6O,MAAA,IAAU,cAAcxO,SAAA,KAAcN,UAAA,CAAWmJ,MAAA;EAEvF,MAAM;IAAE+D,IAAA,GAAQ6B,QAAA,IAAaA,QAAA;EAAA,IAAe9O,KAAA;EAG5C,MAAM+O,OAAA,GAAShC,MAAA,CAAW/M,KAAA,EAAOgN,KAAA,EAAMC,IAAA,EAAM/kB,OAAA;EAG7C,IAAI8mB,aAAA;EACJ/B,IAAA,CAA0B,CAACpmB,KAAA,GAAQ,IAAIqH,GAAA,OAAW8gB,aAAA,GAAgBnoB,KAAA;EAGlE,MAAMooB,mBAAA,GAAsB,IAAItiB,OAAA;EAGhC,MAAMuiB,iBAAA,GAAoBA,CAACvmB,GAAA,EAAa9B,KAAA,KACtC8B,GAAA,IAAO,MACH,SACA,OAAO9B,KAAA,IAAS,aAChBgH,IAAA,CAAKF,SAAA,CAAU1F,SAAA,CAAUpB,KAAA,EAAOqB,OAAA,GAAUgnB,iBAAA,IAC1CroB,KAAA;EAGN,MAAMynB,OAAA,GAAWre,IAAA,IAA0C;IAGzD,IAAI,CAACge,cAAA,IAAkBD,UAAA,CAAWxiB,CAAA,CAAEvB,MAAA,EAAQ;MAC1CgG,IAAA,GAAO;QAAA,GAAKA,IAAA;QAAMzE,CAAA,EAAG,CAAC,GAAGwiB,UAAA,CAAWxiB,CAAA,EAAG,GAAGyE,IAAA,CAAKzE,CAAA;QAAII,CAAA,EAAG;MAAA;IAAA;IAKxD,IAAI,CAACqE,IAAA,CAAKrE,CAAA,EAAG;MAIXqE,IAAA,CAAKrE,CAAA,GAAIoE,aAAA,CAAcC,IAAA,EAAMgf,mBAAA,CAAoBliB,GAAA,CAAIkD,IAAA,CAAKxE,CAAA;IAAA;IAI5D,IAAIlC,SAAA,GAAY0kB,cAAA,GAAiB,OAAOe,aAAA,CAAcjiB,GAAA,CAAIkD,IAAA,CAAKrE,CAAA;IAE/D,IAAIrC,SAAA,IAAa,MAAM;MAErB,IAAIihB,WAAA,GAAciE,WAAA,CAAYxe,IAAA;MAG9B,IAAI,CAACA,IAAA,CAAKrE,CAAA,EAAG;QAOXqE,IAAA,CAAKrE,CAAA,GAAI9B,MAAA,CAAO+D,IAAA,CAAKF,SAAA,CAAU6c,WAAA,EAAa0E,iBAAA;QAG5CD,mBAAA,CAAoB5hB,GAAA,CAAI4C,IAAA,CAAKxE,CAAA,EAAsBwE,IAAA,CAAKrE,CAAA;QAGxDqE,IAAA,CAAKrE,CAAA,GAAIoE,aAAA,CAAcC,IAAA,EAAMA,IAAA,CAAKrE,CAAA;MAAA;MAGpC,IAAI4e,WAAA,IAAe,OAAOA,WAAA,IAAe,UAAU;QACjDva,IAAA,CAAKzE,CAAA,GAAIyE,IAAA,CAAKzE,CAAA,CAAEpD,GAAA,CAAI+hB,sBAAA;QACpB,IAAI9I,SAAA,EAAWpR,IAAA,CAAKtE,CAAA,GAAI0V,SAAA;QAGxBmJ,WAAA,GAAcmE,SAAA,CAASnE,WAAA,EAAava,IAAA;QAEpC,IAAIge,cAAA,EAAgB;UAClBC,gBAAA,CAAiBpjB,IAAA,CAAK0f,WAAA;QAAA,OACjB;UAIL,MAAMsC,KAAA,GAAQ,OAAO7c,IAAA,CAAKxE,CAAA,IAAK,aAAc,OAAO+e,WAAA,CAAYta,CAAA,IAAK,WAAW,IAAI,IAAK;UAEzF3G,SAAA,GACEwkB,IAAA,IAAQ,OAAO9d,IAAA,CAAKxE,CAAA,IAAK,aAAc,CAAAsiB,IAAA,IAAQjkB,MAAA,EAAQgjB,KAAA,GAAQ7c,IAAA,CAAKrE,CAAA,IAAKqE,IAAA,CAAKrE,CAAA;UAIhFgjB,UAAA,CAAUpE,WAAA,EAAajhB,SAAA,EAAW0G,IAAA,EAAM6c,KAAA,EAAOrgB,OAAA,CAAQsiB,OAAA;UAEvD,IAAIvE,WAAA,CAAYta,CAAA,EAAG;YACjB3G,SAAA,IAAa,MAAMihB,WAAA,CAAYta,CAAA;UAAA;QAAA;MAAA,OAG9B;QAEL,IAAI,OAAOsa,WAAA,IAAe,UAAU;UAElCjhB,SAAA,GAAYihB,WAAA;QAAA,OACP;UAELjhB,SAAA,GAAY0G,IAAA,CAAKrE,CAAA;UACjBohB,KAAA,CAAKzM,MAAA,CAAO;YAAEjQ,EAAA,EAAI;YAAqBL,IAAA,EAAM1G;UAAA,GAAarB,OAAA;QAAA;QAG5D,IAAI+lB,cAAA,IAAkB,OAAOhe,IAAA,CAAKxE,CAAA,KAAM,YAAY;UAClDyiB,gBAAA,CAAiBpjB,IAAA,CAAKvB,SAAA;QAAA;MAAA;MAI1B,IAAI,CAAC0kB,cAAA,EAAgB;QAEnBe,aAAA,CAAc3hB,GAAA,CAAI4C,IAAA,CAAKrE,CAAA,EAAGrC,SAAA;QAG1BpB,aAAA,CAAc6mB,aAAA,EAAe;MAAA;IAAA;IAIjC,OAAOzlB,SAAA;EAAA;EAKT,MAAM6kB,OAAA,GAAW7gB,MAAA,IACfvG,IAAA,CAAKsG,KAAA,CAAMC,MAAA,EAAQnF,GAAA,CAAIkmB,OAAA,EAASlnB,MAAA,CAAOC,OAAA,GAAsB;EAG/D,MAAM8nB,SAAA,GAAY3B,QAAA,CAAuCtE,MAAA,CAAOiG,SAAA,EAAWznB,QAAA,EAAU;EAErF,IAAIynB,SAAA,EAAW;IAEb,MAAM7gB,GAAA,GAAM8O,eAAA,CAAgBzM,MAAA;IAG5B,MAAMye,MAAA,GAASR,UAAA,CACb,OAAOO,SAAA,IAAa,aAChBlnB,SAAA,CAAUknB,SAAA,CAAU7gB,GAAA,EAAKpG,OAAA,GAAUA,OAAA,KAAYoG,GAAA,GAC/C;MAAA,GAAKA,GAAA;MAAA,GAAQ6gB;IAAA;IAGnBlC,IAAA,CAAc,CAACoC,QAAA,IAAYD,MAAA,CAAO3iB,OAAA,CAAQsiB,OAAA,GAAS,UAAUM,QAAA;EAAA;EAG/D,OAAO;IACLpC,IAAA,EAAMA,CAAA,KAAMD,KAAA,CAAKzM,MAAA,CAAO;MAAEjQ,EAAA,EAAI;IAAA,GAAqBpI,OAAA;IACnDkmB;EAAA;AAAA;;;ACtSG,IAAMG,MAAA,GAAUrF,MAAA,IAAqC;EAY1D,IAAIkF,OAAA,GAAW7gB,MAAA,IAA4C;IAEzD0f,IAAA;IACA,OAAOmB,OAAA,CAAQ7gB,MAAA;EAAA;EAIjB,IAAI0f,IAAA,GAAQqC,OAAA,IAAiC;IAK3C;IAAE;MAAElB,OAAA;MAASnB;IAAA,IAASa,SAAA,CAAUwB,OAAA;EAAA;EAIlC,IAAIpG,MAAA,EAAQ+D,IAAA,CAAK/D,MAAA;EAEjB,IAAIhhB,OAAA;EACJ,MAAMqnB,WAAA,GAA0C5mB,GAAA,IAAa,MAAoB;IAC/E,IAAI,CAACT,OAAA,EAAS;MACZkmB,OAAA,CAAQ,CACLta,EAAA,IAAe;QACd5L,OAAA,GAAU4L,EAAA;QACV,OAAO;MAAA;IAAA;IAKb,OAAO5L,OAAA,CAAQS,GAAA;EAAA;EAMjB,OAAO;IACLwlB,EAAA,EAAIllB,MAAA,CAAOumB,gBAAA,CAAkB,IAAIjiB,MAAA,KAAoC6gB,OAAA,CAAQ7gB,MAAA,GAAgB;MAC3FmD,KAAA,EAAO;QACL3D,GAAA,EAAKwiB,WAAA,CAAY;MAAA;IAAA;IAUrBE,KAAA,EAAQH,OAAA,IAAWrC,IAAA,CAAKqC,OAAA;EAAA;AAAA;;;AC9DrB,IAAM;EAAEnB,EAAA;EAAIsB;AAAA,IAAwB,eAAAlB,MAAA;;;ACCpC,IAAMmB,YAAA,GAAgBC,UAAA,IAC3BriB,KAAA,CAAMqiB,UAAA,EACHvnB,GAAA,CAAK6H,IAAA,IAASD,aAAA,CAAcC,IAAA,GAC5BjJ,IAAA,CAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}